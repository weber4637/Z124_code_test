

//***********************************************************************
//*                                                                     *
//*   Copyright (c) 1985-2019, American Megatrends International LLC.   *
//*                                                                     *
//*      All rights reserved. Subject to AMI licensing agreement.       *
//*                                                                     *
//***********************************************************************

//**********************************************************************
//<AMI_FHDR_START>
//
// Name: FboGroupForm.vfr
//
// Description:
//
//<AMI_FHDR_END>
//**********************************************************************

#include <Token.h>
#include "Build/AutoId.h"
#include "AmiModulePkg/FixedBootOrder/FixedBootOrder.h"

#if 0
STRING_TOKEN(STR_DISABLED)
STRING_TOKEN(STR_BOOT_OPTION_HELP)
 STRING_TOKEN(STR_LEGACY_BOOT_ORDER_1)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_2)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_3)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_4)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_5)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_6)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_7)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_8)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_9)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_10)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_11)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_12)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_13)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_14)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_15)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_16)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_17)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_18)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_19)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_20)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_21)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_22)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_23)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_24)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_25)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_26)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_27)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_28)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_29)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_30)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_31)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_32)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_33)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_34)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_35)
  STRING_TOKEN(STR_LEGACY_BOOT_ORDER_36)

 STRING_TOKEN(STR_UEFI_BOOT_ORDER_1)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_2)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_3)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_4)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_5)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_6)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_7)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_8)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_9)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_10)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_11)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_12)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_13)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_14)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_15)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_16)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_17)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_18)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_19)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_20)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_21)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_22)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_23)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_24)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_25)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_26)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_27)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_28)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_29)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_30)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_31)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_32)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_33)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_34)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_35)
  STRING_TOKEN(STR_UEFI_BOOT_ORDER_36)

#endif

formset guid  = FBO_GROUP_FORM_FORM_SET_GUID,
	title     = STRING_TOKEN(STR_FBO_GROUP_FORM_SUBTITLE),
 	help      = STRING_TOKEN(STR_FBO_GROUP_FORM_HELP),
    class     = FBO_GROUP_FORM_FORM_SET_CLASS,
    subclass  = 0,  
            
    varstore FIXED_BOOT_SETUP,
        varid  = FIXED_BOOT_GROUP_KEY,
        name  = FixedBoot,
        guid  = FBO_GROUP_FORM_FORM_SET_GUID;
        
        //--------------------------------------------------
        //  UEFI GROUP FORM ITEM
        //--------------------------------------------------

form formid = UEFI_HDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_HDD_BOOT_ORDER_SUBTITLE);
    label  UEFI_HDD_BOOT_FORM_LABEL;
    label  UEFI_HDD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_NVME_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_NVME_BOOT_ORDER_SUBTITLE);
    label  UEFI_NVME_BOOT_FORM_LABEL;
    label  UEFI_NVME_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_ODD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_ODD_BOOT_ORDER_SUBTITLE);
    label  UEFI_ODD_BOOT_FORM_LABEL;
    label  UEFI_ODD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_SD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_SD_BOOT_ORDER_SUBTITLE);
    label  UEFI_SD_BOOT_FORM_LABEL;
    label  UEFI_SD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_USBHDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_USBHDD_BOOT_ORDER_SUBTITLE);
    label  UEFI_USBHDD_BOOT_FORM_LABEL;
    label  UEFI_USBHDD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_USBODD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_USBODD_BOOT_ORDER_SUBTITLE);
    label  UEFI_USBODD_BOOT_FORM_LABEL;
    label  UEFI_USBODD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_USBKEY_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_USBKEY_BOOT_ORDER_SUBTITLE);
    label  UEFI_USBKEY_BOOT_FORM_LABEL;
    label  UEFI_USBKEY_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_USBFDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_USBFDD_BOOT_ORDER_SUBTITLE);
    label  UEFI_USBFDD_BOOT_FORM_LABEL;
    label  UEFI_USBFDD_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_USBLAN_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_USBLAN_BOOT_ORDER_SUBTITLE);
    label  UEFI_USBLAN_BOOT_FORM_LABEL;
    label  UEFI_USBLAN_BOOT_FORM_LABEL_END;
endform;


form formid = UEFI_NETWORK_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_UEFI_NETWORK_BOOT_ORDER_SUBTITLE);
    label  UEFI_NETWORK_BOOT_FORM_LABEL;
    label  UEFI_NETWORK_BOOT_FORM_LABEL_END;
endform;



#if CSM_SUPPORT
        //--------------------------------------------------
        //  LEGACY GROUP FORM ITEM
        //--------------------------------------------------

form formid = HDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_HDD_BOOT_ORDER_SUBTITLE);
    label  HDD_BOOT_FORM_LABEL;
    label  HDD_BOOT_FORM_LABEL_END;
endform;


form formid = NVME_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_NVME_BOOT_ORDER_SUBTITLE);
    label  NVME_BOOT_FORM_LABEL;
    label  NVME_BOOT_FORM_LABEL_END;
endform;


form formid = ODD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_ODD_BOOT_ORDER_SUBTITLE);
    label  ODD_BOOT_FORM_LABEL;
    label  ODD_BOOT_FORM_LABEL_END;
endform;


form formid = SD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_SD_BOOT_ORDER_SUBTITLE);
    label  SD_BOOT_FORM_LABEL;
    label  SD_BOOT_FORM_LABEL_END;
endform;


form formid = USBHDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_USBHDD_BOOT_ORDER_SUBTITLE);
    label  USBHDD_BOOT_FORM_LABEL;
    label  USBHDD_BOOT_FORM_LABEL_END;
endform;


form formid = USBODD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_USBODD_BOOT_ORDER_SUBTITLE);
    label  USBODD_BOOT_FORM_LABEL;
    label  USBODD_BOOT_FORM_LABEL_END;
endform;


form formid = USBKEY_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_USBKEY_BOOT_ORDER_SUBTITLE);
    label  USBKEY_BOOT_FORM_LABEL;
    label  USBKEY_BOOT_FORM_LABEL_END;
endform;


form formid = USBFDD_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_USBFDD_BOOT_ORDER_SUBTITLE);
    label  USBFDD_BOOT_FORM_LABEL;
    label  USBFDD_BOOT_FORM_LABEL_END;
endform;


form formid = USBLAN_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_USBLAN_BOOT_ORDER_SUBTITLE);
    label  USBLAN_BOOT_FORM_LABEL;
    label  USBLAN_BOOT_FORM_LABEL_END;
endform;


form formid = NETWORK_BOOT_FORM_ID,
    title = STRING_TOKEN(STR_NETWORK_BOOT_ORDER_SUBTITLE);
    label  NETWORK_BOOT_FORM_LABEL;
    label  NETWORK_BOOT_FORM_LABEL_END;
endform;



#endif
    
endformset;
