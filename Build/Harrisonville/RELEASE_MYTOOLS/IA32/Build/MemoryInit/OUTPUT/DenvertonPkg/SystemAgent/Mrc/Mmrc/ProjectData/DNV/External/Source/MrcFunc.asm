; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	d:\bios\z124-002\z124-002\DenvertonPkg\SystemAgent\Mrc\Mmrc\ProjectData\DNV\External\Source\MrcFunc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_CPGC_CONFIG_TYPES:DWORD
_DATA	ENDS
PUBLIC	_BitScanForward8
; Function compile flags: /Ogspy
;	COMDAT _BitScanForward8
_TEXT	SEGMENT
_Index$ = 8						; size = 4
_Input$ = 8						; size = 1
_BitScanForward8 PROC					; COMDAT
; File d:\bios\z124-002\z124-002\denvertonpkg\systemagent\mrc\mmrc\projectdata\dnv\external\source\mrcfunc.c
; Line 33
	push	ebp
	mov	ebp, esp
; Line 40
	movzx	eax, BYTE PTR _Input$[ebp]
	bsf	eax, eax
	mov	DWORD PTR _Index$[ebp], eax
; Line 43
	pop	ebp
	ret	0
_BitScanForward8 ENDP
_TEXT	ENDS
PUBLIC	_BitScanReverse32
; Function compile flags: /Ogspy
;	COMDAT _BitScanReverse32
_TEXT	SEGMENT
_Index$ = -4						; size = 4
_Input$ = 8						; size = 4
_BitScanReverse32 PROC					; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 64
	bsr	eax, DWORD PTR _Input$[ebp]
	mov	DWORD PTR _Index$[ebp], eax
; Line 67
	leave
	ret	0
_BitScanReverse32 ENDP
_TEXT	ENDS
PUBLIC	_FillFastBootDataStructure
; Function compile flags: /Ogspy
;	COMDAT _FillFastBootDataStructure
_TEXT	SEGMENT
tv734 = -20						; size = 4
tv825 = -16						; size = 4
tv2797 = -12						; size = 4
tv2817 = -8						; size = 4
tv2474 = -4						; size = 4
_MrcData$ = 8						; size = 4
_FillFastBootDataStructure PROC				; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR _MrcData$[ebp]
; Line 77
	and	DWORD PTR tv2474[ebp], 0
	push	ebx
	push	esi
	push	edi
	push	2
	lea	edi, DWORD PTR [eax+55385]
	mov	DWORD PTR tv2817[ebp], -55385		; ffff27a7H
	sub	DWORD PTR tv2817[ebp], eax
	pop	edx
	mov	DWORD PTR tv2797[ebp], edi
	mov	DWORD PTR tv734[ebp], edx
$LL16@FillFastBo:
	mov	ecx, DWORD PTR tv2817[ebp]
	lea	esi, DWORD PTR [ecx+edi]
; Line 78
	xor	ecx, ecx
	mov	DWORD PTR tv825[ebp], edx
$LL17@FillFastBo:
; Line 79
	mov	dl, BYTE PTR [edi-24113]
	cmp	dl, 3
	ja	$LN3@FillFastBo
; Line 80
	mov	edx, DWORD PTR tv2474[ebp]
	add	edx, ecx
	imul	edx, 514				; 00000202H
	lea	edi, DWORD PTR [edx+eax]
	mov	bl, BYTE PTR [edi+28748]
	lea	edx, DWORD PTR [ecx+esi*2+55340]
	mov	BYTE PTR [edx+eax], bl
; Line 81
	mov	bl, BYTE PTR [edi+28749]
	lea	edx, DWORD PTR [ecx+esi*2+55344]
	mov	BYTE PTR [edx+eax], bl
; Line 82
	mov	bl, BYTE PTR [edi+28750]
	lea	edx, DWORD PTR [ecx+esi*2+55348]
	mov	BYTE PTR [edx+eax], bl
; Line 83
	mov	bl, BYTE PTR [edi+28751]
	lea	edx, DWORD PTR [ecx+esi*2+55352]
	mov	BYTE PTR [edx+eax], bl
; Line 84
	mov	bl, BYTE PTR [edi+28752]
	lea	edx, DWORD PTR [ecx+esi*2+55356]
	mov	BYTE PTR [edx+eax], bl
; Line 85
	mov	bl, BYTE PTR [edi+28753]
	lea	edx, DWORD PTR [ecx+esi*2+55360]
	mov	BYTE PTR [edx+eax], bl
; Line 86
	mov	bl, BYTE PTR [edi+28754]
	lea	edx, DWORD PTR [ecx+esi*2+55364]
	mov	BYTE PTR [edx+eax], bl
; Line 87
	mov	bl, BYTE PTR [edi+28755]
	lea	edx, DWORD PTR [ecx+esi*2+55368]
	mov	BYTE PTR [edx+eax], bl
; Line 88
	mov	bl, BYTE PTR [edi+28756]
	lea	edx, DWORD PTR [ecx+esi*2+55372]
	mov	BYTE PTR [edx+eax], bl
; Line 89
	mov	bl, BYTE PTR [edi+28638]
	lea	edx, DWORD PTR [ecx+esi*2+55376]
	jmp	$LN18@FillFastBo
$LN3@FillFastBo:
; Line 90
	cmp	dl, 7
	jne	$LN5@FillFastBo
; Line 92
	mov	edx, DWORD PTR tv2474[ebp]
	add	edx, ecx
	imul	edx, 514				; 00000202H
	lea	edi, DWORD PTR [edx+eax]
	mov	bl, BYTE PTR [edi+28632]
	lea	edx, DWORD PTR [ecx+esi*2+55192]
	mov	BYTE PTR [edx+eax], bl
; Line 93
	mov	bl, BYTE PTR [edi+28636]
	lea	edx, DWORD PTR [ecx+esi*2+55196]
	mov	BYTE PTR [edx+eax], bl
; Line 94
	mov	bl, BYTE PTR [edi+28637]
	lea	edx, DWORD PTR [ecx+esi*2+55200]
	mov	BYTE PTR [edx+eax], bl
; Line 95
	mov	bl, BYTE PTR [edi+28638]
	lea	edx, DWORD PTR [ecx+esi*2+55204]
	mov	BYTE PTR [edx+eax], bl
; Line 96
	mov	bl, BYTE PTR [edi+28639]
	lea	edx, DWORD PTR [ecx+esi*2+55208]
	mov	BYTE PTR [edx+eax], bl
; Line 97
	mov	bl, BYTE PTR [edi+28640]
	lea	edx, DWORD PTR [ecx+esi*2+55212]
	mov	BYTE PTR [edx+eax], bl
; Line 98
	mov	bl, BYTE PTR [edi+28642]
	lea	edx, DWORD PTR [ecx+esi*2+55216]
	mov	BYTE PTR [edx+eax], bl
; Line 99
	mov	bl, BYTE PTR [edi+28643]
	lea	edx, DWORD PTR [ecx+esi*2+55220]
	mov	BYTE PTR [edx+eax], bl
; Line 100
	mov	bl, BYTE PTR [edi+28644]
	lea	edx, DWORD PTR [ecx+esi*2+55224]
	mov	BYTE PTR [edx+eax], bl
; Line 101
	mov	bl, BYTE PTR [edi+28645]
	lea	edx, DWORD PTR [ecx+esi*2+55228]
	mov	BYTE PTR [edx+eax], bl
; Line 102
	mov	bl, BYTE PTR [edi+28648]
	lea	edx, DWORD PTR [ecx+esi*2+55232]
	mov	BYTE PTR [edx+eax], bl
; Line 103
	mov	bl, BYTE PTR [edi+28649]
	lea	edx, DWORD PTR [ecx+esi*2+55236]
	mov	BYTE PTR [edx+eax], bl
; Line 104
	mov	bl, BYTE PTR [edi+28650]
	lea	edx, DWORD PTR [ecx+esi*2+55240]
	mov	BYTE PTR [edx+eax], bl
; Line 105
	mov	bl, BYTE PTR [edi+28651]
	lea	edx, DWORD PTR [ecx+esi*2+55244]
	mov	BYTE PTR [edx+eax], bl
; Line 106
	mov	bl, BYTE PTR [edi+28652]
	lea	edx, DWORD PTR [ecx+esi*2+55248]
	mov	BYTE PTR [edx+eax], bl
; Line 107
	mov	bl, BYTE PTR [edi+28653]
	lea	edx, DWORD PTR [ecx+esi*2+55252]
	mov	BYTE PTR [edx+eax], bl
; Line 108
	mov	bl, BYTE PTR [edi+28654]
	lea	edx, DWORD PTR [ecx+esi*2+55256]
	mov	BYTE PTR [edx+eax], bl
; Line 109
	mov	bl, BYTE PTR [edi+28655]
	lea	edx, DWORD PTR [ecx+esi*2+55260]
	mov	BYTE PTR [edx+eax], bl
; Line 110
	mov	bl, BYTE PTR [edi+28656]
	lea	edx, DWORD PTR [ecx+esi*2+55264]
	mov	BYTE PTR [edx+eax], bl
; Line 111
	mov	bl, BYTE PTR [edi+28657]
	lea	edx, DWORD PTR [ecx+esi*2+55268]
	mov	BYTE PTR [edx+eax], bl
; Line 112
	mov	bl, BYTE PTR [edi+28658]
	lea	edx, DWORD PTR [ecx+esi*2+55272]
	mov	BYTE PTR [edx+eax], bl
; Line 113
	mov	bl, BYTE PTR [edi+28659]
	lea	edx, DWORD PTR [ecx+esi*2+55276]
	mov	BYTE PTR [edx+eax], bl
; Line 114
	mov	bl, BYTE PTR [edi+28660]
	lea	edx, DWORD PTR [ecx+esi*2+55280]
	mov	BYTE PTR [edx+eax], bl
; Line 115
	mov	bl, BYTE PTR [edi+28661]
	lea	edx, DWORD PTR [ecx+esi*2+55284]
	mov	BYTE PTR [edx+eax], bl
; Line 116
	mov	bl, BYTE PTR [edi+28662]
	lea	edx, DWORD PTR [ecx+esi*2+55288]
	mov	BYTE PTR [edx+eax], bl
; Line 117
	mov	bl, BYTE PTR [edi+28667]
	lea	edx, DWORD PTR [ecx+esi*2+55292]
	mov	BYTE PTR [edx+eax], bl
; Line 118
	mov	bl, BYTE PTR [edi+28668]
	lea	edx, DWORD PTR [ecx+esi*2+55296]
	mov	BYTE PTR [edx+eax], bl
; Line 119
	mov	bl, BYTE PTR [edi+28669]
	lea	edx, DWORD PTR [ecx+esi*2+55300]
	mov	BYTE PTR [edx+eax], bl
; Line 120
	mov	bl, BYTE PTR [edi+28670]
	lea	edx, DWORD PTR [ecx+esi*2+55304]
	mov	BYTE PTR [edx+eax], bl
; Line 121
	mov	bl, BYTE PTR [edi+28671]
	lea	edx, DWORD PTR [ecx+esi*2+55308]
	mov	BYTE PTR [edx+eax], bl
; Line 122
	mov	bl, BYTE PTR [edi+28748]
	lea	edx, DWORD PTR [ecx+esi*2+55312]
	mov	BYTE PTR [edx+eax], bl
; Line 123
	mov	bl, BYTE PTR [edi+28751]
	lea	edx, DWORD PTR [ecx+esi*2+55316]
	mov	BYTE PTR [edx+eax], bl
; Line 124
	mov	bl, BYTE PTR [edi+28752]
	lea	edx, DWORD PTR [ecx+esi*2+55320]
	mov	BYTE PTR [edx+eax], bl
; Line 125
	mov	bl, BYTE PTR [edi+28753]
	lea	edx, DWORD PTR [ecx+esi*2+55324]
	mov	BYTE PTR [edx+eax], bl
; Line 126
	mov	bl, BYTE PTR [edi+28754]
	lea	edx, DWORD PTR [ecx+esi*2+55328]
	mov	BYTE PTR [edx+eax], bl
; Line 127
	mov	bl, BYTE PTR [edi+28755]
	lea	edx, DWORD PTR [ecx+esi*2+55332]
	mov	BYTE PTR [edx+eax], bl
; Line 128
	mov	bl, BYTE PTR [edi+28756]
	lea	edx, DWORD PTR [ecx+esi*2+55336]
	mov	BYTE PTR [edx+eax], bl
; Line 130
	mov	bl, BYTE PTR [edi+28951]
	lea	edx, DWORD PTR [ecx+esi*2+55340]
	mov	BYTE PTR [edx+eax], bl
; Line 131
	mov	bl, BYTE PTR [edi+28952]
	lea	edx, DWORD PTR [ecx+esi*2+55344]
	mov	BYTE PTR [edx+eax], bl
; Line 132
	mov	bl, BYTE PTR [edi+28953]
	lea	edx, DWORD PTR [ecx+esi*2+55348]
	mov	BYTE PTR [edx+eax], bl
; Line 133
	mov	bl, BYTE PTR [edi+28954]
	lea	edx, DWORD PTR [ecx+esi*2+55352]
	mov	BYTE PTR [edx+eax], bl
; Line 134
	mov	bl, BYTE PTR [edi+28954]
	lea	edx, DWORD PTR [ecx+esi*2+55356]
	mov	BYTE PTR [edx+eax], bl
; Line 141
	mov	bl, BYTE PTR [edi+28956]
	lea	edx, DWORD PTR [ecx+esi*2+55360]
	mov	BYTE PTR [edx+eax], bl
; Line 142
	mov	bl, BYTE PTR [edi+28957]
	lea	edx, DWORD PTR [ecx+esi*2+55364]
	mov	BYTE PTR [edx+eax], bl
; Line 143
	mov	bl, BYTE PTR [edi+28958]
	lea	edx, DWORD PTR [ecx+esi*2+55368]
	mov	BYTE PTR [edx+eax], bl
; Line 144
	mov	bl, BYTE PTR [edi+28959]
	lea	edx, DWORD PTR [ecx+esi*2+55372]
$LN18@FillFastBo:
	mov	edi, DWORD PTR tv2797[ebp]
	mov	BYTE PTR [edx+eax], bl
$LN5@FillFastBo:
	inc	ecx
	dec	DWORD PTR tv825[ebp]
	jne	$LL17@FillFastBo
; Line 148
	mov	cl, BYTE PTR [edi]
	mov	BYTE PTR [edi-5], cl
; Line 149
	mov	cl, BYTE PTR [eax+31275]
	push	2
	pop	edx
	add	DWORD PTR tv2474[ebp], edx
	mov	BYTE PTR [edi-3], cl
	inc	edi
	dec	DWORD PTR tv734[ebp]
	mov	DWORD PTR tv2797[ebp], edi
	jne	$LL16@FillFastBo
	pop	edi
	pop	esi
; Line 153
	xor	eax, eax
	pop	ebx
; Line 154
	leave
	ret	0
_FillFastBootDataStructure ENDP
_TEXT	ENDS
PUBLIC	_FillOutputStructure
; Function compile flags: /Ogspy
;	COMDAT _FillOutputStructure
_TEXT	SEGMENT
_MrcData$ = 8						; size = 4
_FillOutputStructure PROC				; COMDAT
; Line 165
	mov	eax, DWORD PTR _MrcData$[esp-4]
	lea	ecx, DWORD PTR [eax+55192]
	push	esi
; Line 168
	sub	ecx, eax
	mov	esi, 192				; 000000c0H
$LL3@FillOutput:
; Line 169
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	inc	eax
	dec	esi
	jne	SHORT $LL3@FillOutput
; Line 171
	xor	eax, eax
	pop	esi
; Line 172
	ret	0
_FillOutputStructure ENDP
_TEXT	ENDS
END
