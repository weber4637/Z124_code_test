; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	d:\bios\z124-002\z124-002\DenvertonPkg\SystemAgent\Mrc\Mmrc\ProjectData\DNV\External\Source\OemHooks.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LinearToPhysicalVrefCodesIsl90727
PUBLIC	_PhysicalToLinearVrefCodesIsl90727
PUBLIC	_BBCMT40A256M16_093
PUBLIC	_CCMMT40A512M16_083
PUBLIC	_DASyB2_MT5KTF6472HZ_1G9J1
PUBLIC	_ALVMT5KTF12872HZ_1G9P1
PUBLIC	_BDK_SOLDERDOWN_DDR4_SPD
PUBLIC	_BoardProductNames
_DATA	SEGMENT
COMM	_CPGC_CONFIG_TYPES:DWORD
_BoardProductNames DB 'OSTRICH BAY-S', 00H
	ORG $+36
	DW	020H
	DB	'Aspen Cove', 00H
	ORG $+39
	DW	040H
	DB	'HARCUVAR', 00H
	ORG $+41
	DW	040H
	DB	'MINNEHAHA', 00H
	ORG $+40
	DW	080H
	DB	'PINELAKE', 00H
	ORG $+41
	DW	040H
	DB	'CAR CREEK MODULE', 00H
	ORG $+33
	DW	08080H
	DB	'CAR CREEK MODULE 2', 00H
	ORG $+31
	DW	04080H
	DB	'BIG BUG CREEK', 00H
	ORG $+36
	DW	02080H
	DB	'BIG BUG CREEK 2', 00H
	ORG $+34
	DW	01080H
	DB	'Autoliv', 00H
	ORG $+42
	DW	0880H
	DB	'PINELAKE-B', 00H
	ORG $+39
	DW	040H
	DB	'BIRD KEY', 00H
	ORG $+41
	DW	0480H
_DATA	ENDS
CONST	SEGMENT
_LinearToPhysicalVrefCodesIsl90727 DB 020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
	DB	040H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	05bH
	DB	05cH
	DB	05dH
	DB	05eH
	DB	05fH
_PhysicalToLinearVrefCodesIsl90727 DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
_BBCMT40A256M16_093 DW 04H
	DB	084H
	ORG $+1
	DW	05H
	DB	019H
	ORG $+1
	DW	0eH
	DB	00H
	ORG $+1
	DW	012H
	DB	08H
	ORG $+1
	DW	014H
	DB	0fcH
	ORG $+1
	DW	015H
	DB	01bH
	ORG $+1
	DW	018H
	DB	078H
	ORG $+1
	DW	019H
	DB	078H
	ORG $+1
	DW	01aH
	DB	078H
	ORG $+1
	DW	01cH
	DB	08H
	ORG $+1
	DW	01dH
	DB	080H
	ORG $+1
	DW	01eH
	DB	020H
	ORG $+1
	DW	01fH
	DB	08H
	ORG $+1
	DW	020H
	DB	00H
	ORG $+1
	DW	021H
	DB	05H
	ORG $+1
	DW	022H
	DB	070H
	ORG $+1
	DW	023H
	DB	03H
	ORG $+1
	DW	026H
	DB	02bH
	ORG $+1
	DW	027H
	DB	034H
	ORG $+1
	DW	075H
	DB	0edH
	ORG $+1
	DW	07dH
	DB	0c2H
	ORG $+1
	DW	080H
	DB	011H
	ORG $+1
	DW	081H
	DB	01H
	ORG $+1
	DW	082H
	DB	03H
	ORG $+1
_CCMMT40A512M16_083 DB 00H
	DB	00H
	DB	0cH
	DB	02H
	DB	085H
	DB	021H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	02H
	DB	0bH
	DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0cH
	DB	0fcH
	DB	07fH
	DB	00H
	DB	00H
	DB	071H
	DB	071H
	DB	071H
	DB	011H
	DB	00H
	DB	072H
	DB	0f0H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0f0H
	DB	02bH
	DB	032H
	DB	02bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0d6H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	080H
	DB	02cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	09aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	031H
	DB	080H
	DB	02cH
	DB	041H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+128
_DASyB2_MT5KTF6472HZ_1G9J1 DB 092H
	DB	013H
	DB	0bH
	DB	08H
	DB	02H
	DB	09H
	DB	02H
	DB	02H
	DB	0aH
	DB	011H
	DB	01H
	DB	08H
	DB	09H
	DB	00H
	DB	0feH
	DB	02H
	DB	069H
	DB	078H
	DB	069H
	DB	030H
	DB	069H
	DB	011H
	DB	010H
	DB	079H
	DB	070H
	DB	03H
	DB	03cH
	DB	03cH
	DB	01H
	DB	018H
	DB	083H
	DB	05H
	DB	00H
	DB	00H
	DB	0caH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	088H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	01H
	DB	062H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	080H
	DB	02cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e5H
	DB	028H
	DB	035H
	DB	04bH
	DB	054H
	DB	046H
	DB	036H
	DB	034H
	DB	037H
	DB	032H
	DB	048H
	DB	05aH
	DB	020H
	DB	02dH
	DB	020H
	DB	031H
	DB	047H
	DB	039H
	DB	04aH
	DB	031H
	DB	04aH
	DB	031H
	DB	080H
	DB	02cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	ORG $+256
_ALVMT5KTF12872HZ_1G9P1 DB 092H
	DB	013H
	DB	0bH
	DB	02H
	DB	03H
	DB	011H
	DB	02H
	DB	02H
	DB	0aH
	DB	011H
	DB	01H
	DB	08H
	DB	0aH
	DB	00H
	DB	0feH
	DB	00H
	DB	06eH
	DB	078H
	DB	06eH
	DB	030H
	DB	06eH
	DB	011H
	DB	018H
	DB	086H
	DB	00H
	DB	05H
	DB	03cH
	DB	03cH
	DB	01H
	DB	040H
	DB	083H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	088H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	01H
	DB	062H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	080H
	DB	02cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	040H
	DB	08dH
	DB	035H
	DB	04bH
	DB	054H
	DB	046H
	DB	031H
	DB	032H
	DB	038H
	DB	037H
	DB	032H
	DB	048H
	DB	05aH
	DB	02dH
	DB	031H
	DB	047H
	DB	039H
	DB	050H
	DB	031H
	DB	020H
	DB	050H
	DB	031H
	DB	080H
	DB	02cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	ORG $+256
_BDK_SOLDERDOWN_DDR4_SPD DB 023H
	DB	010H
	DB	0cH
	DB	02H
	DB	045H
	DB	021H
	DB	00H
	DB	08H
	DB	00H
	DB	060H
	DB	00H
	DB	03H
	DB	02H
	DB	0bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0dH
	DB	0fcH
	DB	0fH
	DB	00H
	DB	00H
	DB	06bH
	DB	06bH
	DB	06bH
	DB	011H
	DB	00H
	DB	06bH
	DB	0f0H
	DB	0aH
	DB	020H
	DB	08H
	DB	00H
	DB	05H
	DB	00H
	DB	0f0H
	DB	02bH
	DB	034H
	DB	028H
	DB	00H
	DB	078H
	DB	00H
	DB	014H
	DB	03cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	09cH
	DB	0b4H
	DB	0c9H
	DB	0c9H
	DB	0c9H
	DB	0c9H
	DB	0e7H
	DB	0d6H
	DB	0adH
	DB	049H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	080H
	DB	089H
	DB	00H
	DB	013H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04bH
	DB	033H
	DB	039H
	DB	034H
	DB	034H
	DB	035H
	DB	02dH
	DB	031H
	DB	030H
	DB	030H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	020H
	DB	00H
	DB	080H
	DB	02cH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+128
CONST	ENDS
PUBLIC	_OemGetFruInformation
EXTRN	_MmrcStringCompare:PROC
EXTRN	_MmrcMemset:PROC
EXTRN	_MrcSmbusExec:PROC
; Function compile flags: /Ogspy
;	COMDAT _OemGetFruInformation
_TEXT	SEGMENT
_BoardName$ = -60					; size = 50
_Offset$ = -8						; size = 2
_Length$ = -2						; size = 1
_ReadByte$ = -1						; size = 1
_MrcData$ = 8						; size = 4
_i$ = 11						; size = 1
_Channel$ = 12						; size = 1
_OemGetFruInformation PROC				; COMDAT
; File d:\bios\z124-002\z124-002\denvertonpkg\systemagent\mrc\mmrc\projectdata\dnv\external\source\oemhooks.c
; Line 535
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
; Line 560
	mov	edi, DWORD PTR _MrcData$[ebp]
	lea	eax, DWORD PTR _ReadByte$[ebp]
	push	eax
	lea	eax, DWORD PTR _Length$[ebp]
	push	eax
	movzx	eax, WORD PTR [edi+65350]
	push	3
	xor	ebx, ebx
	push	ebx
	mov	esi, 172				; 000000acH
	push	esi
	push	eax
	mov	BYTE PTR _ReadByte$[ebp], bl
	mov	BYTE PTR _Length$[ebp], 1
	call	_MrcSmbusExec
	add	esp, 24					; 00000018H
; Line 561
	cmp	BYTE PTR _ReadByte$[ebp], bl
; Line 563
	je	$LN2@OemGetFruI
; Line 568
	shl	BYTE PTR _ReadByte$[ebp], 3
; Line 573
	movzx	ax, BYTE PTR _ReadByte$[ebp]
	add	ax, 6
; Line 581
	lea	ecx, DWORD PTR _ReadByte$[ebp]
	push	ecx
	movzx	eax, ax
	lea	ecx, DWORD PTR _Length$[ebp]
	push	ecx
	push	eax
	mov	DWORD PTR _Offset$[ebp], eax
	movzx	eax, WORD PTR [edi+65350]
	push	ebx
	push	esi
	push	eax
	call	_MrcSmbusExec
; Line 587
	and	BYTE PTR _ReadByte$[ebp], 63		; 0000003fH
; Line 592
	movzx	ax, BYTE PTR _ReadByte$[ebp]
	inc	ax
	add	WORD PTR _Offset$[ebp], ax
; Line 600
	lea	eax, DWORD PTR _ReadByte$[ebp]
	push	eax
	lea	eax, DWORD PTR _Length$[ebp]
	push	eax
	push	DWORD PTR _Offset$[ebp]
	movzx	eax, WORD PTR [edi+65350]
	push	ebx
	push	esi
	push	eax
	call	_MrcSmbusExec
	add	esp, 48					; 00000030H
; Line 601
	cmp	BYTE PTR _ReadByte$[ebp], bl
; Line 603
	je	$LN2@OemGetFruI
; Line 610
	and	BYTE PTR _ReadByte$[ebp], 63		; 0000003fH
; Line 614
	inc	DWORD PTR _Offset$[ebp]
; Line 618
	push	50					; 00000032H
	lea	eax, DWORD PTR _BoardName$[ebp]
	push	ebx
	push	eax
	call	_MmrcMemset
	add	esp, 12					; 0000000cH
; Line 619
	cmp	BYTE PTR _ReadByte$[ebp], 50		; 00000032H
; Line 621
	ja	$LN2@OemGetFruI
; Line 623
	mov	BYTE PTR _i$[ebp], bl
	cmp	BYTE PTR _ReadByte$[ebp], bl
	jbe	SHORT $LL7@OemGetFruI
$LL21@OemGetFruI:
; Line 631
	movzx	eax, BYTE PTR _i$[ebp]
	lea	eax, DWORD PTR _BoardName$[ebp+eax]
	push	eax
	lea	eax, DWORD PTR _Length$[ebp]
	push	eax
	movzx	ax, BYTE PTR _i$[ebp]
	add	ax, WORD PTR _Offset$[ebp]
	movzx	eax, ax
	push	eax
	movzx	eax, WORD PTR [edi+65350]
	push	ebx
	push	esi
	push	eax
	call	_MrcSmbusExec
	add	esp, 24					; 00000018H
	inc	BYTE PTR _i$[ebp]
	mov	al, BYTE PTR _i$[ebp]
	cmp	al, BYTE PTR _ReadByte$[ebp]
	jb	SHORT $LL21@OemGetFruI
$LL7@OemGetFruI:
; Line 638
	movzx	eax, BYTE PTR _ReadByte$[ebp]
	push	eax
	movzx	eax, bl
	imul	eax, 52					; 00000034H
	add	eax, OFFSET _BoardProductNames
	push	eax
	lea	eax, DWORD PTR _BoardName$[ebp]
	push	eax
	call	_MmrcStringCompare
	add	esp, 12					; 0000000cH
	test	al, al
	jne	SHORT $LN17@OemGetFruI
	inc	bl
	cmp	bl, 12					; 0000000cH
	jb	SHORT $LL7@OemGetFruI
$LN17@OemGetFruI:
; Line 644
	cmp	bl, 12					; 0000000cH
	jae	SHORT $LN2@OemGetFruI
; Line 646
	movzx	ecx, BYTE PTR _Channel$[ebp]
	movzx	eax, bl
	imul	eax, 52					; 00000034H
	mov	ax, WORD PTR _BoardProductNames[eax+50]
	mov	WORD PTR [edi+ecx*2+55490], ax
; Line 651
	xor	eax, eax
	jmp	SHORT $LN13@OemGetFruI
$LN2@OemGetFruI:
; Line 648
	or	eax, -1
$LN13@OemGetFruI:
	pop	edi
	pop	esi
	pop	ebx
; Line 653
	leave
	ret	0
_OemGetFruInformation ENDP
_TEXT	ENDS
PUBLIC	_OemGetPlatformType
EXTRN	_MmrcExecuteTask:PROC
EXTRN	_Mmio32Read:PROC
; Function compile flags: /Ogspy
;	COMDAT _OemGetPlatformType
_TEXT	SEGMENT
_Status$ = -12						; size = 4
tv344 = -8						; size = 4
_Channel$ = -4						; size = 1
_MrcData$ = 8						; size = 4
_OemGetPlatformType PROC				; COMDAT
; Line 665
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 670
	and	DWORD PTR _Status$[ebp], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR _MrcData$[ebp]
	lea	eax, DWORD PTR [esi+28608]
	push	edi
; Line 671
	mov	BYTE PTR _Channel$[ebp], 0
	mov	DWORD PTR tv344[ebp], eax
	lea	edi, DWORD PTR [esi+55490]
	lea	ebx, DWORD PTR [esi+58646]
$LL12@OemGetPlat:
; Line 672
	mov	eax, DWORD PTR tv344[ebp]
	cmp	BYTE PTR [eax], 0
	je	$LN11@OemGetPlat
; Line 683
	mov	eax, DWORD PTR [esi+65441]
	add	eax, 220				; 000000dcH
	push	eax
	call	_Mmio32Read
	pop	ecx
; Line 684
	mov	cl, al
	dec	cl
	cmp	cl, 1
	ja	SHORT $LN8@OemGetPlat
; Line 685
	mov	BYTE PTR [esi+71013], 1
; Line 686
	mov	BYTE PTR [esi+71014], 1
; Line 687
	mov	BYTE PTR [esi+71015], 1
; Line 688
	mov	BYTE PTR [esi+71016], 1
; Line 689
	mov	BYTE PTR [esi+71017], 1
; Line 690
	mov	BYTE PTR [esi+71018], 1
; Line 691
	mov	BYTE PTR [esi+71019], 1
; Line 692
	mov	BYTE PTR [esi+71020], 1
; Line 693
	mov	BYTE PTR [esi+71021], 1
$LN8@OemGetPlat:
; Line 696
	push	DWORD PTR _Channel$[ebp]
	cmp	al, 1
	jne	SHORT $LN7@OemGetPlat
	push	esi
	call	_OemGetFruInformation
	pop	ecx
	pop	ecx
; Line 697
	push	8
	jmp	SHORT $LN19@OemGetPlat
$LN7@OemGetPlat:
; Line 699
	cmp	al, 2
	jne	SHORT $LN5@OemGetPlat
; Line 701
	push	65535					; 0000ffffH
	push	14889					; 00003a29H
	push	esi
	call	_MmrcExecuteTask
	add	esp, 16					; 00000010H
; Line 702
	cmp	DWORD PTR [ebx], -559038737		; deadbeefH
	mov	DWORD PTR _Status$[ebp], eax
	jne	SHORT $LN4@OemGetPlat
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN4@OemGetPlat
; Line 704
	push	4
; Line 705
	jmp	SHORT $LN19@OemGetPlat
$LN4@OemGetPlat:
; Line 707
	push	2
; Line 709
	jmp	SHORT $LN19@OemGetPlat
$LN5@OemGetPlat:
; Line 710
	push	esi
	call	_OemGetFruInformation
	pop	ecx
	pop	ecx
	mov	DWORD PTR _Status$[ebp], eax
; Line 711
	cmp	eax, -1
	jne	SHORT $LN11@OemGetPlat
; Line 715
	push	64					; 00000040H
$LN19@OemGetPlat:
	pop	eax
	mov	WORD PTR [edi], ax
$LN11@OemGetPlat:
	inc	BYTE PTR _Channel$[ebp]
	inc	edi
	inc	edi
	inc	DWORD PTR tv344[ebp]
	add	ebx, 4336				; 000010f0H
	cmp	BYTE PTR _Channel$[ebp], 2
	jb	$LL12@OemGetPlat
; Line 721
	mov	eax, DWORD PTR _Status$[ebp]
	pop	edi
	pop	esi
	pop	ebx
; Line 722
	leave
	ret	0
_OemGetPlatformType ENDP
_TEXT	ENDS
PUBLIC	_OemSetMrcData
; Function compile flags: /Ogspy
;	COMDAT _OemSetMrcData
_TEXT	SEGMENT
tv156 = -16						; size = 4
tv1164 = -12						; size = 4
tv784 = -12						; size = 4
tv1088 = -8						; size = 4
tv438 = -8						; size = 4
tv1055 = -4						; size = 4
tv898 = -4						; size = 4
tv919 = 8						; size = 4
tv818 = 8						; size = 4
_MrcData$ = 8						; size = 4
_OemSetMrcData PROC					; COMDAT
; Line 775
	mov	eax, DWORD PTR _MrcData$[esp-4]
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
; Line 778
	push	2
	pop	edi
	mov	ecx, edi
	mov	WORD PTR [eax+65358], cx
; Line 780
	mov	ecx, 2048				; 00000800H
	mov	WORD PTR [eax+65356], cx
; Line 782
	movzx	ecx, WORD PTR [eax+55490]
	lea	esi, DWORD PTR [edi+126]
	xor	ebx, ebx
	mov	edx, 2176				; 00000880H
	cmp	ecx, esi
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, 1152				; 00000480H
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, edx
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, 4224				; 00001080H
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, 8320				; 00002080H
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, 16512				; 00004080H
	je	SHORT $LN72@OemSetMrcD
	cmp	ecx, 32896				; 00008080H
	je	SHORT $LN72@OemSetMrcD
; Line 897
	mov	BYTE PTR [eax+65380], 160		; 000000a0H
; Line 898
	mov	BYTE PTR [eax+65381], 164		; 000000a4H
; Line 899
	mov	BYTE PTR [eax+65382], 162		; 000000a2H
; Line 900
	mov	BYTE PTR [eax+65383], 166		; 000000a6H
; Line 901
	jmp	$LN12@OemSetMrcD
$LN72@OemSetMrcD:
; Line 793
	mov	BYTE PTR [eax+65380], 160		; 000000a0H
; Line 794
	mov	BYTE PTR [eax+65381], 164		; 000000a4H
; Line 795
	mov	BYTE PTR [eax+65382], 162		; 000000a2H
; Line 796
	mov	BYTE PTR [eax+65383], 166		; 000000a6H
; Line 800
	movzx	ecx, WORD PTR [eax+55490]
	push	ebp
	mov	ebp, 32896				; 00008080H
	cmp	cx, bp
	je	SHORT $LN48@OemSetMrcD
	mov	ebp, 8320				; 00002080H
	cmp	cx, bp
	je	SHORT $LN48@OemSetMrcD
	mov	ebp, 4224				; 00001080H
	cmp	cx, bp
	je	SHORT $LN48@OemSetMrcD
	cmp	cx, dx
	je	SHORT $LN48@OemSetMrcD
; Line 805
	mov	edx, 16512				; 00004080H
	cmp	cx, dx
	jne	SHORT $LN46@OemSetMrcD
; Line 808
	mov	BYTE PTR [eax+65386], 1
; Line 809
	jmp	SHORT $LN79@OemSetMrcD
$LN46@OemSetMrcD:
; Line 814
	mov	edx, 1152				; 00000480H
	cmp	cx, dx
; Line 815
	lea	ecx, DWORD PTR [eax+65384]
; Line 816
	mov	BYTE PTR [eax+65385], bl
; Line 818
	mov	BYTE PTR [eax+65387], bl
	mov	BYTE PTR [ecx], 1
	jne	SHORT $LN44@OemSetMrcD
; Line 817
	mov	BYTE PTR [eax+65386], bl
; Line 819
	jmp	SHORT $LN43@OemSetMrcD
$LN44@OemSetMrcD:
; Line 822
	mov	BYTE PTR [eax+65386], 1
; Line 823
	jmp	SHORT $LN43@OemSetMrcD
$LN48@OemSetMrcD:
; Line 803
	mov	BYTE PTR [eax+65386], bl
$LN79@OemSetMrcD:
; Line 801
	lea	ecx, DWORD PTR [eax+65384]
; Line 804
	mov	BYTE PTR [eax+65387], bl
	mov	BYTE PTR [eax+65385], bl
	mov	BYTE PTR [ecx], 1
$LN43@OemSetMrcD:
; Line 826
	mov	DWORD PTR tv818[esp+28], ebx
	mov	edx, ecx
	mov	DWORD PTR tv898[esp+32], edi
$LL42@OemSetMrcD:
; Line 827
	xor	ebp, ebp
	mov	DWORD PTR tv784[esp+32], edx
	mov	DWORD PTR tv438[esp+32], edi
$LL77@OemSetMrcD:
; Line 828
	cmp	BYTE PTR [edx], 1
	jne	SHORT $LN38@OemSetMrcD
; Line 829
	mov	edx, DWORD PTR tv818[esp+28]
	add	edx, ebp
	imul	edx, 514				; 00000202H
	lea	esi, DWORD PTR [edx+eax+28631]
	xor	edi, edi
	mov	DWORD PTR tv156[esp+32], 512		; 00000200H
$LL71@OemSetMrcD:
; Line 830
	movzx	edx, WORD PTR [eax+55490]
	mov	ebx, 4224				; 00001080H
	cmp	dx, bx
	jne	SHORT $LN32@OemSetMrcD
; Line 831
	mov	dl, BYTE PTR _DASyB2_MT5KTF6472HZ_1G9J1[edi]
	jmp	SHORT $LN80@OemSetMrcD
$LN32@OemSetMrcD:
; Line 832
	mov	ebx, 2176				; 00000880H
	cmp	dx, bx
	jne	SHORT $LN30@OemSetMrcD
; Line 833
	mov	dl, BYTE PTR _ALVMT5KTF12872HZ_1G9P1[edi]
	jmp	SHORT $LN80@OemSetMrcD
$LN30@OemSetMrcD:
; Line 834
	mov	ebx, 1152				; 00000480H
	cmp	dx, bx
	jne	SHORT $LN28@OemSetMrcD
; Line 835
	mov	dl, BYTE PTR _BDK_SOLDERDOWN_DDR4_SPD[edi]
; Line 836
	jmp	SHORT $LN80@OemSetMrcD
$LN28@OemSetMrcD:
; Line 837
	mov	dl, BYTE PTR _CCMMT40A512M16_083[edi]
$LN80@OemSetMrcD:
; Line 829
	inc	edi
; Line 837
	mov	BYTE PTR [esi], dl
	inc	esi
	dec	DWORD PTR tv156[esp+32]
	jne	SHORT $LL71@OemSetMrcD
	mov	esi, 128				; 00000080H
	xor	ebx, ebx
$LN38@OemSetMrcD:
	mov	edx, DWORD PTR tv784[esp+32]
	inc	ebp
	inc	edx
	dec	DWORD PTR tv438[esp+32]
	mov	DWORD PTR tv784[esp+32], edx
	jne	$LL77@OemSetMrcD
	push	2
	pop	edi
	add	DWORD PTR tv818[esp+28], edi
	dec	DWORD PTR tv898[esp+32]
	jne	$LL42@OemSetMrcD
; Line 844
	mov	edx, 8320				; 00002080H
	cmp	WORD PTR [eax+55490], dx
	jne	SHORT $LN78@OemSetMrcD
; Line 847
	xor	ebp, ebp
	mov	DWORD PTR tv1164[esp+32], edi
$LL25@OemSetMrcD:
; Line 848
	xor	edi, edi
	mov	DWORD PTR tv1055[esp+32], ecx
	mov	DWORD PTR tv1088[esp+32], 2
$LL22@OemSetMrcD:
; Line 849
	cmp	BYTE PTR [ecx], 1
	jne	SHORT $LN21@OemSetMrcD
	lea	ecx, DWORD PTR [edi+ebp]
	imul	ecx, 514				; 00000202H
; Line 850
	mov	esi, OFFSET _BBCMT40A256M16_093
	mov	DWORD PTR tv919[esp+28], 24		; 00000018H
$LL18@OemSetMrcD:
; Line 861
	movzx	edx, WORD PTR [esi]
	mov	bl, BYTE PTR [esi+2]
	add	edx, ecx
	add	esi, 4
	dec	DWORD PTR tv919[esp+28]
	mov	BYTE PTR [edx+eax+28631], bl
	jne	SHORT $LL18@OemSetMrcD
	mov	esi, 128				; 00000080H
	xor	ebx, ebx
$LN21@OemSetMrcD:
	mov	ecx, DWORD PTR tv1055[esp+32]
	inc	edi
	inc	ecx
	dec	DWORD PTR tv1088[esp+32]
	mov	DWORD PTR tv1055[esp+32], ecx
	jne	SHORT $LL22@OemSetMrcD
	inc	ebp
	inc	ebp
	dec	DWORD PTR tv1164[esp+32]
	jne	SHORT $LL25@OemSetMrcD
$LN78@OemSetMrcD:
; Line 872
	movzx	ecx, WORD PTR [eax+55490]
	mov	edx, 32896				; 00008080H
	pop	ebp
	cmp	cx, dx
	je	SHORT $LN14@OemSetMrcD
	mov	edx, 16512				; 00004080H
	cmp	cx, dx
	je	SHORT $LN14@OemSetMrcD
	mov	edx, 8320				; 00002080H
	cmp	cx, dx
	je	SHORT $LN14@OemSetMrcD
	mov	edx, 1152				; 00000480H
	cmp	cx, dx
	je	SHORT $LN14@OemSetMrcD
; Line 890
	mov	edx, 4224				; 00001080H
	cmp	cx, dx
	jne	SHORT $LN12@OemSetMrcD
; Line 891
	mov	ecx, esi
	mov	WORD PTR [eax+55490], cx
; Line 892
	jmp	SHORT $LN81@OemSetMrcD
$LN14@OemSetMrcD:
; Line 878
	mov	ecx, esi
	mov	WORD PTR [eax+55490], cx
; Line 886
	xor	ecx, ecx
	inc	ecx
	mov	DWORD PTR [eax+56182], ecx
	mov	DWORD PTR [eax+56186], ebx
; Line 887
	mov	DWORD PTR [eax+60518], ecx
	mov	DWORD PTR [eax+60522], ebx
$LN81@OemSetMrcD:
; Line 879
	mov	WORD PTR [eax+55492], si
$LN12@OemSetMrcD:
; Line 904
	cmp	WORD PTR [eax+55490], 32		; 00000020H
; Line 928
	mov	BYTE PTR [eax+65390], 255		; 000000ffH
; Line 929
	mov	BYTE PTR [eax+65391], 255		; 000000ffH
	je	SHORT $LN8@OemSetMrcD
	mov	BYTE PTR [eax+65388], 255		; 000000ffH
	mov	BYTE PTR [eax+65389], 255		; 000000ffH
; Line 934
	mov	DWORD PTR [eax+65360], ebx
; Line 935
	mov	BYTE PTR [eax+65364], bl
; Line 936
	mov	DWORD PTR [eax+65365], ebx
; Line 937
	mov	BYTE PTR [eax+65369], bl
; Line 946
	jmp	SHORT $LN82@OemSetMrcD
$LN8@OemSetMrcD:
; Line 906
	mov	BYTE PTR [eax+65388], 92		; 0000005cH
; Line 907
	mov	BYTE PTR [eax+65389], 124		; 0000007cH
; Line 913
	mov	DWORD PTR [eax+65360], OFFSET _LinearToPhysicalVrefCodesIsl90727
; Line 914
	mov	BYTE PTR [eax+65364], 64		; 00000040H
; Line 915
	mov	DWORD PTR [eax+65365], OFFSET _PhysicalToLinearVrefCodesIsl90727
; Line 916
	mov	BYTE PTR [eax+65369], 96		; 00000060H
$LN82@OemSetMrcD:
	pop	edi
; Line 923
	mov	BYTE PTR [eax+65379], bl
	mov	DWORD PTR [eax+65375], ebx
	mov	BYTE PTR [eax+65374], bl
	mov	DWORD PTR [eax+65370], ebx
	pop	esi
; Line 981
	xor	eax, eax
	pop	ebx
; Line 982
	add	esp, 16					; 00000010H
	ret	0
_OemSetMrcData ENDP
_TEXT	ENDS
PUBLIC	_OemMemoryErrorCode
; Function compile flags: /Ogspy
;	COMDAT _OemMemoryErrorCode
_TEXT	SEGMENT
_IndexError$ = 8					; size = 1
_OemMemoryErrorCode PROC				; COMDAT
; Line 995
	ret	0
_OemMemoryErrorCode ENDP
_TEXT	ENDS
PUBLIC	_OemI2cMux
; Function compile flags: /Ogspy
;	COMDAT _OemI2cMux
_TEXT	SEGMENT
_Channel$ = 8						; size = 1
_Dimm$ = 12						; size = 1
_OemI2cMux PROC						; COMDAT
; Line 1010
	xor	eax, eax
; Line 1011
	ret	0
_OemI2cMux ENDP
_TEXT	ENDS
PUBLIC	_OemClearSelfRefreshClamp
; Function compile flags: /Ogspy
;	COMDAT _OemClearSelfRefreshClamp
_TEXT	SEGMENT
_MrcData$ = 8						; size = 4
_CapsuleStartIndex$ = 12				; size = 2
_StringIndex$ = 16					; size = 2
_Channel$ = 20						; size = 1
_OemClearSelfRefreshClamp PROC				; COMDAT
; Line 1030
	mov	eax, DWORD PTR _MrcData$[esp-4]
	mov	eax, DWORD PTR [eax+65489]
; Line 1033
	test	eax, eax
	jne	SHORT $LN1@OemClearSe
; Line 1035
	or	eax, -1
; Line 1048
	ret	0
$LN1@OemClearSe:
; Line 1038
	mov	ecx, DWORD PTR [eax]
; Line 1042
	and	DWORD PTR [eax], -2			; fffffffeH
; Line 1043
	or	DWORD PTR [eax], 1
; Line 1044
	and	DWORD PTR [eax], -2			; fffffffeH
; Line 1045
	mov	DWORD PTR [eax], ecx
; Line 1047
	xor	eax, eax
; Line 1048
	ret	0
_OemClearSelfRefreshClamp ENDP
_TEXT	ENDS
END
