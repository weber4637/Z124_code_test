; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	d:\bios\z124-002\z124-002\DenvertonPkg\SystemAgent\Mrc\Mmrc\ProjectData\DNV\External\Source\MemOdt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_OdtValueTable
PUBLIC	_OdtActTable
PUBLIC	_ddr4OdtValueTable
PUBLIC	_ddr4OdtActTable
_DATA	SEGMENT
COMM	_CPGC_CONFIG_TYPES:DWORD
_OdtValueTable DW 0500H
	DB	01H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0501H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0502H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0503H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0504H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0580H
	DB	01H
	DB	02H
	DB	02H
	DB	00H
	DB	00H
	ORG $+1
	DW	0581H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DW	0582H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DW	0583H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DW	0584H
	DB	00H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	ORG $+1
	DW	0900H
	DB	01H
	DB	023H
	DB	00H
	DB	023H
	DB	00H
	ORG $+1
	DW	0901H
	DB	00H
	DB	025H
	DB	00H
	DB	025H
	DB	00H
	ORG $+1
	DW	0902H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	00H
	ORG $+1
	DW	0903H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	00H
	ORG $+1
	DW	0904H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	00H
	ORG $+1
	DW	0d80H
	DB	01H
	DB	023H
	DB	020H
	DB	023H
	DB	020H
	ORG $+1
	DW	0d81H
	DB	00H
	DB	025H
	DB	020H
	DB	025H
	DB	020H
	ORG $+1
	DW	0d82H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	010H
	ORG $+1
	DW	0d83H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	010H
	ORG $+1
	DW	0d84H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	010H
	ORG $+1
	DW	0980H
	DB	01H
	DB	023H
	DB	020H
	DB	023H
	DB	00H
	ORG $+1
	DW	0981H
	DB	00H
	DB	025H
	DB	020H
	DB	025H
	DB	00H
	ORG $+1
	DW	0982H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	00H
	ORG $+1
	DW	0983H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	00H
	ORG $+1
	DW	0984H
	DB	00H
	DB	015H
	DB	010H
	DB	015H
	DB	00H
	ORG $+1
	DW	0d00H
	DB	01H
	DB	023H
	DB	00H
	DB	023H
	DB	020H
	ORG $+1
	DW	0d01H
	DB	00H
	DB	025H
	DB	00H
	DB	025H
	DB	020H
	ORG $+1
	DW	0d02H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	010H
	ORG $+1
	DW	0d03H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	010H
	ORG $+1
	DW	0d04H
	DB	00H
	DB	015H
	DB	00H
	DB	015H
	DB	010H
	ORG $+1
_OdtActTable DW	02500H
	DW	08000H
	DW	01H
	DW	02580H
	DW	08000H
	DW	01H
	DW	02584H
	DW	08000H
	DW	02H
	DW	02900H
	DW	08004H
	DW	05H
	DW	02901H
	DW	08001H
	DW	05H
	DW	02d80H
	DW	08004H
	DW	05H
	DW	02d84H
	DW	08004H
	DW	06H
	DW	02d81H
	DW	08001H
	DW	05H
	DW	02d85H
	DW	08001H
	DW	09H
	DW	02980H
	DW	08004H
	DW	05H
	DW	02984H
	DW	08004H
	DW	06H
	DW	02981H
	DW	08001H
	DW	05H
	DW	02d00H
	DW	08004H
	DW	05H
	DW	02d01H
	DW	08001H
	DW	05H
	DW	02d05H
	DW	08001H
	DW	09H
	ORG $+6
_ddr4OdtValueTable DW 0503H
	DB	00H
	DB	04bH
	DB	047H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0504H
	DB	00H
	DB	04bH
	DB	047H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0505H
	DB	00H
	DB	04bH
	DB	047H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0506H
	DB	00H
	DB	04bH
	DB	047H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0507H
	DB	00H
	DB	04bH
	DB	047H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0883H
	DB	00H
	DB	04bH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0884H
	DB	00H
	DB	04bH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0885H
	DB	00H
	DB	04bH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0886H
	DB	00H
	DB	04bH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0887H
	DB	00H
	DB	04bH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0583H
	DB	00H
	DB	04dH
	DB	047H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0584H
	DB	00H
	DB	04dH
	DB	047H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0585H
	DB	00H
	DB	04dH
	DB	047H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0586H
	DB	00H
	DB	04dH
	DB	047H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0587H
	DB	00H
	DB	04dH
	DB	047H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0c83H
	DB	00H
	DB	04dH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	ORG $+1
	DW	0c84H
	DB	00H
	DB	04dH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	ORG $+1
	DW	0c85H
	DB	00H
	DB	04dH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	ORG $+1
	DW	0c86H
	DB	00H
	DB	04dH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	ORG $+1
	DW	0c87H
	DB	00H
	DB	04dH
	DB	047H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0b4H
	DB	0b4H
	DB	00H
	DB	00H
	ORG $+1
	DW	0903H
	DB	00H
	DB	053H
	DB	04cH
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0904H
	DB	00H
	DB	053H
	DB	04cH
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0905H
	DB	00H
	DB	053H
	DB	04cH
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0906H
	DB	00H
	DB	053H
	DB	04cH
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0907H
	DB	00H
	DB	053H
	DB	04cH
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0d83H
	DB	00H
	DB	055H
	DB	052H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d84H
	DB	00H
	DB	055H
	DB	052H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d85H
	DB	00H
	DB	055H
	DB	052H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d86H
	DB	00H
	DB	055H
	DB	052H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d87H
	DB	00H
	DB	055H
	DB	052H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0983H
	DB	00H
	DB	054H
	DB	050H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0984H
	DB	00H
	DB	054H
	DB	050H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0985H
	DB	00H
	DB	054H
	DB	050H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0986H
	DB	00H
	DB	054H
	DB	050H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0987H
	DB	00H
	DB	054H
	DB	050H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DW	0d03H
	DB	00H
	DB	054H
	DB	050H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d04H
	DB	00H
	DB	054H
	DB	050H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d05H
	DB	00H
	DB	054H
	DB	050H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d06H
	DB	00H
	DB	054H
	DB	050H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
	DW	0d07H
	DB	00H
	DB	054H
	DB	050H
	DB	07aH
	DB	00H
	DB	00H
	DB	00H
	DB	08cH
	DB	08cH
	DB	00H
	DB	00H
	ORG $+1
_ddr4OdtActTable DW 02500H
	DW	08000H
	DW	01H
	DW	02580H
	DW	08002H
	DW	01H
	DW	02584H
	DW	08001H
	DW	02H
	DW	02900H
	DW	08000H
	DW	01H
	DW	02901H
	DW	08000H
	DW	04H
	DW	02d80H
	DW	08002H
	DW	03H
	DW	02d84H
	DW	08001H
	DW	03H
	DW	02d81H
	DW	08008H
	DW	0cH
	DW	02d85H
	DW	08004H
	DW	0cH
	DW	02980H
	DW	08002H
	DW	03H
	DW	02984H
	DW	08001H
	DW	03H
	DW	02981H
	DW	08000H
	DW	04H
	DW	02d00H
	DW	08000H
	DW	01H
	DW	02d01H
	DW	08008H
	DW	0cH
	DW	02d05H
	DW	08004H
	DW	0cH
	DW	04900H
	DW	08000H
	DW	01H
	DW	04901H
	DW	08000H
	DW	04H
	DW	04902H
	DW	08000H
	DW	010H
	DW	06d80H
	DW	08002H
	DW	03H
	DW	06d84H
	DW	08001H
	DW	03H
	DW	06d81H
	DW	08008H
	DW	0cH
	DW	06d85H
	DW	08004H
	DW	0cH
	DW	06d82H
	DW	08020H
	DW	030H
	DW	06d86H
	DW	08010H
	DW	030H
	DW	06d00H
	DW	08000H
	DW	01H
	DW	06d01H
	DW	08008H
	DW	0cH
	DW	06d05H
	DW	08004H
	DW	0cH
	DW	06d02H
	DW	08020H
	DW	030H
	DW	06d06H
	DW	08010H
	DW	030H
	DW	06900H
	DW	08000H
	DW	01H
	DW	06901H
	DW	08000H
	DW	04H
	DW	06902H
	DW	08020H
	DW	030H
	DW	06906H
	DW	08010H
	DW	030H
	DW	04980H
	DW	08002H
	DW	03H
	DW	04984H
	DW	08001H
	DW	03H
	DW	04981H
	DW	08000H
	DW	04H
	DW	04982H
	DW	08000H
	DW	010H
	DW	04d80H
	DW	08002H
	DW	03H
	DW	04d84H
	DW	08001H
	DW	03H
	DW	04d81H
	DW	08008H
	DW	0cH
	DW	04d85H
	DW	08004H
	DW	0cH
	DW	04d82H
	DW	08000H
	DW	010H
	DW	04d00H
	DW	08000H
	DW	01H
	DW	04d01H
	DW	08008H
	DW	0cH
	DW	04d05H
	DW	08004H
	DW	0cH
	DW	04d02H
	DW	08000H
	DW	010H
	DW	06980H
	DW	08002H
	DW	03H
	DW	06984H
	DW	08001H
	DW	03H
	DW	06981H
	DW	08000H
	DW	04H
	DW	06982H
	DW	08020H
	DW	030H
	DW	06986H
	DW	08010H
	DW	030H
	DW	0b680H
	DW	08000H
	DW	00H
	DW	0b684H
	DW	08000H
	DW	00H
	DW	0b688H
	DW	08001H
	DW	01H
	DW	0b68cH
	DW	08002H
	DW	02H
	DW	0b681H
	DW	08000H
	DW	00H
	DW	0b685H
	DW	08000H
	DW	00H
	DW	0b689H
	DW	08004H
	DW	04H
	DW	0b68dH
	DW	08008H
	DW	08H
	DW	0b682H
	DW	08000H
	DW	00H
	DW	0b686H
	DW	08000H
	DW	00H
	DW	0b68aH
	DW	08010H
	DW	010H
	DW	0b68eH
	DW	08020H
	DW	020H
	DW	03680H
	DW	08000H
	DW	00H
	DW	03684H
	DW	08000H
	DW	00H
	DW	03688H
	DW	08001H
	DW	01H
	DW	0368cH
	DW	08002H
	DW	02H
	DW	03681H
	DW	08000H
	DW	00H
	DW	03685H
	DW	08000H
	DW	00H
	DW	03689H
	DW	08004H
	DW	04H
	DW	0368dH
	DW	08008H
	DW	08H
	DW	02680H
	DW	08000H
	DW	00H
	DW	02684H
	DW	08000H
	DW	00H
	DW	02688H
	DW	08001H
	DW	01H
	DW	0268cH
	DW	08002H
	DW	02H
_DATA	ENDS
PUBLIC	_GetOdtValueIndex
EXTRN	_MrcDeadLoop:PROC
; Function compile flags: /Ogspy
;	COMDAT _GetOdtValueIndex
_TEXT	SEGMENT
tv69 = -12						; size = 4
tv290 = -8						; size = 4
_Slot$ = -1						; size = 1
_Config$ = 8						; size = 2
_MrcData$ = 8						; size = 4
_socket$ = 12						; size = 1
_Channel$ = 16						; size = 1
tv262 = 20						; size = 4
_freqLimit$ = 20					; size = 1
_GetOdtValueIndex PROC					; COMDAT
; File d:\bios\z124-002\z124-002\denvertonpkg\systemagent\mrc\mmrc\projectdata\dnv\external\source\memodt.c
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
; Line 47
	mov	edi, DWORD PTR _MrcData$[ebp]
	mov	al, BYTE PTR [edi+31275]
	and	al, 15					; 0000000fH
	movzx	si, al
; Line 48
	mov	al, BYTE PTR _freqLimit$[ebp]
	mov	WORD PTR _Config$[ebp], si
	mov	ecx, DWORD PTR _Config$[ebp]
	movzx	dx, al
	and	ecx, 15					; 0000000fH
	mov	BYTE PTR _Slot$[ebp], 1
	cmp	cx, dx
	jbe	SHORT $LN20@GetOdtValu
; Line 49
	and	al, 15					; 0000000fH
	movzx	si, al
	mov	eax, DWORD PTR _Config$[ebp]
	and	eax, 65520				; 0000fff0H
	or	si, ax
	mov	WORD PTR _Config$[ebp], si
$LN20@GetOdtValu:
; Line 98
	movzx	ebx, BYTE PTR _Channel$[ebp]
	and	DWORD PTR tv262[ebp], 0
	lea	eax, DWORD PTR [edi+ebx*2+28610]
	mov	DWORD PTR tv290[ebp], eax
	mov	DWORD PTR tv69[ebp], 2
$LL25@GetOdtValu:
	mov	eax, DWORD PTR tv290[ebp]
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN16@GetOdtValu
	mov	eax, DWORD PTR tv262[ebp]
	lea	eax, DWORD PTR [eax+ebx*2+55394]
	movzx	eax, BYTE PTR [eax+edi]
	sub	eax, 0
	je	SHORT $LN11@GetOdtValu
; Line 63
	dec	eax
	je	SHORT $LN10@GetOdtValu
	dec	eax
	dec	eax
	je	SHORT $LN9@GetOdtValu
; Line 74
	mov	DWORD PTR [edi+65333], 12		; 0000000cH
; Line 75
	call	_MrcDeadLoop
	jmp	SHORT $LN7@GetOdtValu
$LN9@GetOdtValu:
; Line 71
	mov	BYTE PTR _Slot$[ebp], 4
; Line 72
	jmp	SHORT $LN7@GetOdtValu
$LN10@GetOdtValu:
; Line 68
	mov	BYTE PTR _Slot$[ebp], 3
; Line 69
	jmp	SHORT $LN7@GetOdtValu
$LN11@GetOdtValu:
; Line 65
	mov	BYTE PTR _Slot$[ebp], 2
; Line 78
	jmp	SHORT $LN7@GetOdtValu
$LN16@GetOdtValu:
; Line 79
	mov	BYTE PTR _Slot$[ebp], 1
$LN7@GetOdtValu:
; Line 82
	mov	eax, DWORD PTR tv262[ebp]
	sub	eax, 0
	je	SHORT $LN4@GetOdtValu
	dec	eax
	je	SHORT $LN3@GetOdtValu
	dec	eax
	je	SHORT $LN2@GetOdtValu
; Line 93
	mov	DWORD PTR [edi+65333], 13		; 0000000dH
; Line 94
	call	_MrcDeadLoop
	jmp	SHORT $LN18@GetOdtValu
$LN2@GetOdtValu:
; Line 90
	movzx	si, BYTE PTR _Slot$[ebp]
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 13					; 0000000dH
	and	eax, 8191				; 00001fffH
; Line 91
	jmp	SHORT $LN26@GetOdtValu
$LN3@GetOdtValu:
; Line 87
	mov	al, BYTE PTR _Slot$[ebp]
	and	al, 7
	movzx	si, al
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 10					; 0000000aH
	and	eax, 58367				; 0000e3ffH
; Line 88
	jmp	SHORT $LN26@GetOdtValu
$LN4@GetOdtValu:
; Line 84
	mov	al, BYTE PTR _Slot$[ebp]
	and	al, 7
	movzx	si, al
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 7
	and	eax, 64639				; 0000fc7fH
$LN26@GetOdtValu:
	or	si, ax
	mov	WORD PTR _Config$[ebp], si
$LN18@GetOdtValu:
	inc	DWORD PTR tv262[ebp]
	inc	DWORD PTR tv290[ebp]
	dec	DWORD PTR tv69[ebp]
	jne	$LL25@GetOdtValu
	pop	edi
; Line 98
	mov	ax, si
	pop	esi
	pop	ebx
; Line 99
	leave
	ret	0
_GetOdtValueIndex ENDP
_TEXT	ENDS
PUBLIC	_LookupOdtValue
; Function compile flags: /Ogspy
;	COMDAT _LookupOdtValue
_TEXT	SEGMENT
_MrcData$ = 8						; size = 4
_Node$ = 12						; size = 1
_Channel$ = 16						; size = 1
_LookupOdtValue PROC					; COMDAT
; Line 119
	push	4
	push	DWORD PTR _Channel$[esp]
	push	DWORD PTR _Node$[esp+4]
	push	DWORD PTR _MrcData$[esp+8]
	call	_GetOdtValueIndex
	add	esp, 16					; 00000010H
; Line 123
	xor	ecx, ecx
$LL11@LookupOdtV:
; Line 124
	cmp	WORD PTR _OdtValueTable[ecx*8], ax
	je	SHORT $LN17@LookupOdtV
	inc	ecx
	cmp	ecx, 30					; 0000001eH
	jb	SHORT $LL11@LookupOdtV
$LN17@LookupOdtV:
; Line 131
	cmp	ecx, 30					; 0000001eH
	jb	SHORT $LN7@LookupOdtV
; Line 132
	xor	eax, eax
; Line 148
	ret	0
$LN7@LookupOdtV:
; Line 147
	lea	eax, DWORD PTR _OdtValueTable[ecx*8]
; Line 148
	ret	0
_LookupOdtValue ENDP
_TEXT	ENDS
PUBLIC	_LookupDdr4OdtValue
; Function compile flags: /Ogspy
;	COMDAT _LookupDdr4OdtValue
_TEXT	SEGMENT
_MrcData$ = 8						; size = 4
_socket$ = 12						; size = 1
_ch$ = 16						; size = 1
_LookupDdr4OdtValue PROC				; COMDAT
; Line 156
	push	esi
; Line 169
	push	7
	push	DWORD PTR _ch$[esp+4]
	mov	esi, OFFSET _ddr4OdtValueTable
	push	DWORD PTR _socket$[esp+8]
	push	DWORD PTR _MrcData$[esp+12]
	call	_GetOdtValueIndex
	add	esp, 16					; 00000010H
; Line 173
	xor	ecx, ecx
$LL5@LookupDdr4:
; Line 174
	cmp	WORD PTR [esi], ax
	je	SHORT $LN9@LookupDdr4
; Line 177
	add	esi, 14					; 0000000eH
	inc	ecx
	cmp	ecx, 40					; 00000028H
	jb	SHORT $LL5@LookupDdr4
$LN9@LookupDdr4:
; Line 182
	cmp	ecx, 40					; 00000028H
	sbb	eax, eax
	and	eax, esi
	pop	esi
; Line 190
	ret	0
_LookupDdr4OdtValue ENDP
_TEXT	ENDS
PUBLIC	_LookupOdtAct
; Function compile flags: /Ogspy
;	COMDAT _LookupOdtAct
_TEXT	SEGMENT
_OdtActTablePtr$ = -12					; size = 4
_odtActTableSize$ = -8					; size = 4
_Slot$ = -1						; size = 1
tv174 = 8						; size = 4
_MrcData$ = 8						; size = 4
_Node$ = 12						; size = 1
_Config$ = 16						; size = 2
_Channel$ = 16						; size = 1
tv314 = 20						; size = 4
_ThisDimm$ = 20						; size = 1
tv342 = 24						; size = 4
_ThisRank$ = 24						; size = 1
_LookupOdtAct PROC					; COMDAT
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 213
	mov	ebx, DWORD PTR _MrcData$[ebp]
	push	esi
	push	edi
	movzx	edi, BYTE PTR _Channel$[ebp]
	cmp	BYTE PTR [edi+ebx+31272], 7
	mov	BYTE PTR _Slot$[ebp], 1
	mov	DWORD PTR _OdtActTablePtr$[ebp], OFFSET _OdtActTable
	mov	DWORD PTR _odtActTableSize$[ebp], 90	; 0000005aH
	jne	SHORT $LN26@LookupOdtA
; Line 214
	mov	DWORD PTR _OdtActTablePtr$[ebp], OFFSET _ddr4OdtActTable
; Line 215
	mov	DWORD PTR _odtActTableSize$[ebp], 450	; 000001c2H
$LN26@LookupOdtA:
; Line 222
	mov	al, BYTE PTR _ThisDimm$[ebp]
	and	al, 3
; Line 223
	movzx	si, al
	mov	eax, 65523				; 0000fff3H
	and	si, ax
	mov	al, BYTE PTR _ThisRank$[ebp]
	and	al, 3
	movzx	ax, al
	shl	ax, 2
	or	si, ax
	and	DWORD PTR tv314[ebp], 0
	lea	eax, DWORD PTR [ebx+edi*2+28610]
	mov	WORD PTR _Config$[ebp], si
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv174[ebp], 2
$LL34@LookupOdtA:
; Line 226
	mov	eax, DWORD PTR tv342[ebp]
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN22@LookupOdtA
; Line 234
	mov	eax, DWORD PTR tv314[ebp]
	lea	eax, DWORD PTR [eax+edi*2+55394]
	movzx	eax, BYTE PTR [eax+ebx]
	sub	eax, 0
	je	SHORT $LN17@LookupOdtA
	dec	eax
	je	SHORT $LN16@LookupOdtA
	dec	eax
	je	SHORT $LN15@LookupOdtA
; Line 245
	mov	DWORD PTR [ebx+65333], 12		; 0000000cH
; Line 246
	call	_MrcDeadLoop
	jmp	SHORT $LN13@LookupOdtA
$LN15@LookupOdtA:
; Line 242
	mov	BYTE PTR _Slot$[ebp], 4
; Line 243
	jmp	SHORT $LN13@LookupOdtA
$LN16@LookupOdtA:
; Line 239
	mov	BYTE PTR _Slot$[ebp], 3
; Line 240
	jmp	SHORT $LN13@LookupOdtA
$LN17@LookupOdtA:
; Line 236
	mov	BYTE PTR _Slot$[ebp], 2
; Line 249
	jmp	SHORT $LN13@LookupOdtA
$LN22@LookupOdtA:
; Line 250
	mov	BYTE PTR _Slot$[ebp], 1
$LN13@LookupOdtA:
; Line 253
	mov	eax, DWORD PTR tv314[ebp]
	sub	eax, 0
	je	SHORT $LN10@LookupOdtA
	dec	eax
	je	SHORT $LN9@LookupOdtA
	dec	eax
	je	SHORT $LN8@LookupOdtA
; Line 264
	mov	DWORD PTR [ebx+65333], 13		; 0000000dH
; Line 265
	call	_MrcDeadLoop
	jmp	SHORT $LN24@LookupOdtA
$LN8@LookupOdtA:
; Line 261
	movzx	si, BYTE PTR _Slot$[ebp]
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 13					; 0000000dH
	and	eax, 8191				; 00001fffH
; Line 262
	jmp	SHORT $LN35@LookupOdtA
$LN9@LookupOdtA:
; Line 258
	mov	al, BYTE PTR _Slot$[ebp]
	and	al, 7
	movzx	si, al
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 10					; 0000000aH
	and	eax, 58367				; 0000e3ffH
; Line 259
	jmp	SHORT $LN35@LookupOdtA
$LN10@LookupOdtA:
; Line 255
	mov	al, BYTE PTR _Slot$[ebp]
	and	al, 7
	movzx	si, al
	mov	eax, DWORD PTR _Config$[ebp]
	shl	si, 7
	and	eax, 64639				; 0000fc7fH
$LN35@LookupOdtA:
	or	si, ax
	mov	WORD PTR _Config$[ebp], si
$LN24@LookupOdtA:
	inc	DWORD PTR tv314[ebp]
	inc	DWORD PTR tv342[ebp]
	dec	DWORD PTR tv174[ebp]
	jne	$LL34@LookupOdtA
; Line 271
	mov	eax, DWORD PTR _odtActTableSize$[ebp]
	push	6
	xor	edx, edx
	pop	edi
	div	edi
	xor	ecx, ecx
	test	eax, eax
	jbe	SHORT $LN31@LookupOdtA
	mov	edx, DWORD PTR _OdtActTablePtr$[ebp]
$LL6@LookupOdtA:
; Line 272
	cmp	WORD PTR [edx], si
	je	SHORT $LN31@LookupOdtA
	inc	ecx
	add	edx, 6
	cmp	ecx, eax
	jb	SHORT $LL6@LookupOdtA
$LN31@LookupOdtA:
	pop	edi
	pop	esi
	pop	ebx
; Line 279
	cmp	ecx, eax
	jb	SHORT $LN2@LookupOdtA
; Line 280
	xor	eax, eax
; Line 287
	leave
	ret	0
$LN2@LookupOdtA:
; Line 285
	mov	eax, ecx
	imul	eax, 6
	add	eax, OFFSET _OdtActTable
; Line 287
	leave
	ret	0
_LookupOdtAct ENDP
_TEXT	ENDS
PUBLIC	_IsTermRank
; Function compile flags: /Ogspy
;	COMDAT _IsTermRank
_TEXT	SEGMENT
_Dimm$ = -8						; size = 1
_Rank$ = -4						; size = 1
_MrcData$ = 8						; size = 4
_Node$ = 12						; size = 1
_Channel$ = 16						; size = 1
_ThisDimm$ = 20						; size = 1
_ThisRank$ = 24						; size = 1
_IsTermRank PROC					; COMDAT
; Line 297
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	ebx
; Line 307
	movzx	ebx, BYTE PTR _Channel$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _MrcData$[ebp]
	mov	BYTE PTR _Dimm$[ebp], 0
	lea	ebx, DWORD PTR [ebx+ebx+15344]
$LL20@IsTermRank:
; Line 308
	movzx	esi, BYTE PTR _Dimm$[ebp]
	add	esi, ebx
	mov	BYTE PTR _Rank$[ebp], 0
	add	esi, esi
$LL21@IsTermRank:
; Line 310
	movzx	eax, BYTE PTR _Rank$[ebp]
	add	eax, esi
	cmp	BYTE PTR [eax+edi], 0
	je	SHORT $LN7@IsTermRank
; Line 316
	mov	al, BYTE PTR _Dimm$[ebp]
	cmp	al, BYTE PTR _ThisDimm$[ebp]
	jne	SHORT $LN4@IsTermRank
	mov	al, BYTE PTR _Rank$[ebp]
	cmp	al, BYTE PTR _ThisRank$[ebp]
	je	SHORT $LN7@IsTermRank
$LN4@IsTermRank:
; Line 322
	push	DWORD PTR _Rank$[ebp]
	push	DWORD PTR _Dimm$[ebp]
	push	DWORD PTR _Channel$[ebp]
	push	DWORD PTR _Node$[ebp]
	push	edi
	call	_LookupOdtAct
	add	esp, 20					; 00000014H
; Line 324
	test	eax, eax
	je	SHORT $LN7@IsTermRank
; Line 326
	movzx	edx, BYTE PTR _ThisRank$[ebp]
	movzx	ecx, BYTE PTR _ThisDimm$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*2]
	xor	edx, edx
	inc	edx
	shl	edx, cl
	movzx	ecx, WORD PTR [eax+2]
	test	ecx, edx
	jne	SHORT $LN1@IsTermRank
	movzx	eax, WORD PTR [eax+4]
	test	eax, edx
	jne	SHORT $LN1@IsTermRank
$LN7@IsTermRank:
; Line 308
	inc	BYTE PTR _Rank$[ebp]
	cmp	BYTE PTR _Rank$[ebp], 2
	jb	SHORT $LL21@IsTermRank
	inc	BYTE PTR _Dimm$[ebp]
	cmp	BYTE PTR _Dimm$[ebp], 2
	jb	SHORT $LL20@IsTermRank
; Line 333
	xor	eax, eax
$LN13@IsTermRank:
	pop	edi
	pop	esi
	pop	ebx
; Line 334
	leave
	ret	0
$LN1@IsTermRank:
; Line 327
	xor	eax, eax
	inc	eax
	jmp	SHORT $LN13@IsTermRank
_IsTermRank ENDP
_TEXT	ENDS
PUBLIC	_SetMcOdtValue
; Function compile flags: /Ogspy
;	COMDAT _SetMcOdtValue
_TEXT	SEGMENT
_MrcData$ = 8						; size = 4
_Node$ = 12						; size = 1
_Channel$ = 16						; size = 1
_McOdt$ = 20						; size = 1
_SetMcOdtValue PROC					; COMDAT
; Line 359
	ret	0
_SetMcOdtValue ENDP
_TEXT	ENDS
PUBLIC	_DramVrefToEncode
; Function compile flags: /Ogspy
;	COMDAT _DramVrefToEncode
_TEXT	SEGMENT
_InVref$ = 8						; size = 1
_Range$ = 12						; size = 4
_DramVrefToEncode PROC					; COMDAT
; Line 375
	mov	al, BYTE PTR _InVref$[esp-4]
; Line 380
	mov	ecx, DWORD PTR _Range$[esp-4]
	cmp	al, 60					; 0000003cH
	jae	SHORT $LN2@DramVrefTo
	add	al, 211					; 000000d3H
	mov	BYTE PTR [ecx], 1
; Line 381
	jmp	SHORT $LN1@DramVrefTo
$LN2@DramVrefTo:
; Line 385
	add	al, 196					; 000000c4H
; Line 386
	mov	BYTE PTR [ecx], 0
$LN1@DramVrefTo:
; Line 388
	movzx	eax, al
	imul	eax, 100				; 00000064H
	cdq
	push	65					; 00000041H
	pop	ecx
	idiv	ecx
	inc	al
; Line 390
	cmp	al, 50					; 00000032H
	jbe	SHORT $LN5@DramVrefTo
	push	50					; 00000032H
	pop	eax
; Line 391
	ret	0
$LN5@DramVrefTo:
; Line 390
	movzx	eax, al
; Line 391
	ret	0
_DramVrefToEncode ENDP
_TEXT	ENDS
PUBLIC	_CpuVrefPercentToEncode
; Function compile flags: /Ogspy
;	COMDAT _CpuVrefPercentToEncode
_TEXT	SEGMENT
_InVref$ = 8						; size = 1
_CpuVrefPercentToEncode PROC				; COMDAT
; Line 405
	mov	al, BYTE PTR _InVref$[esp-4]
	xor	cl, cl
	cmp	al, 65					; 00000041H
	jbe	SHORT $LN3@CpuVrefPer
; Line 406
	inc	cl
$LN3@CpuVrefPer:
; Line 409
	cmp	al, 80					; 00000050H
	jbe	SHORT $LN2@CpuVrefPer
; Line 410
	inc	cl
$LN2@CpuVrefPer:
; Line 413
	cmp	al, 93					; 0000005dH
	jbe	SHORT $LN1@CpuVrefPer
; Line 414
	inc	cl
$LN1@CpuVrefPer:
; Line 417
	sub	al, 63					; 0000003fH
; Line 418
	add	al, al
	sub	al, cl
; Line 420
	cmp	al, 96					; 00000060H
	jbe	SHORT $LN6@CpuVrefPer
	push	96					; 00000060H
	pop	eax
; Line 421
	ret	0
$LN6@CpuVrefPer:
; Line 420
	movzx	eax, al
; Line 421
	ret	0
_CpuVrefPercentToEncode ENDP
_TEXT	ENDS
PUBLIC	_SetOdtMatrix
; Function compile flags: /Ogspy
;	COMDAT _SetOdtMatrix
_TEXT	SEGMENT
tv753 = -40						; size = 4
_OdtValuePtr$ = -40					; size = 4
tv580 = -36						; size = 4
tv454 = -36						; size = 4
tv672 = -32						; size = 4
tv397 = -32						; size = 4
tv309 = -28						; size = 4
tv218 = -24						; size = 4
tv1349 = -20						; size = 4
tv1233 = -20						; size = 4
tv1387 = -16						; size = 4
tv1235 = -16						; size = 4
tv1221 = -12						; size = 4
tv1159 = -8						; size = 4
tv1063 = -4						; size = 4
tv1327 = 8						; size = 4
tv1095 = 8						; size = 4
tv892 = 8						; size = 4
_MrcData$ = 8						; size = 4
_Node$ = 12						; size = 1
tv1309 = 16						; size = 4
_Channel$ = 16						; size = 1
_Range$ = 19						; size = 1
_MrsValue$ = 20						; size = 4
_SetOdtMatrix PROC					; COMDAT
; Line 440
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
; Line 451
	movzx	esi, BYTE PTR _Channel$[ebp]
	push	edi
	mov	edi, DWORD PTR _MrcData$[ebp]
	mov	al, BYTE PTR [esi+edi+31272]
	mov	DWORD PTR tv672[ebp], esi
	cmp	al, 3
	jbe	$LN39@SetOdtMatr
	cmp	al, 7
	jne	$LN34@SetOdtMatr
; Line 541
	push	DWORD PTR _Channel$[ebp]
	push	DWORD PTR _Node$[ebp]
	push	edi
	call	_LookupDdr4OdtValue
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 543
	test	ebx, ebx
; Line 547
	je	$LN65@SetOdtMatr
; Line 551
	and	DWORD PTR tv1159[ebp], 0
	lea	eax, DWORD PTR [edi+esi*2+28610]
	mov	DWORD PTR tv1221[ebp], eax
	mov	eax, DWORD PTR _MrsValue$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR tv1233[ebp], eax
	lea	eax, DWORD PTR [ebx+5]
	mov	DWORD PTR tv1235[ebp], eax
	mov	DWORD PTR tv580[ebp], 2
$LL62@SetOdtMatr:
; Line 555
	mov	eax, DWORD PTR tv1221[ebp]
	cmp	BYTE PTR [eax], 0
	je	$LN12@SetOdtMatr
; Line 561
	mov	ecx, DWORD PTR tv1159[ebp]
	imul	esi, 4336				; 000010f0H
	lea	eax, DWORD PTR [esi+edi+55630]
	mov	esi, DWORD PTR tv1233[ebp]
	mov	DWORD PTR tv753[ebp], eax
	mov	eax, DWORD PTR tv1235[ebp]
	mov	DWORD PTR tv1063[ebp], eax
	mov	eax, DWORD PTR tv672[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]
	imul	eax, 36					; 00000024H
	lea	eax, DWORD PTR [eax+edi+71023]
	mov	DWORD PTR tv1095[ebp], eax
	mov	DWORD PTR tv309[ebp], 2
$LL58@SetOdtMatr:
; Line 566
	mov	eax, DWORD PTR tv1063[ebp]
	movzx	eax, BYTE PTR [eax]
	mov	ecx, eax
	and	ecx, 7
	shl	ecx, 16					; 00000010H
	mov	DWORD PTR [esi-20], ecx
; Line 567
	mov	ecx, eax
; Line 568
	and	eax, 56					; 00000038H
	shl	eax, 11					; 0000000bH
	and	ecx, -64				; ffffffc0H
	mov	DWORD PTR [esi-4], eax
	shl	ecx, 11					; 0000000bH
; Line 569
	lea	eax, DWORD PTR _Range$[ebp]
	push	eax
	mov	DWORD PTR [esi-16], ecx
	movzx	eax, BYTE PTR [ebx+4]
	push	eax
	call	_DramVrefToEncode
	pop	ecx
	pop	ecx
	mov	DWORD PTR tv218[ebp], 18		; 00000012H
	and	eax, 63					; 0000003fH
	shl	eax, 8
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR tv1095[ebp]
	mov	DWORD PTR tv892[ebp], eax
$LL6@SetOdtMatr:
; Line 572
	cmp	BYTE PTR _Range$[ebp], 0
; Line 573
	lea	eax, DWORD PTR _Range$[ebp]
	push	eax
	movzx	eax, BYTE PTR [ebx+4]
	push	eax
	jne	SHORT $LN3@SetOdtMatr
	call	_DramVrefToEncode
	add	al, 23					; 00000017H
; Line 574
	jmp	SHORT $LN64@SetOdtMatr
$LN3@SetOdtMatr:
; Line 575
	call	_DramVrefToEncode
$LN64@SetOdtMatr:
	pop	ecx
	pop	ecx
	mov	ecx, DWORD PTR tv892[ebp]
	inc	DWORD PTR tv892[ebp]
	dec	DWORD PTR tv218[ebp]
	mov	BYTE PTR [ecx], al
	jne	SHORT $LL6@SetOdtMatr
; Line 579
	movzx	eax, BYTE PTR _Range$[ebp]
	and	eax, 1
	shl	eax, 6
	or	DWORD PTR [esi], eax
; Line 580
	movzx	eax, BYTE PTR [ebx+3]
	push	eax
	call	_CpuVrefPercentToEncode
	movzx	eax, al
	cdq
	pop	ecx
	mov	ecx, DWORD PTR tv753[ebp]
	add	esi, 140				; 0000008cH
	inc	DWORD PTR tv1063[ebp]
	dec	DWORD PTR tv309[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR tv892[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	DWORD PTR tv1095[ebp], eax
	jne	$LL58@SetOdtMatr
; Line 561
	mov	esi, DWORD PTR tv672[ebp]
$LN12@SetOdtMatr:
; Line 551
	inc	DWORD PTR tv1159[ebp]
	inc	DWORD PTR tv1221[ebp]
	add	DWORD PTR tv1235[ebp], 4
	add	DWORD PTR tv1233[ebp], 280		; 00000118H
	dec	DWORD PTR tv580[ebp]
	jne	$LL62@SetOdtMatr
; Line 584
	jmp	$LN34@SetOdtMatr
$LN39@SetOdtMatr:
; Line 459
	push	DWORD PTR _Channel$[ebp]
	push	DWORD PTR _Node$[ebp]
	push	edi
	call	_LookupOdtValue
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _OdtValuePtr$[ebp], eax
; Line 460
	test	eax, eax
	jne	SHORT $LN38@SetOdtMatr
$LN65@SetOdtMatr:
; Line 461
	mov	DWORD PTR [edi+65333], 15		; 0000000fH
; Line 463
	call	_MrcDeadLoop
; Line 464
	jmp	$LN34@SetOdtMatr
$LN38@SetOdtMatr:
; Line 472
	and	DWORD PTR tv1327[ebp], 0
	and	DWORD PTR tv1349[ebp], 0
	push	2
	lea	eax, DWORD PTR [edi+esi*2+28610]
	pop	ecx
	mov	DWORD PTR tv1387[ebp], eax
	mov	DWORD PTR tv397[ebp], ecx
$LL63@SetOdtMatr:
; Line 476
	mov	eax, DWORD PTR tv1387[ebp]
	cmp	BYTE PTR [eax], 0
	je	$LN35@SetOdtMatr
; Line 483
	mov	edx, DWORD PTR tv1327[ebp]
	lea	edx, DWORD PTR [edx+esi*2+15344]
	lea	edx, DWORD PTR [edi+edx*2]
	xor	eax, eax
	mov	DWORD PTR tv1309[ebp], edx
	mov	DWORD PTR tv454[ebp], ecx
$LL61@SetOdtMatr:
; Line 487
	mov	ecx, DWORD PTR tv1309[ebp]
	cmp	BYTE PTR [ecx], 0
	je	$LN31@SetOdtMatr
; Line 493
	mov	ecx, DWORD PTR tv1349[ebp]
	mov	edx, DWORD PTR _OdtValuePtr$[ebp]
; Line 511
	mov	ebx, DWORD PTR _MrsValue$[ebp]
	add	ecx, eax
	mov	dl, BYTE PTR [ecx+edx+3]
	imul	ecx, 140				; 0000008cH
	add	ecx, ebx
	and	DWORD PTR [ecx+8], 0
; Line 512
	mov	bl, dl
	and	bl, 240					; 000000f0H
	cmp	bl, 16					; 00000010H
	jne	SHORT $LN28@SetOdtMatr
; Line 513
	mov	DWORD PTR [ecx+8], 32768		; 00008000H
	jmp	SHORT $LN59@SetOdtMatr
$LN28@SetOdtMatr:
; Line 515
	cmp	bl, 32					; 00000020H
	jne	SHORT $LN59@SetOdtMatr
; Line 516
	mov	DWORD PTR [ecx+8], 65536		; 00010000H
$LN59@SetOdtMatr:
; Line 519
	and	DWORD PTR [ecx+4], 0
; Line 520
	and	dl, 15					; 0000000fH
	cmp	dl, 1
	jne	SHORT $LN25@SetOdtMatr
; Line 521
	mov	DWORD PTR [ecx+4], 256			; 00000100H
	jmp	SHORT $LN31@SetOdtMatr
$LN25@SetOdtMatr:
; Line 523
	cmp	dl, 2
	jne	SHORT $LN23@SetOdtMatr
; Line 524
	mov	DWORD PTR [ecx+4], 4096			; 00001000H
	jmp	SHORT $LN31@SetOdtMatr
$LN23@SetOdtMatr:
; Line 526
	cmp	dl, 4
	jne	SHORT $LN21@SetOdtMatr
; Line 527
	mov	DWORD PTR [ecx+4], 32768		; 00008000H
	jmp	SHORT $LN31@SetOdtMatr
$LN21@SetOdtMatr:
; Line 529
	cmp	dl, 3
	jne	SHORT $LN19@SetOdtMatr
; Line 530
	mov	DWORD PTR [ecx+4], 4352			; 00001100H
	jmp	SHORT $LN31@SetOdtMatr
$LN19@SetOdtMatr:
; Line 532
	cmp	dl, 5
	jne	SHORT $LN31@SetOdtMatr
; Line 533
	mov	DWORD PTR [ecx+4], 33024		; 00008100H
$LN31@SetOdtMatr:
; Line 483
	inc	eax
	inc	DWORD PTR tv1309[ebp]
	dec	DWORD PTR tv454[ebp]
	jne	$LL61@SetOdtMatr
	push	2
	pop	ecx
$LN35@SetOdtMatr:
	inc	DWORD PTR tv1327[ebp]
	add	DWORD PTR tv1349[ebp], ecx
	inc	DWORD PTR tv1387[ebp]
	dec	DWORD PTR tv397[ebp]
	jne	$LL63@SetOdtMatr
$LN34@SetOdtMatr:
	pop	edi
	pop	esi
	pop	ebx
; Line 591
	leave
	ret	0
_SetOdtMatrix ENDP
_TEXT	ENDS
END
