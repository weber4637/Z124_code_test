; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	d:\bios\z124-002\z124-002\DenvertonPkg\SystemAgent\Mrc\Mmrc\ProjectData\DNV\External\Source\Bdat.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_CPGC_CONFIG_TYPES:DWORD
_DATA	ENDS
PUBLIC	_PrintMemoryData2Structure
; Function compile flags: /Ogspy
;	COMDAT _PrintMemoryData2Structure
_TEXT	SEGMENT
_BdatMemoryData2Structure$ = 8				; size = 4
_PrintMemoryData2Structure PROC				; COMDAT
; File d:\bios\z124-002\z124-002\denvertonpkg\systemagent\mrc\mmrc\projectdata\dnv\external\source\bdat.c
; Line 59
	xor	al, al
$LL49@PrintMemor:
; Line 61
	test	al, al
	jne	SHORT $LN47@PrintMemor
; Line 63
	add	al, 4
	jmp	SHORT $LL49@PrintMemor
$LN47@PrintMemor:
; Line 64
	cmp	al, 4
	je	SHORT $LN44@PrintMemor
	cmp	al, 6
	je	SHORT $LN44@PrintMemor
; Line 69
	inc	al
	jmp	SHORT $LN43@PrintMemor
$LN44@PrintMemor:
; Line 66
	add	al, 2
$LN43@PrintMemor:
; Line 60
	cmp	al, 16					; 00000010H
	jb	SHORT $LL49@PrintMemor
; Line 227
	ret	0
_PrintMemoryData2Structure ENDP
_TEXT	ENDS
PUBLIC	_Crc16
; Function compile flags: /Ogspy
;	COMDAT _Crc16
_TEXT	SEGMENT
_crc$ = -4						; size = 2
_Ptr$ = 8						; size = 4
_Count$ = 12						; size = 4
_Crc16	PROC						; COMDAT
; Line 535
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 537
	and	DWORD PTR _crc$[ebp], 0
; Line 538
	dec	DWORD PTR _Count$[ebp]
	js	SHORT $LN6@Crc16
	mov	eax, DWORD PTR _Ptr$[ebp]
$LL7@Crc16:
; Line 539
	movsx	cx, BYTE PTR [eax]
	shl	cx, 8
	xor	WORD PTR _crc$[ebp], cx
	push	8
	inc	eax
	pop	ecx
$LL5@Crc16:
; Line 541
	test	DWORD PTR _crc$[ebp], 32768		; 00008000H
	je	SHORT $LN2@Crc16
; Line 542
	mov	edx, DWORD PTR _crc$[ebp]
	add	edx, edx
	xor	edx, 4129				; 00001021H
	movzx	edx, dx
	mov	DWORD PTR _crc$[ebp], edx
; Line 543
	jmp	SHORT $LN4@Crc16
$LN2@Crc16:
; Line 544
	shl	DWORD PTR _crc$[ebp], 1
$LN4@Crc16:
; Line 540
	dec	ecx
	jne	SHORT $LL5@Crc16
; Line 538
	dec	DWORD PTR _Count$[ebp]
	jns	SHORT $LL7@Crc16
$LN6@Crc16:
; Line 548
	mov	ax, WORD PTR _crc$[ebp]
; Line 549
	leave
	ret	0
_Crc16	ENDP
_TEXT	ENDS
PUBLIC	_FillBdatStructure
EXTRN	_MrsCommandIndex:BYTE
EXTRN	_GetSetDdrioGroup2:PROC
EXTRN	_IsStrobeValid:PROC
EXTRN	_GetRelevantSpdBytes:PROC
EXTRN	_MmrcMemset:PROC
; Function compile flags: /Ogspy
;	COMDAT _FillBdatStructure
_TEXT	SEGMENT
_BdatMemorySchemaGuid$ = -108				; size = 16
tv2367 = -92						; size = 4
tv2593 = -88						; size = 4
tv244 = -84						; size = 4
tv395 = -80						; size = 4
tv2563 = -76						; size = 4
tv2384 = -72						; size = 4
tv2578 = -68						; size = 4
tv2230 = -64						; size = 4
tv2190 = -60						; size = 4
tv2137 = -56						; size = 4
tv1567 = -52						; size = 4
tv2686 = -48						; size = 4
_MaxSpdElements$ = -44					; size = 4
_RelevantSpdBytes$ = -40				; size = 4
tv2386 = -36						; size = 4
tv1402 = -32						; size = 4
tv1223 = -32						; size = 4
_SpdElement$ = -32					; size = 2
tv1445 = -28						; size = 4
tv1241 = -28						; size = 4
tv2038 = -24						; size = 4
_Rank$ = -20						; size = 1
tv1457 = -16						; size = 4
tv2201 = -12						; size = 4
_GetValue$ = -8						; size = 4
_Strobe$ = -4						; size = 1
_Channel$ = 8						; size = 1
_MrcData$ = 8						; size = 4
_BdatMemoryData2Structure$ = 12				; size = 4
tv2036 = 15						; size = 1
_FillBdatStructure PROC					; COMDAT
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
; Line 266
	mov	ebx, DWORD PTR _BdatMemoryData2Structure$[ebp]
	push	esi
	push	edi
	mov	eax, 18563				; 00004883H
	push	9053					; 0000235dH
	mov	WORD PTR _BdatMemorySchemaGuid$[ebp+4], ax
	mov	eax, 18732				; 0000492cH
	push	0
	push	ebx
	mov	DWORD PTR _BdatMemorySchemaGuid$[ebp], -834705516 ; ce3f6794H
	mov	WORD PTR _BdatMemorySchemaGuid$[ebp+6], ax
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+8], 141 ; 0000008dH
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+9], 186 ; 000000baH
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+10], 47 ; 0000002fH
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+11], 192 ; 000000c0H
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+12], 152 ; 00000098H
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+13], 68 ; 00000044H
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+14], 119 ; 00000077H
	mov	BYTE PTR _BdatMemorySchemaGuid$[ebp+15], 16 ; 00000010H
	call	_MmrcMemset
; Line 270
	lea	esi, DWORD PTR _BdatMemorySchemaGuid$[ebp]
	mov	edi, ebx
	movsd
	movsd
	movsd
	movsd
; Line 286
	mov	edi, DWORD PTR _MrcData$[ebp]
	xor	eax, eax
	mov	DWORD PTR [ebx+16], 9053		; 0000235dH
	mov	WORD PTR [ebx+20], ax
	mov	DWORD PTR [ebx+22], 9765954		; 00950442H
	mov	BYTE PTR [ebx+26], 1
	mov	BYTE PTR [ebx+27], 2
	mov	BYTE PTR [ebx+28], 2
	mov	BYTE PTR [ebx+29], 2
	mov	BYTE PTR [ebx+30], 18			; 00000012H
	mov	BYTE PTR [ebx+31], 72			; 00000048H
	movzx	eax, BYTE PTR [edi+65346]
	mov	DWORD PTR [ebx+32], eax
; Line 293
	mov	BYTE PTR [ebx+36], 1
; Line 294
	mov	ax, WORD PTR [edi+65435]
	mov	WORD PTR [ebx+37], ax
; Line 295
	mov	al, BYTE PTR [edi+65434]
	mov	BYTE PTR [ebx+39], al
; Line 300
	movzx	eax, BYTE PTR [edi+31275]
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR [edi+28608]
	lea	esi, DWORD PTR [edi+28610]
	cmp	eax, 10					; 0000000aH
	ja	SHORT $LN37@FillBdatSt
	jmp	DWORD PTR $LN78@FillBdatSt[eax*4]
$LN48@FillBdatSt:
; Line 302
	mov	eax, 8000				; 00001f40H
; Line 303
	jmp	SHORT $LN76@FillBdatSt
$LN47@FillBdatSt:
; Line 305
	mov	eax, 10666				; 000029aaH
; Line 306
	jmp	SHORT $LN76@FillBdatSt
$LN46@FillBdatSt:
; Line 308
	mov	eax, 13333				; 00003415H
; Line 309
	jmp	SHORT $LN76@FillBdatSt
$LN45@FillBdatSt:
; Line 311
	mov	eax, 16000				; 00003e80H
; Line 312
	jmp	SHORT $LN76@FillBdatSt
$LN44@FillBdatSt:
; Line 314
	mov	eax, 18666				; 000048eaH
; Line 315
	jmp	SHORT $LN76@FillBdatSt
$LN43@FillBdatSt:
; Line 317
	mov	eax, 21333				; 00005355H
; Line 318
	jmp	SHORT $LN76@FillBdatSt
$LN42@FillBdatSt:
; Line 320
	mov	eax, 24000				; 00005dc0H
; Line 321
	jmp	SHORT $LN76@FillBdatSt
$LN41@FillBdatSt:
; Line 323
	mov	eax, 26666				; 0000682aH
; Line 324
	jmp	SHORT $LN76@FillBdatSt
$LN40@FillBdatSt:
; Line 326
	mov	eax, 29333				; 00007295H
; Line 327
	jmp	SHORT $LN76@FillBdatSt
$LN39@FillBdatSt:
; Line 329
	mov	eax, 32000				; 00007d00H
; Line 330
	jmp	SHORT $LN76@FillBdatSt
$LN38@FillBdatSt:
; Line 332
	mov	eax, 37777				; 00009391H
$LN76@FillBdatSt:
	mov	WORD PTR [ebx+40], ax
$LN37@FillBdatSt:
; Line 341
	mov	eax, DWORD PTR [edi+55388]
	shr	eax, 9
	and	eax, 3
	dec	eax
	je	SHORT $LN32@FillBdatSt
	dec	eax
	je	SHORT $LN33@FillBdatSt
	dec	eax
	jne	SHORT $LN35@FillBdatSt
; Line 343
	mov	eax, 1500				; 000005dcH
; Line 344
	jmp	SHORT $LN77@FillBdatSt
$LN33@FillBdatSt:
; Line 346
	mov	eax, 1350				; 00000546H
; Line 347
	jmp	SHORT $LN77@FillBdatSt
$LN32@FillBdatSt:
; Line 349
	mov	eax, 1250				; 000004e2H
$LN77@FillBdatSt:
	mov	WORD PTR [ebx+42], ax
$LN35@FillBdatSt:
; Line 365
	mov	eax, 520				; 00000208H
	mov	WORD PTR [ebx+45], ax
; Line 371
	add	eax, 13					; 0000000dH
	mov	WORD PTR [ebx+47], ax
; Line 372
	xor	eax, eax
	xor	edx, edx
	mov	WORD PTR [ebx+49], ax
; Line 376
	mov	BYTE PTR _Channel$[ebp], al
	lea	eax, DWORD PTR [ebx+55]
	mov	BYTE PTR [ebx+44], 16			; 00000010H
	mov	BYTE PTR [ebx+51], 16			; 00000010H
	mov	BYTE PTR [ebx+52], 16			; 00000010H
	mov	DWORD PTR tv2230[ebp], edx
	mov	DWORD PTR tv2384[ebp], edx
	mov	DWORD PTR tv2386[ebp], edx
	mov	DWORD PTR tv2563[ebp], ecx
	mov	DWORD PTR tv2578[ebp], esi
	mov	DWORD PTR tv2593[ebp], eax
$LL30@FillBdatSt:
; Line 382
	mov	ecx, DWORD PTR tv2563[ebp]
	cmp	BYTE PTR [ecx], 0
	je	$LN29@FillBdatSt
; Line 385
	mov	ecx, DWORD PTR tv2578[ebp]
	mov	BYTE PTR [eax-2], 1
; Line 386
	mov	BYTE PTR [eax-1], 2
	mov	BYTE PTR tv2036[ebp], 0
	mov	DWORD PTR tv2038[ebp], edx
	mov	DWORD PTR tv2137[ebp], edx
	mov	DWORD PTR tv2190[ebp], ecx
	mov	DWORD PTR tv2201[ebp], eax
$LL26@FillBdatSt:
; Line 393
	mov	ecx, DWORD PTR tv2190[ebp]
	cmp	BYTE PTR [ecx], 0
	je	$LN25@FillBdatSt
; Line 396
	mov	eax, DWORD PTR tv2201[ebp]
	mov	BYTE PTR [eax], 1
; Line 398
	lea	eax, DWORD PTR _MaxSpdElements$[ebp]
	push	eax
	lea	eax, DWORD PTR _RelevantSpdBytes$[ebp]
	push	eax
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_GetRelevantSpdBytes
; Line 399
	xor	edx, edx
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _MaxSpdElements$[ebp], edx
	je	SHORT $LN21@FillBdatSt
	cmp	DWORD PTR _RelevantSpdBytes$[ebp], edx
	je	SHORT $LN21@FillBdatSt
; Line 402
	mov	DWORD PTR _SpdElement$[ebp], edx
	cmp	DWORD PTR _MaxSpdElements$[ebp], edx
	jbe	SHORT $LN21@FillBdatSt
	xor	eax, eax
$LL74@FillBdatSt:
; Line 403
	mov	ecx, DWORD PTR _RelevantSpdBytes$[ebp]
	add	eax, eax
	add	ecx, eax
	cmp	WORD PTR [ecx], dx
	je	SHORT $LN18@FillBdatSt
; Line 406
	movzx	ecx, WORD PTR [ecx]
	mov	esi, DWORD PTR tv2201[ebp]
	mov	edx, ecx
	shr	edx, 3
	and	ecx, -2147483641			; 80000007H
	lea	esi, DWORD PTR [edx+esi+1673]
	jns	SHORT $LN75@FillBdatSt
	dec	ecx
	or	ecx, -8					; fffffff8H
	inc	ecx
$LN75@FillBdatSt:
	mov	dl, 1
	shl	dl, cl
	or	BYTE PTR [esi], dl
; Line 407
	mov	ecx, DWORD PTR _RelevantSpdBytes$[ebp]
	movzx	eax, WORD PTR [eax+ecx]
	mov	edx, DWORD PTR tv2386[ebp]
	mov	ecx, DWORD PTR tv2038[ebp]
	add	ecx, edx
	mov	edx, DWORD PTR tv2201[ebp]
	imul	ecx, 514				; 00000202H
	add	ecx, eax
	mov	cl, BYTE PTR [ecx+edi+28631]
	mov	BYTE PTR [eax+edx+1737], cl
	xor	edx, edx
$LN18@FillBdatSt:
	inc	DWORD PTR _SpdElement$[ebp]
	movzx	eax, WORD PTR _SpdElement$[ebp]
	cmp	eax, DWORD PTR _MaxSpdElements$[ebp]
	jb	SHORT $LL74@FillBdatSt
$LN21@FillBdatSt:
; Line 411
	mov	eax, DWORD PTR tv2230[ebp]
	mov	ecx, DWORD PTR tv2038[ebp]
	mov	esi, DWORD PTR tv2201[ebp]
	lea	eax, DWORD PTR [ecx+eax*2+15344]
	lea	eax, DWORD PTR [edi+eax*2]
	mov	BYTE PTR _Rank$[ebp], 0
	mov	DWORD PTR tv1457[ebp], edx
	mov	DWORD PTR tv1567[ebp], eax
	add	esi, 3
$LL15@FillBdatSt:
; Line 416
	mov	eax, DWORD PTR tv1567[ebp]
	cmp	BYTE PTR [eax], 0
	je	$LN14@FillBdatSt
; Line 419
	mov	BYTE PTR [esi-2], 1
; Line 420
	test	BYTE PTR [edi+65339], 1
	je	SHORT $LN11@FillBdatSt
; Line 421
	mov	BYTE PTR [esi-1], 1
$LN11@FillBdatSt:
; Line 425
	mov	eax, DWORD PTR tv2038[ebp]
	mov	ecx, DWORD PTR tv2386[ebp]
	add	ecx, eax
	mov	eax, DWORD PTR tv1457[ebp]
	lea	eax, DWORD PTR [eax+ecx*2]
	imul	eax, 28					; 0000001cH
	add	eax, edi
	mov	BYTE PTR [esi], 0
	mov	dl, BYTE PTR [eax+64786]
	mov	BYTE PTR [esi+1], dl
; Line 426
	mov	dl, BYTE PTR [eax+64788]
	mov	BYTE PTR [esi+2], dl
; Line 427
	mov	dl, BYTE PTR [eax+64798]
	mov	BYTE PTR [esi+3], dl
; Line 428
	mov	dl, BYTE PTR [eax+64800]
	mov	BYTE PTR [esi+4], dl
; Line 429
	mov	dl, BYTE PTR [eax+64806]
	mov	BYTE PTR [esi+5], dl
; Line 430
	mov	dl, BYTE PTR [eax+64808]
	mov	BYTE PTR [esi+6], dl
; Line 431
	mov	BYTE PTR [esi+7], 0
; Line 432
	mov	BYTE PTR [esi+8], 0
; Line 433
	mov	BYTE PTR [esi+9], 0
; Line 434
	mov	BYTE PTR [esi+10], 0
; Line 435
	mov	dl, BYTE PTR [eax+64790]
	mov	BYTE PTR [esi+11], dl
; Line 436
	mov	edx, DWORD PTR tv1457[ebp]
	lea	ecx, DWORD PTR [edx+ecx*2+2314]
	imul	ecx, 28					; 0000001cH
	mov	cl, BYTE PTR [ecx+edi]
	mov	BYTE PTR [esi+12], cl
; Line 437
	mov	cl, BYTE PTR [eax+64802]
	mov	BYTE PTR [esi+13], cl
; Line 438
	mov	al, BYTE PTR [eax+64804]
	mov	BYTE PTR [esi+14], al
	lea	eax, DWORD PTR [esi+683]
	mov	DWORD PTR tv1223[ebp], eax
	lea	eax, DWORD PTR [esi+629]
; Line 439
	mov	BYTE PTR [esi+15], 0
; Line 440
	mov	BYTE PTR [esi+16], 0
; Line 471
	mov	BYTE PTR [esi+705], 255			; 000000ffH
; Line 473
	mov	BYTE PTR [esi+706], 0
; Line 474
	mov	BYTE PTR [esi+707], 0
; Line 476
	mov	BYTE PTR _Strobe$[ebp], 0
	mov	DWORD PTR tv1241[ebp], eax
$LL10@FillBdatSt:
; Line 480
	push	0
	push	0
	push	DWORD PTR _Strobe$[ebp]
	push	DWORD PTR _Rank$[ebp]
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_IsStrobeValid
	add	esp, 24					; 00000018H
	test	al, al
	je	$LN9@FillBdatSt
; Line 486
	movzx	eax, BYTE PTR tv2036[ebp]
	add	al, BYTE PTR _Rank$[ebp]
	lea	ecx, DWORD PTR _GetValue$[ebp]
	push	ecx
	push	3
	push	57344					; 0000e000H
	push	DWORD PTR _Strobe$[ebp]
	mov	BYTE PTR tv2686[ebp], al
	push	eax
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_GetSetDdrioGroup2
; Line 487
	mov	ax, WORD PTR _GetValue$[ebp]
	mov	ecx, DWORD PTR tv1241[ebp]
	mov	WORD PTR [ecx-36], ax
; Line 491
	lea	eax, DWORD PTR _GetValue$[ebp]
	push	eax
	push	3
	push	57358					; 0000e00eH
	push	DWORD PTR _Strobe$[ebp]
	push	DWORD PTR tv2686[ebp]
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_GetSetDdrioGroup2
; Line 492
	mov	ax, WORD PTR _GetValue$[ebp]
	mov	ecx, DWORD PTR tv1241[ebp]
	mov	WORD PTR [ecx], ax
; Line 496
	lea	eax, DWORD PTR _GetValue$[ebp]
	push	eax
	push	3
	push	57345					; 0000e001H
	push	DWORD PTR _Strobe$[ebp]
	push	DWORD PTR tv2686[ebp]
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_GetSetDdrioGroup2
; Line 497
	mov	al, BYTE PTR _GetValue$[ebp]
	mov	ecx, DWORD PTR tv1223[ebp]
	add	esp, 84					; 00000054H
	mov	BYTE PTR [ecx-18], al
; Line 501
	lea	eax, DWORD PTR _GetValue$[ebp]
	push	eax
	push	3
	push	57359					; 0000e00fH
	push	DWORD PTR _Strobe$[ebp]
	push	DWORD PTR tv2686[ebp]
	push	DWORD PTR _Channel$[ebp]
	push	edi
	call	_GetSetDdrioGroup2
; Line 502
	mov	al, BYTE PTR _GetValue$[ebp]
	mov	ecx, DWORD PTR tv1223[ebp]
	add	esp, 28					; 0000001cH
	mov	BYTE PTR [ecx], al
$LN9@FillBdatSt:
	inc	BYTE PTR _Strobe$[ebp]
	add	DWORD PTR tv1241[ebp], 2
	inc	DWORD PTR tv1223[ebp]
	cmp	BYTE PTR _Strobe$[ebp], 18		; 00000012H
	jb	$LL10@FillBdatSt
	mov	eax, DWORD PTR tv1457[ebp]
	mov	ecx, DWORD PTR tv2137[ebp]
	add	eax, ecx
	imul	eax, 70					; 00000046H
	lea	eax, DWORD PTR _MrsCommandIndex[eax]
	mov	DWORD PTR tv2367[ebp], eax
; Line 505
	lea	eax, DWORD PTR [esi+708]
	mov	DWORD PTR tv1445[ebp], eax
	mov	DWORD PTR tv244[ebp], 9
$LL73@FillBdatSt:
; Line 506
	mov	ecx, DWORD PTR tv1445[ebp]
	mov	eax, DWORD PTR tv2367[ebp]
	mov	DWORD PTR tv1402[ebp], ecx
	mov	DWORD PTR tv395[ebp], 4
$LL3@FillBdatSt:
; Line 507
	movzx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR tv2384[ebp]
	mov	edx, DWORD PTR [edi+ecx*8+55526]
	mov	ecx, DWORD PTR [edi+ecx*8+55530]
	shrd	edx, ecx, 6
	shr	ecx, 6
	mov	ecx, DWORD PTR tv1402[ebp]
	add	DWORD PTR tv1402[ebp], 2
	inc	eax
	inc	eax
	dec	DWORD PTR tv395[ebp]
	mov	WORD PTR [ecx], dx
	jne	SHORT $LL3@FillBdatSt
	add	DWORD PTR tv1445[ebp], 14		; 0000000eH
	dec	DWORD PTR tv244[ebp]
	jne	SHORT $LL73@FillBdatSt
$LN14@FillBdatSt:
; Line 411
	inc	BYTE PTR _Rank$[ebp]
	inc	DWORD PTR tv1457[ebp]
	add	esi, 836				; 00000344H
	inc	DWORD PTR tv1567[ebp]
	cmp	BYTE PTR _Rank$[ebp], 2
	jb	$LL15@FillBdatSt
	mov	eax, DWORD PTR tv2593[ebp]
	xor	edx, edx
$LN25@FillBdatSt:
	inc	DWORD PTR tv2038[ebp]
	add	DWORD PTR tv2137[ebp], 2
	add	DWORD PTR tv2201[ebp], 2249		; 000008c9H
	add	BYTE PTR tv2036[ebp], 2
	inc	DWORD PTR tv2190[ebp]
	cmp	BYTE PTR tv2036[ebp], 4
	jb	$LL26@FillBdatSt
$LN29@FillBdatSt:
; Line 376
	inc	BYTE PTR _Channel$[ebp]
	inc	DWORD PTR tv2230[ebp]
	add	DWORD PTR tv2386[ebp], 2
	add	DWORD PTR tv2578[ebp], 2
	add	DWORD PTR tv2384[ebp], 542		; 0000021eH
	add	eax, 4500				; 00001194H
	inc	DWORD PTR tv2563[ebp]
	cmp	BYTE PTR _Channel$[ebp], 2
	mov	DWORD PTR tv2593[ebp], eax
	jb	$LL30@FillBdatSt
; Line 517
	push	9053					; 0000235dH
	push	ebx
	call	_Crc16
	pop	ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	WORD PTR [ebx+20], ax
	pop	ebx
; Line 521
	leave
	ret	0
	npad	3
$LN78@FillBdatSt:
	DD	$LN48@FillBdatSt
	DD	$LN47@FillBdatSt
	DD	$LN46@FillBdatSt
	DD	$LN45@FillBdatSt
	DD	$LN44@FillBdatSt
	DD	$LN43@FillBdatSt
	DD	$LN42@FillBdatSt
	DD	$LN41@FillBdatSt
	DD	$LN40@FillBdatSt
	DD	$LN39@FillBdatSt
	DD	$LN38@FillBdatSt
_FillBdatStructure ENDP
_TEXT	ENDS
END
