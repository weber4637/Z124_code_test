//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
//**********************************************************************
//<AMI_FHDR_START>
//
// Name:  <NCT6683DSetup.sd>
//
// Description: SIO Form Template, Setup screen definition file
//
//<AMI_FHDR_END>
//**********************************************************************

#ifdef SETUP_DATA_DEFINITION
/***********************************************************/
/* Put NVRAM data definitions here.
/* For example:    UINT8 Data1;
/* These definitions will be converted by the build process
/* to a definitions of SETUP_DATA fields.
/***********************************************************/
#endif //SETUP_DATA_DEFINITION

//-------------------------------------------------------------------------
//Select Top level menu itmem (forset) for you pages
//-------------------------------------------------------------------------
#ifdef ADVANCED_FORM_SET

//-------------------------------------------------------------------------
//If you need any additional type definitions add them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_TYPEDEF
    #include "NCT6683DSetup.h"
    #include "Token.h"
#endif

//-------------------------------------------------------------------------
//If you need custom varstore's define them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_VARSTORE

    #ifdef SETUP_DATA_DEFINITION
    AUTO_ID(LPT_V_DATA_KEY)
    AUTO_ID(LPT_NV_DATA_KEY)
    AUTO_ID(COMA_V_DATA_KEY)
    AUTO_ID(COMA_NV_DATA_KEY)
    AUTO_ID(COMB_V_DATA_KEY)
    AUTO_ID(COMB_NV_DATA_KEY)
    AUTO_ID(CIR_V_DATA_KEY)
    AUTO_ID(CIR_NV_DATA_KEY)
    #endif //#ifdef SETUP_DATA_DEFINITION
    AMI_SIO_VARSTORE(LPT, PNP0400_0)
    AMI_SIO_VARSTORE(CIR, PNP0510_0)
    AMI_SIO_VARSTORE(COMA, PNP0501_0)
    AMI_SIO_VARSTORE(COMB, PNP0501_1)

#endif

//-------------------------------------------------------------------------
//Define controls to be added to the top level page of the formset
//-------------------------------------------------------------------------
#ifdef FORM_SET_ITEM
#endif

//-------------------------------------------------------------------------
//Define goto commands for the forms defined in this file
//-------------------------------------------------------------------------
#ifdef FORM_SET_GOTO

    goto NCT6683D_FORM_ID,
    prompt  = STRING_TOKEN(STR_NCT6683D_SIO_FORM),
    help    = STRING_TOKEN(STR_NCT6683D_SIO_FORM_HELP);

#endif

//-------------------------------------------------------------------------
// Define forms
//-------------------------------------------------------------------------
#ifdef FORM_SET_FORM

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SIO formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    form formid = AUTO_ID(NCT6683D_FORM_ID),
        title = STRING_TOKEN(STR_NCT6683D_SIO_FORM);
        SUBTITLE(STRING_TOKEN(STR_NCT6683D_SIO_FORM))
    
        SEPARATOR
    
        text
        help   = STRING_TOKEN(STR_NCT6683D_SIO_FORM_HELP),
        text   = STRING_TOKEN(STR_NCT6683D_SIO_PROMPT),
        text   = STRING_TOKEN(STR_NCT6683D),
        flags  = 0,
        key    = 0;

        //Goto Serial 1 Form
        #if NCT6683D_SERIAL_PORT1_PRESENT
        suppressif ideqval COMA_V_DATA.DevImplemented == 0x00;
            goto NCT6683D_SERIAL1_FORM_ID,
            prompt  = STRING_TOKEN(STR_SERIAL1_FORM),
            help    = STRING_TOKEN(STR_SERIAL1_FORM_HELP);
        endif;
        #endif
    
        //Goto Serial 2 Form
        #if NCT6683D_SERIAL_PORT2_PRESENT
        suppressif ideqval COMB_V_DATA.DevImplemented == 0x00;
            goto NCT6683D_SERIAL2_FORM_ID,
            prompt  = STRING_TOKEN(STR_SERIAL2_FORM),
            help    = STRING_TOKEN(STR_SERIAL2_FORM_HELP);
        endif;
        #endif

        //Goto Parallel Form
        #if NCT6683D_PARALLEL_PORT_PRESENT
        suppressif ideqval LPT_V_DATA.DevImplemented == 0x00;
            goto NCT6683D_PARALLEL_FORM_ID,
            prompt  = STRING_TOKEN(STR_PARALLEL_FORM),
            help    = STRING_TOKEN(STR_PARALLEL_FORM_HELP);
        endif;
        #endif

        //Goto CIR Form
        #if NCT6683D_CIR_PORT_PRESENT
        suppressif ideqval CIR_V_DATA.DevImplemented == 0x00;
            goto NCT6683D_CIR_FORM_ID,
            prompt  = STRING_TOKEN(STR_NCT6683D_CIR_FORM),
            help    = STRING_TOKEN(STR_NCT6683D_CIR_FORM_HELP);
        endif;
        #endif
    
      endform;//SIO Form

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP1 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if NCT6683D_SERIAL_PORT1_PRESENT
    form formid = AUTO_ID(NCT6683D_SERIAL1_FORM_ID),
        title = STRING_TOKEN(STR_SERIAL1_FORM);
        SUBTITLE(STRING_TOKEN(STR_SERIAL1_FORM))
    
        SEPARATOR
    
        COMA_CHECKBOX_DEVEN
    
        suppressif ideqval COMA_NV_DATA.DevEnable == 0x00;
        COMA_TEXT_CURRENT
        endif;    // suppressif SIO_SETUP_VAR.ComAEnable == 0x00;
    
        SEPARATOR
    
        suppressif ideqval COMA_NV_DATA.DevEnable == 0x00;
        COMA_ONEOF_PRSID
        endif;    // suppressif SIO_SETUP_VAR.ComAEnable == 0x00;

    endform;  //Serial 1 Form
    #endif //#if NCT6683D_SERIAL_PORT1_PRESENT

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP2 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if NCT6683D_SERIAL_PORT2_PRESENT
    form formid = AUTO_ID(NCT6683D_SERIAL2_FORM_ID),
        title = STRING_TOKEN(STR_SERIAL2_FORM);
        SUBTITLE(STRING_TOKEN(STR_SERIAL2_FORM))
    
        SEPARATOR
    
        COMB_CHECKBOX_DEVEN
    
        suppressif ideqval COMB_NV_DATA.DevEnable == 0x00;
        COMB_TEXT_CURRENT
        endif;    // suppressif SIO_SETUP_VAR.ComBEnable == 0x00;
    
        SEPARATOR
    
        suppressif ideqval COMB_NV_DATA.DevEnable == 0x00;
        COMB_ONEOF_PRSID
        endif;    // suppressif SIO_SETUP_VAR.ComAEnable == 0x00;

        suppressif ideqval COMB_NV_DATA.DevEnable == 0x0;
            oneof varid = COMB_NV_DATA.DevMode,
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_NCT6683D_COMB_MODE1), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_COMB_MODE2), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_COMB_MODE3), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_COMB_MODE4), value = 3, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMBEnable == 0x0;

    endform;  //Serial 2 Form
    #endif //#if NCT6683D_SERIAL_PORT2_PRESENT
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////Define Paralel formset form//////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if NCT6683D_PARALLEL_PORT_PRESENT
    form formid = AUTO_ID(NCT6683D_PARALLEL_FORM_ID),
        title = STRING_TOKEN(STR_PARALLEL_FORM);
        SUBTITLE(STRING_TOKEN(STR_PARALLEL_FORM))
    
        SEPARATOR
    
        LPT_CHECKBOX_DEVEN
    
        suppressif ideqval LPT_NV_DATA.DevEnable == 0x0;
        LPT_TEXT_CURRENT
        endif;    // suppressif SIO_SETUP_VAR.LptEnable == 0x0;
    
        SEPARATOR
    
        suppressif ideqval LPT_NV_DATA.DevEnable == 0x0
            OR ideqval LPT_NV_DATA.DevMode == 0x4
            OR ideqval LPT_NV_DATA.DevMode == 0x5
            OR ideqval LPT_NV_DATA.DevMode == 0x6;
            oneof varid     = LPT_NV_DATA.DevPrsId,\
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),\
                help        = STRING_TOKEN(STR_SETTINGS_HELP),\
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_IO378_IRQ5), value = 1, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_IO378_IRQX), value = 2, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_IO278_IRQX), value = 3, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_IO3BC_IRQX), value = 4, flags = RESET_REQUIRED;\
            endoneof;        
        endif;    // suppressif SIO_SETUP_VAR.LptEnable == 0x0;
    
        suppressif ideqval LPT_NV_DATA.DevEnable == 0x0 
            OR ideqval LPT_NV_DATA.DevMode == 0x1
            OR ideqval LPT_NV_DATA.DevMode == 0x2
            OR ideqval LPT_NV_DATA.DevMode == 0x3
            OR ideqval LPT_NV_DATA.DevMode == 0x0;
            oneof varid     = LPT_NV_DATA.DevPrsId,\
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),\
                help        = STRING_TOKEN(STR_SETTINGS_HELP),\
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLELE_IO378_778_IRQ5_DMA3), value = 1, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLELE_IO378_778_IRQX_DMAX), value = 2, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLELE_IO278_678_IRQX_DMAX), value = 3, flags = RESET_REQUIRED;\
                option text = STRING_TOKEN(STR_NCT6683D_PARALLELE_IO3BC_7BC_IRQX_DMAX), value = 4, flags = RESET_REQUIRED;\
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.LptEnable == 0x0;
    
        suppressif ideqval LPT_NV_DATA.DevEnable == 0x0;
            oneof varid = LPT_NV_DATA.DevMode,
                prompt        = STRING_TOKEN(STR_SELECT_MODE),
                help        = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE_HELP),
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE0), value = 0, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE1), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE2), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE3), value = 3, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE4), value = 4, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE5), value = 5, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_PARALLEL_MODE6), value = 6, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.LptEnable == 0x0;
    
    endform;  // Parralel Form
    #endif //#if NCT6683D_PARALLEL_PORT_PRESENT

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define CIR formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if NCT6683D_CIR_PORT_PRESENT
    form formid = AUTO_ID(NCT6683D_CIR_FORM_ID),
        title = STRING_TOKEN(STR_NCT6683D_CIR_FORM);
        SUBTITLE(STRING_TOKEN(STR_NCT6683D_CIR_FORM))
    
        SEPARATOR
    
        checkbox varid    = CIR_NV_DATA.DevEnable,
            prompt    = STRING_TOKEN(STR_NCT6683D_CIR_PROMPT),
            help    = STRING_TOKEN(STR_NCT6683D_CIR_PROMPT_HELP),
            flags    = CHECKBOX_DEFAULT | RESET_REQUIRED,
        endcheckbox;
    
        suppressif ideqval CIR_NV_DATA.DevEnable == 0x0;
            text
            help   = STRING_TOKEN(STR_NCT6683D_CIR_PROMPT_HELP),
            text   = STRING_TOKEN(STR_CURRENT_CONFIG),
            text   = STRING_TOKEN(STR_NCT6683D_CIR_CONFIG_VALUE),
            flags  = 0,
            key    = 0;
        endif;    // suppressif SIO_SETUP_VAR.CirEnable == 0x0;
    
        SEPARATOR
    
        suppressif ideqval CIR_NV_DATA.DevEnable == 0x0;
            oneof varid = CIR_NV_DATA.DevPrsId,
                prompt        = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_CIR_SETTINGS0), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_NCT6683D_CIR_SETTINGS1), value = 2, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.CirEnable == 0x0;
    
    endform;  // CIR Form
    #endif //#if NCT6683D_CIR_PORT_PRESENT

#endif //FORM_SET_FORM

#endif//ADVANCED_FORM_SET

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
