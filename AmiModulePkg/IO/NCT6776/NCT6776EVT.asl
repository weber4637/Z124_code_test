// THIS FILE IS INCLUDED to South Bridge device scope
//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************
//<AMI_FHDR_START>
//
// Name:  <NCT6776EVT.asl>
//
// Description: Define SIO Device for ACPI OS.
//
//<AMI_FHDR_END>
//*************************************************************************
//Scope(\_SB.PCI0.SBRG) {
//-----------------------------------------------------------------------
// SET OF COMMON DATA/CONTROL METHODS USED FOR ALL LDN BASED SIO DEVICES
//-----------------------------------------------------------------------
// SIO specific: SIOS - SIO Chipset specific code called from _PTS
// SIO specific: SIOW - SIO Chipset specific code called from _WAK
// SIO specific: SIOH - SIO event handler, to be called from correspondent _Lxx method
// SIO specific: PowerResources & _PR0 object to control Power management for FDC, LPT, UART1,2.


//-------------------------------------------------------------------------
// SIO_PME WAKE UP EVENTS //
//-------------------------------------------------------------------------
// Following code is the workaround for wake up on RI/Key/Mouse events
// are generated by some SuperIO. The wake up signal (SIO_PME) is
// connected to one of GPIOs of south bridge chip.
// Make sure the correspondent GPIO in south bridge is enabled to generate an SCI
//-------------------------------------------------------------------------
// Add Flag for Fix WakeUp Switch bug. 
Name(PMFG, 0x00)    //PME wake ststus

//-------------------------------------------------------------------------
// SIOS - SIO Chipset specific code called from _PTS
//-------------------------------------------------------------------------
// input  - Arg0 : Sleep state #
// output - nothing
//-------------------------------------------------------------------------
Method(SIOS, 1){
// Aware wake up events in SIO chip
    Store("SIOS", Debug)
//AMI_TODO: 
// 1. select sleep state
    If(LNotEqual(0x05, Arg0)){
        ^ENFG(0x0A)                     //Set Logical Device 0a (PME)
// 2. clear PME Status
        Store(0xFF, ^OPT3)              //Clear I/O PME# Status
        Store(0xFF, ^OPT4) 
        Store(^RGE3, Local0)            //Read-clear status
// 3. enable wake-up ; Enable Keyboard, PS/2 Mouse,    UART 1&2 to Generate PME.
        //Below is for S1 status
        If(LNotEqual(Arg0, 0x05))
        {
            //And(^OPT6, 0xC0, ^OPT6)
            //And(^RGE0, 0x9F, ^RGE0)   //Clear the KB/MS wakeup bit.
            //Store(Zero, ^RGE1)
            //Store(Zero, ^RGE2)
            Sleep(0xC8)
            if(\KBFG){
                Or(^OPT6, 0x10, ^OPT6)    //enable Keyboard Wake-up bit
                Or(^RGE0, 0x41, ^RGE0)    //Enable Keyboard Wake-up bit
            }        
            Else{
                And(^OPT6, 0xef, ^OPT6)   //disable Keyboard Wake-up bit
                And(^RGE0, 0xBE, ^RGE0)   //disable Keyboard Wake-up bit
            }
            if(\MSFG){
                Or(^OPT6, 0x20, ^OPT6)    //enable Mouse Wake-up bit
                Or(^RGE0, 0x22, ^RGE0)    //Enable Mouse Wake-up bit
            }        
            Else{
                And(^OPT6, 0xdf, ^OPT6)   //disable Mouse Wake-up bit
                And(^RGE0, 0xDD, ^RGE0)   //disable Mouse Wake-up bit
            }
            //Or(^OPT2, 0x01, ^OPT2)        //Enable PME# ,set bit0     
        }
// 4. Enable PME bit
        Or(0x01, ^OPT2, ^OPT2)           //Enable PME# ,set bit0     
        ^EXFG()
    }
}
//-----------------------------------------------------------------------
// SIOW - SIO Chipset specific code called from _WAK
//-----------------------------------------------------------------------
// input  - Sleep State #
// output - nothing
//-----------------------------------------------------------------------
Method(SIOW, 1){
    Store("SIOW", Debug)
//AMI_TODO: 
    ^ENFG(0x0A)                    //Set Logical Device 0a (PME)
// 1. Clear Status
// Clear logical devices status, then clear global PME# status
    And(^OPT0, 0xE7, ^OPT0)   //Clear KBC Wake Event

    Store(^OPT3, PMFG)             // PMFG=PME  Wake Status
    Store(0xFF, ^OPT3)             //Clear I/O PME# Status

    And(^RGE0, 0x9F, ^RGE0)
    And(^OPT6, 0xCF, ^OPT6)

// 2. Disable PME
    And(0xFE, ^OPT2, ^OPT2)   //Diable PME#, clear bit 0     

    ^EXFG()
}

//-----------------------------------------------------------------------
// SIOH - SIO event handler, to be called from correspondent _Lxx method
// in order to serve the SIO chipset side of wake up event
//-----------------------------------------------------------------------
// input  - nothing
// output - nothing
//-----------------------------------------------------------------------
Method(SIOH, 0){
    If(And(PMFG, 0x08)){
        #if NCT6776_KEYBOARD_PRESENT
        Notify(PS2K, 0x2)    //KBD Wake up
        #endif
    }
    If(And(PMFG, 0x10)){
        #if NCT6776_MOUSE_PRESENT
        Notify(PS2M, 0x2)    //MOUSE Wake up
        #endif
    }
}    //End Of SIOH

//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************

