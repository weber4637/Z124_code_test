//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2015, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************

/** @file
 *   Defines a formset, containing all the traditional forms from Aptio 4.x
 */

#include <Setup.h>
#include <SetupStrDefs.h>
#define MAIN_FORM_SET
#define ADVANCED_FORM_SET
#define CHIPSET_FORM_SET
#define SECURITY_FORM_SET
#define BOOT_FORM_SET
#define EXIT_FORM_SET
#define FORM_SET_TYPEDEF
#include <SetupDefinitions.h>
#undef FORM_SET_TYPEDEF
#undef EXIT_FORM_SET
#undef BOOT_FORM_SET
#undef SECURITY_FORM_SET
#undef CHIPSET_FORM_SET
#undef ADVANCED_FORM_SET
#undef MAIN_FORM_SET

formset guid  = SETUP_FORM_SET_GUID,
    title     = STRING_TOKEN(STR_SETUP),
    help      = STRING_TOKEN(STR_SETUP_HELP),
    class     = SETUP_FORM_SET_CLASS,
    subclass  = 0,

    SETUP_DATA_VARSTORE
    LANGUAGE_VARSTORE
    LANGUAGE_CODES_VARSTORE
    SYSTEM_ACCESS_VARSTORE
    AMI_CALLBACK_VARSTORE
    AMITSESETUP_VARSTORE
    BOOT_MANAGER_VARSTORE
    TIMEOUT_VARSTORE
    BOOT_ORDER_VARSTORE
    NEW_BOOT_OPTION_VARSTORE
    DEL_BOOT_OPTION_VARSTORE
    LEGACY_DEV_INFO_VARSTORE
    LEGACY_GROUP_INFO_VARSTORE
    LEGACY_DEV_ORDER_VARSTORE
    BOOT_NOW_COUNT_VARSTORE
    EFI_SHELL_VARSTORE
    defaultstore AmiMfgDefault, prompt = STRING_TOKEN(STR_EMPTY), attribute = 0x01;
    
	#define MAIN_FORM_SET
	#define ADVANCED_FORM_SET
	#define CHIPSET_FORM_SET
	#define SECURITY_FORM_SET
	#define BOOT_FORM_SET
	#define EXIT_FORM_SET
    #define FORM_SET_VARSTORE
    #include <SetupDefinitions.h>
    #undef FORM_SET_VARSTORE
	#undef EXIT_FORM_SET
	#undef BOOT_FORM_SET
	#undef SECURITY_FORM_SET
	#undef CHIPSET_FORM_SET
	#undef ADVANCED_FORM_SET
	#undef MAIN_FORM_SET

#define TOP_LEVEL_FORM_SET
    form formid = AUTO_ID(SETUP_MAIN),
        title = STRING_TOKEN(STR_SETUP);
        
        goto MAIN_MAIN, 
            prompt = STRING_TOKEN(STR_MAIN),
            help = STRING_TOKEN(STR_EMPTY);

    // suppressif statements are added to hide the goto statements
    // in the case that the AMITSE_HIDE_ROOT_PAGE token is disabled
    #if defined(SHOW_ADVANCED_FORMSET)&&(SHOW_ADVANCED_FORMSET==0)
        suppressif TRUE;
    #endif
        goto ADVANCED_MAIN, 
            prompt = STRING_TOKEN(STR_ADVANCED),
            help = STRING_TOKEN(STR_EMPTY);
    #if defined(SHOW_ADVANCED_FORMSET)&&(SHOW_ADVANCED_FORMSET==0)
        endif;
    #endif

    // suppressif statements are added to hide the goto statements
    // in the case that the AMITSE_HIDE_ROOT_PAGE token is disabled
    #if defined(SHOW_CHIPSET_FORMSET)&&(SHOW_CHIPSET_FORMSET==0)
        suppressif TRUE;
    #endif
        goto CHIPSET_MAIN, 
            prompt = STRING_TOKEN(STR_CHIPSET),
            help = STRING_TOKEN(STR_EMPTY);
    #if defined(SHOW_CHIPSET_FORMSET)&&(SHOW_CHIPSET_FORMSET==0)
        endif;
    #endif

    // suppressif statements are added to hide the goto statements
    // in the case that the AMITSE_HIDE_ROOT_PAGE token is disabled
    #if defined(SHOW_SECURITY_FORMSET)&&(SHOW_SECURITY_FORMSET==0)
        suppressif TRUE;
    #endif
        goto SECURITY_MAIN, 
            prompt = STRING_TOKEN(STR_SECURITY),
            help = STRING_TOKEN(STR_EMPTY);
    #if defined(SHOW_SECURITY_FORMSET)&&(SHOW_SECURITY_FORMSET==0)
        endif;
    #endif


    #if defined(SHOW_BOOT_FORMSET)&&(SHOW_BOOT_FORMSET==0)
        suppressif TRUE;
    #endif
        goto BOOT_MAIN, 
            prompt = STRING_TOKEN(STR_BOOT),
            help = STRING_TOKEN(STR_EMPTY);

    #if defined(SHOW_BOOT_FORMSET)&&(SHOW_BOOT_FORMSET==0)
        endif;
    #endif

        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO

        goto EXIT_MAIN, 
            prompt = STRING_TOKEN(STR_EXIT),
            help = STRING_TOKEN(STR_EMPTY);

    endform;
    
    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM

#undef TOP_LEVEL_FORM_SET

    
#define MAIN_FORM_SET
    form formid = AUTO_ID(MAIN_MAIN),
        title = STRING_TOKEN(STR_MAIN);

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM
        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO

        SEPARATOR
        date 
            name    = Date,
            prompt  = STRING_TOKEN(STR_DATE),
            help    = STRING_TOKEN(STR_DATE_HELP),
            flags   = STORAGE_TIME,
            default = 2014/1/1,
        enddate;

        time 
            name    = Time, 
            prompt  = STRING_TOKEN(STR_TIME), 
            help    = STRING_TOKEN(STR_TIME_HELP), 
            flags   = STORAGE_TIME,
            default = 0:0:0, 
        endtime;

    endform;
    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM

#undef MAIN_FORM_SET

#define ADVANCED_FORM_SET
    form formid = AUTO_ID(ADVANCED_MAIN),
        title = STRING_TOKEN(STR_ADVANCED);

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM
        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO

//G160-002(11) - start
        #define FORM_SET_ITEM            
                SEPARATOR
        
//Z123-001(5)                oneof varid = SETUP_DATA.NEXCOM_MINI_PCIE1,
//Z123-001(5)                  prompt      = STRING_TOKEN(STR_NEXCOM_MINI_PCIE1),
//Z123-001(5)                  help        = STRING_TOKEN(STR_NEXCOM_MINI_PCIE1_HELP),
//Z123-001(5)                  option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
//Z123-001(5)                  option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
//Z123-001(5)                endoneof;
                
                suppressif HIDE_UNUSED_ITEMS;   //Z124-001(2)
                oneof varid = SETUP_DATA.NEXCOM_MINI_PCIE2,
                  prompt      = STRING_TOKEN(STR_NEXCOM_MINI_PCIE2),
                  help        = STRING_TOKEN(STR_NEXCOM_MINI_PCIE2_HELP),
                  option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                endoneof;
                endif;                          //Z124-001(2)
                
//Z123-001(5) - start
                oneof varid = SETUP_DATA.NEXCOM_MINI_PCIE1,
                  prompt      = STRING_TOKEN(STR_NEXCOM_MINI_PCIE1),
                  help        = STRING_TOKEN(STR_NEXCOM_MINI_PCIE1_HELP),
                  option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                endoneof;
//Z123-001(5) - end

//Z123-001(4)   Set "GNSS radio" item default value is "Disable".                
                suppressif HIDE_UNUSED_ITEMS;   //G160-004(17)
                oneof varid = SETUP_DATA.NEXCOM_4G_LTE,
                  prompt      = STRING_TOKEN(STR_NEXCOM_4G_LTE),
                  help        = STRING_TOKEN(STR_NEXCOM_4G_LTE_HELP),
                  option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_ENABLED),  value = 1, flags = RESET_REQUIRED;
                endoneof;
                endif;                          //G16-004(17)
        #undef FORM_SET_ITEM
//G160-002(11) - end

    endform;

    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM
#undef ADVANCED_FORM_SET

#define CHIPSET_FORM_SET
    form formid = AUTO_ID(CHIPSET_MAIN),
        title = STRING_TOKEN(STR_CHIPSET);

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM
        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO
    endform;
    
    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM
#undef CHIPSET_FORM_SET

#define SECURITY_FORM_SET
    form formid = AUTO_ID(SECURITY_MAIN),
        title = STRING_TOKEN(STR_SECURITY);

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM
        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO
    endform;
    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM
#undef SECURITY_FORM_SET

#define BOOT_FORM_SET
    form formid = AUTO_ID(BOOT_MAIN),
        title = STRING_TOKEN(STR_BOOT);

        SUBTITLE(STRING_TOKEN(STR_BOOT_CFG))

        numeric varid = TIMEOUT.Value,
            prompt = STRING_TOKEN(STR_BOOT_TIMEOUT),
            help = STRING_TOKEN(STR_BOOT_TIMEOUT_HELP),
            flags = 0,
#if defined(SUPPORT_ZERO_BOOT_TIMEOUT)&&(SUPPORT_ZERO_BOOT_TIMEOUT==1)
            minimum = 0x0,
#else
            minimum = 0x1,
#endif
            maximum = 0xffff,
            step = 1,
            default = DEFAULT_BOOT_TIMEOUT,
            default = DEFAULT_BOOT_TIMEOUT, defaultstore = AmiMfgDefault,
        endnumeric;

        oneof varid = SETUP_DATA.Numlock,
            prompt = STRING_TOKEN(STR_CSM_BOOTUP_NUMLOCK),
            help = STRING_TOKEN(STR_CSM_BOOTUP_NUMLOCK_HELP),
            flags = RESET_REQUIRED,
            option text = STRING_TOKEN(STR_CSM_BOOTUP_NUMLOCK_ON), value = 1, flags = 0;
            option text = STRING_TOKEN(STR_CSM_BOOTUP_NUMLOCK_OFF), value = 0, flags = 0;
            default = DEFAULT_NUMLOCK_STATE,
            default = DEFAULT_NUMLOCK_STATE, defaultstore = AmiMfgDefault,
        endoneof;

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM

        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO
    endform;

    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM
#undef BOOT_FORM_SET

#define EXIT_FORM_SET
    form formid = AUTO_ID(EXIT_MAIN),
        title = STRING_TOKEN(STR_EXIT);

        #define FORM_SET_ITEM
        #include <SetupDefinitions.h>
        #undef FORM_SET_ITEM
        #define FORM_SET_GOTO
        #include <SetupDefinitions.h>
        #undef FORM_SET_GOTO
    endform;

    #define FORM_SET_FORM
    #include <SetupDefinitions.h>
    #undef FORM_SET_FORM
#undef EXIT_FORM_SET

endformset;
//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2015, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
