/*++
  This file contains an 'Intel Peripheral Driver' and is        
  licensed for Intel CPUs and chipsets under the terms of your  
  license agreement with Intel or your vendor.  This file may   
  be modified by the user, subject to additional terms of the   
  license agreement                                             
--*/
/*++

  Copyright (c)  2001 - 2016 Intel Corporation.  All rights reserved.

  This software and associated documentation (if any) is furnished under 
  a license and may only be used or copied in accordance with the terms 
  of the license.  Except as permitted by such license, no part of this 
  software or documentation may be reproduced, stored in a retrieval system, 
  or transmitted in any form or by any means without the express written 
  consent of Intel Corporation.

  Module Name:

    PciCrs.asi 

  Abstract:

    PCI resource template

--*/

Name(PBRS, ResourceTemplate() {
   WORDBusNumber(            //Bus number resource (0); the bridge produces bus numbers for its subsequent buses
      ResourceProducer,      // bit 0 of general flags is 1
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      PosDecode,             // PosDecode
      0x0000,                // Granularity
      0x0000,                // Min
      0x00ff,                // Max
      0x0000,                // Translation
      0x0100                 // Range Length = Max-Min+1
   )   
   
   WORDIO(                   //Consumed-and-produced resource (all I/O below CF8)
      ResourceProducer,      // bit 0 of general flags is 0
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      PosDecode,             
      EntireRange,
      0x0000,                // Granularity
      0x0000,                // Min
      0x0cf7,                // Max
      0x0000,                // Translation
      0x0cf8                 // Range Length
   )
   
   IO(                       //Consumed resource (CF8-CFF)
      Decode16, 
      0x0cf8, 
      0xcf8, 
      1,
      8
   )
   
   WORDIO(                   //Consumed-and-produced resource (all I/O above CFF)
      ResourceProducer,      // bit 0 of general flags is 0
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      PosDecode,             
      EntireRange,
      0x0000,                // Granularity
      0x0d00,                // Min
      0xffff,                // Max
      0x0000,                // Translation
      0xf300                 // Range Length
   )
   
   DWORDMEMORY(              // descriptor for VGA area(0xa0000 - 0xbffff)
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is Fixed
      Cacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0x00000000,            // Min
      0x00000000,            // Max
      0x00000000,            // Translation
      0x00000000,            // Range Length
      ,
      ,
      LVGA  
   )
    
   DWORDMEMORY(              // descriptor for Shadow RAM
      ResourceProducer,       // bit 0 of general flags is 0
      PosDecode,
      MinFixed,               // Range is fixed
      MaxFixed,               // Range is Fixed
      Cacheable,
      ReadWrite,
      0x00000000,             // Granularity
      0x00000000,             // Min (calculated dynamically)
      0x00000000,             // Max (calculated dynamically)
      0x00000000,             // Translation
      0x00000000,             // Range Length (calculated dynamically)
      ,
      ,
      OPMR 
    )
      
   DWORDMemory(              // Consumed-and-produced resource for pci memory mapped memory
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,             // positive Decode
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0xA0000000,            // Min (calculated dynamically)
 
      0xDFFFFFFF,            // Max = IO Apic base address - 1
      0x00000000,            // Translation
      0x40000000,            // Range Length (calculated dynamically)
      ,                      // Optional field left blank
      ,                      // Optional field left blank
      MEM1                   // Name declaration for this descriptor
   )
   
   QWORDMemory(              // Consumed-and-produced resource(all of memory space)
      ResourceProducer,       // bit 0 of general flags is 0
      PosDecode,              // positive Decode
      MinFixed,               // Range is fixed
      MaxFixed,               // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,             // Granularity 
      0x00000000000,          // Min (calculated dynamically)
      0x00000000000,          // Max (calculated dynamically)
      0x00000000,             // Translation
      0x00000000000,          // Range Length (calculated dynamically)
      ,
      ,
      MEM2                    // Name declaration for this descriptor
   )

// Denverton AptioV Override Start - EIP#275808   
// WA for AfuLinux issue.
// Report the MMIO BAR of SPI and NPK device as PCI range

   DWORDMemory(              // Consumed-and-produced resource for pci memory mapped memory
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,             // positive Decode
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0xFE010000,            // Min
      0xFE010FFF,            // Max
      0x00000000,            // Translation
      0x00001000,            // 4K
      ,                      // Optional field left blank
      ,                      // Optional field left blank
      SPIB           	     // Name declaration for this descriptor
   )

   //NPK CSR/Memory trace buffer
    DWORDMemory(              // Consumed-and-produced resource for pci memory mapped memory
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,             // positive Decode
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0xFA000000,            // Min
 
      0xFA0FFFFF,            // Max
      0x00000000,            // Translation
      0x00100000,            // 1M
      ,                      // Optional field left blank
      ,                      // Optional field left blank
      NPK1           // Name declaration for this descriptor
   )
   //NPK SW buffer
   DWORDMemory(              // Consumed-and-produced resource for pci memory mapped memory
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,             // positive Decode
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0xFB000000,            // Min
 
      0xFB7FFFFF,            // Max
      0x00000000,            // Translation
      0x00800000,            // 8M
      ,                      // Optional field left blank
      ,                      // Optional field left blank
      NPK2                  // Name declaration for this descriptor
   )
   //NPK RTIT buffer
    DWORDMemory(              // Consumed-and-produced resource for pci memory mapped memory
      ResourceProducer,      // bit 0 of general flags is 0
      PosDecode,             // positive Decode
      MinFixed,              // Range is fixed
      MaxFixed,              // Range is fixed
      NonCacheable,
      ReadWrite,
      0x00000000,            // Granularity
      0xFA100000,            // Min
 
      0xFA1007FF,            // Max
      0x00000000,            // Translation
      0x00000800,            // 256K
      ,                      // Optional field left blank
      ,                      // Optional field left blank
      NPK3                   // Name declaration for this descriptor
   )
// Denverton AptioV Override End - EIP#275808

})          // end of CRES Buffer


Method(_CRS, 0x0, Serialized)
{
  If(And(LGCY,0x01)) // Legacy
  {
    // Fix up 32-bit OPMR
    CreateDWordField(PBRS, ^OPMR._MIN, OPMN)
    Store(0x000c0000, OPMN)
    CreateDWordField(PBRS, ^OPMR._MAX, OPMX)
    Store(0x000dffff, OPMX)
    CreateDWordField(PBRS, ^OPMR._LEN, OPLN)
    Store(0x20000, OPLN)
  }

  If(And(LGCY,0x80)) // Legacy Video Legacy.
  {
    // Fix up 32-bit LVGA
    CreateDWordField(PBRS, ^LVGA._MIN, LVMN)
    Store(0x000a0000, LVMN)
    CreateDWordField(PBRS, ^LVGA._MAX, LVMX)
    Store(0x000bffff, LVMX)
    CreateDWordField(PBRS, ^LVGA._LEN, LVLN)
    Store(0x20000, LVLN)
  }
 
  // Fix up 32-bit Memory resources
  CreateDWordField(PBRS, ^MEM1._MIN, PMMN)
  Store(MMOB, PMMN)
  CreateDWordField(PBRS, ^MEM1._MAX, PMMX)
  Store(MMOL, PMMX)
  CreateDWordField(PBRS, ^MEM1._LEN, PMLN)
  Add(Subtract(PMMX,PMMN),1,PMLN)
 
  // Fix up 64-bit Memory resources
  If(LGreater(OSYS, WINDOWS_2003)) {
  	If(LNot(LEqual(MMHB,Zero)))
  	{
    	CreateQWordField(PBRS, ^MEM2._MIN, P2MN)
    	Store(MMHB, P2MN)
    	CreateQWordField(PBRS, ^MEM2._MAX, P2MX)
    	Store(MMHL, P2MX)
    	CreateQWordField(PBRS, ^MEM2._LEN, P2LN)
    	Add(Subtract(P2MX,P2MN),1,P2LN)
    }
  }

  Return(PBRS)
}

