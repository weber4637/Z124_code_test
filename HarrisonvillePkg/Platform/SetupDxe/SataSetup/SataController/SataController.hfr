//
// This file contains an 'Intel Peripheral Driver' and is
// licensed for Intel CPUs and chipsets under the terms of your
// license agreement with Intel or your vendor.  This file may
// be modified by the user, subject to additional terms of the
// license agreement
//
// *++
//
// Copyright (c) 1999 - 2015 Intel Corporation. All rights reserved
// This software and associated documentation (if any) is furnished
// under a license and may only be used or copied in accordance
// with the terms of the license. Except as permitted by such
// license, no part of this software or documentation may be
// reproduced, stored in a retrieval system, or transmitted in any
// form or by any means without the express written consent of
// Intel Corporation.
//

form formid = SATA_FORM_ID_VARIABLE(CONTROLLER_INDEX),
    title = STRING_TOKEN(SATA_TITLE_VARIABLE(CONTROLLER_INDEX));

    oneof varid = PCH_SETUP.PchSata[CONTROLLER_INDEX],
        prompt   = STRING_TOKEN(STR_SATA_CONTROLLER_EN),
        help     = STRING_TOKEN(STR_SATA_EN_HELP),
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT|RESET_REQUIRED|MANUFACTURING;
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED;
    endoneof;

    //
    // Per Controller setup options
    //
    suppressif ideqval PCH_SETUP.PchSata[CONTROLLER_INDEX] == 0;
      suppressif HIDE_UNUSED_ITEMS;               //G160-002(16)
      oneof varid       = PCH_SETUP.SataTestMode[CONTROLLER_INDEX],
          prompt   = STRING_TOKEN(STR_SATA_TEST_MODE_PROMPT),
          help     = STRING_TOKEN(STR_SATA_TEST_MODE_HELP),
          option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
          option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      endoneof;
      endif;                                      //G160-002(16)
      suppressif ideqvallist  PCH_SETUP.SataTestMode[CONTROLLER_INDEX] ==  SATA_TEST_MODE_ENABLE;
        suppressif HIDE_UNUSED_ITEMS;               //G160-002(16)
        oneof varid = PCH_SETUP.SataLpm[CONTROLLER_INDEX],
            prompt   = STRING_TOKEN(STR_SATA_LPM_EN),
            help     = STRING_TOKEN(STR_SATA_LPM_EN_HELP),
            option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED|MANUFACTURING;
            option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT|RESET_REQUIRED;
        endoneof;
        endif;                                      //G160-002(16)

        suppressif HIDE_UNUSED_ITEMS;               //G160-002(16)
        suppressif ideqval PCH_SETUP.SataLpm[CONTROLLER_INDEX] == 0x0;
            oneof varid = PCH_SETUP.SataSalp[CONTROLLER_INDEX],
                prompt   = STRING_TOKEN(STR_SATA_SALP_EN),
                help     = STRING_TOKEN(STR_SATA_SALP_EN_HELP),
                option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT|RESET_REQUIRED|MANUFACTURING;
            endoneof;
        endif;
        endif;                                      //G160-002(16)
      endif;

      oneof varid = PCH_SETUP.SataSpeedLimit[CONTROLLER_INDEX],
        prompt   = STRING_TOKEN(STR_SATA_CONTROLLER_SPEED_PROMPT),
        help     = STRING_TOKEN(STR_SATA_CONTROLLER_SPEED_HELP),
        option text = STRING_TOKEN(STR_SATA_CONTROLLER_GEN1_PROMPT), value = 1, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SATA_CONTROLLER_GEN2_PROMPT), value = 2, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_SATA_CONTROLLER_GEN3_PROMPT), value = 3, flags = DEFAULT|RESET_REQUIRED|MANUFACTURING;
      endoneof;

      suppressif HIDE_UNUSED_ITEMS;               //G160-002(16)
      oneof varid = PCH_SETUP.PortMultiplierSupported[CONTROLLER_INDEX],
        prompt   = STRING_TOKEN(STR_SATA_PORT_MULTIPLIER_EN),
        help     = STRING_TOKEN(STR_SATA_PORT_MULTIPLIER_EN_HELP),
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT|RESET_REQUIRED|MANUFACTURING;
        option text = STRING_TOKEN(STR_DISABLE), value = 0, flags = RESET_REQUIRED;
      endoneof;
      endif;                                      //G160-002(16)

      //
      //Per port Setup option
      //
//Z121-001(2)      suppressif HIDE_UNUSED_ITEMS;               //G160-002(16)
      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,0),
          prompt  = STRING_TOKEN(STR_SATA_PORT0_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);
//Z121-001(2)      endif;                                      //G160-004(4)

      suppressif HIDE_UNUSED_ITEMS;               //Z121-001(2)
      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,1),
          prompt  = STRING_TOKEN(STR_SATA_PORT1_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);
      endif;                                      //Z121-001(2)

      suppressif HIDE_UNUSED_ITEMS;               //G160-004(4)
      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,2),
          prompt  = STRING_TOKEN(STR_SATA_PORT2_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);
      endif;                                      //G160-004(4)

      suppressif HIDE_UNUSED_ITEMS;               //Z121-001(2)
      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,3),
          prompt  = STRING_TOKEN(STR_SATA_PORT3_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);
      endif;                                      //Z121-001(2)

      suppressif HIDE_UNUSED_ITEMS;               //G160-004(4)
      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,4),
          prompt  = STRING_TOKEN(STR_SATA_PORT4_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);

      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,5),
          prompt  = STRING_TOKEN(STR_SATA_PORT5_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);

      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,6),
          prompt  = STRING_TOKEN(STR_SATA_PORT6_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);

      goto SATA_PORT_FORM_ID_VARIABLE(CONTROLLER_INDEX,7),
          prompt  = STRING_TOKEN(STR_SATA_PORT7_CONFIGURATION),
          help    = STRING_TOKEN(STR_SATA_PORTX_HELP);
      endif;                                      //G160-002(16)
    endif;
endform;

