//
// This file contains an 'Intel Peripheral Driver' and is      
// licensed for Intel CPUs and chipsets under the terms of your
// license agreement with Intel or your vendor.  This file may 
// be modified by the user, subject to additional terms of the 
// license agreement                                           
//
// *++
//
// Copyright (c) 1999 - 2015 Intel Corporation. All rights reserved
// This software and associated documentation (if any) is furnished
// under a license and may only be used or copied in accordance
// with the terms of the license. Except as permitted by such
// license, no part of this software or documentation may be
// reproduced, stored in a retrieval system, or transmitted in any
// form or by any means without the express written consent of
// Intel Corporation.
// 
// 
// Module Name:
//
//   WakeFromSx.hfr 
// 
// Abstract:
// 
//  WakeFromSx formset.
// 
// Revision History: 
// 
// --*/

form formid = VFR_WOL_FORM_ID,
 
title = STRING_TOKEN(STR_WOL_CONFIGURATION);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
    subtitle text = STRING_TOKEN(STR_WOL_CONFIGURATION);
    subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
    subtitle text = STRING_TOKEN(STR_NULL_STRING);

    
//G160-002(16)    oneof varid     = SYSTEM_CONFIGURATION.WakeOnLanSupport,
//G160-002(16)       prompt      = STRING_TOKEN(STR_WOL_CONFIGURATION),
//G160-002(16)       help        = STRING_TOKEN(STR_WOL_CONFIGURATION_HELP),
//G160-002(16)       option text = STRING_TOKEN(STR_DISABLE),	value = 0, flags = RESET_REQUIRED;
//G160-002(16)       option text = STRING_TOKEN(STR_ENABLE),		value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
//G160-002(16)     endoneof;

//G160-002(16) - start
    oneof varid     = SYSTEM_CONFIGURATION.WakeOnLanSupport,
       prompt      = STRING_TOKEN(STR_WOL_CONFIGURATION),
       help        = STRING_TOKEN(STR_WOL_CONFIGURATION_HELP),
       option text = STRING_TOKEN(STR_DISABLE),	value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
       option text = STRING_TOKEN(STR_ENABLE),		value = 1, flags = RESET_REQUIRED;
     endoneof;
//G160-002(16) - end

endform;