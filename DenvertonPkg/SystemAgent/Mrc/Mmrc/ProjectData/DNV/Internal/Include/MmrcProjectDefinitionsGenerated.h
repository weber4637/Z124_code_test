/** @file
  File name:    MmrcProjectDefinitionsGenerated.h
  Input File:   DNV_MRC.xlsx

  THIS FILE IS AUTO-GENERATED BY THE MSP TOOL. DO NOT CHANGE THIS CODE.

  If edits are needed in this file, they must be done via the MSP tool.

  If there is additional project-specific data required by the MSP, it
  can be placed in MmrcProjectDefinitions.h, which is used for non-tool-generated
  data

  Includes all hard defines specific to a project. Things like
  the maximum number of channels, ranks, DIMMs, etc, should be included here. 

  Copyright (c) 2005-2018 Intel Corporation. All rights reserved
  This software and associated documentation (if any) is furnished
  under a license and may only be used or copied in accordance
  with the terms of the license. Except as permitted by such
  license, no part of this software or documentation may be
  reproduced, stored in a retrieval system, or transmitted in any
  form or by any means without the express written consent of
  Intel Corporation.
**/
#ifndef _MMRCPROJECTDEFINITIONSGENERATED_H_
#define _MMRCPROJECTDEFINITIONSGENERATED_H_

//
// All boxtypes supported by the MSP. Boxtypes are distinct components of silicon.
//
#define DUNIT_COMMON                                       0x00
#define DUNIT                                              0x01
#define DDRDQ                                              0x02
#define DDRDQ_PHY                                          0x03
#define DDRCC2_PHY                                         0x04
#define DDRCC1_PHY                                         0x05
#define DDRPLL                                             0x06
#define DDRCC0                                             0x07
#define DDRCC1                                             0x08
#define DDRCC2                                             0x09
#define DDRSAI                                             0x0A
#define BUNIT                                              0x0B
#define RTF                                                0x0C
#define CPGC                                               0x0D
#define BUNIT_MCHBAR                                       0x0E
#define AUNIT_MCHBAR                                       0x0F
#define BUNITMEM                                           0x10
#define PUNITSA                                            0x11
#define PMC_PCI_MMR                                        0x12
#define PMC_PCI_CFG                                        0x13
#define CLTT_CCR                                           0x14
#define SUNIT                                              0x15
#define AUNIT_MSG_MAP_1                                    0x16
#define BUNIT_MSG_MAP_0                                    0x17
//
// Maximum Box Types across blueprints
//
#define MAX_BOXES                                          0x18
//
// Maximum IO Levels across blueprints
//
#define MAX_IO_LEVELS                                      0x01
//
// Maximum Box Types for BLUEPRINT_DNV
//
#define BOXES_BLUEPRINT_DNV                                0x18
//
// Maximum length of the boxtype strings
//
#define MAX_BOXNAME_LENGTH                                 16
//
// Register access methods (sideband, PCI, etc)
//
#define eSB                                                0
#define ePCI                                               1
#define eBAR                                               2
#define eACCESS_METHOD_ERROR                               3
//
// Maximum number of GetSets Sheets
//
#define MAX_GETSETS                                        1
//
// Maximum number of blueprints
//
#define MAX_BLUEPRINTS                                     1
//
// Number assignments for each blueprint
//
#define BLUEPRINT_DNV                                      0
//
// Maximum number of Instances
//
#define MAX_INSTANCE_PORTS                                 58
//
// Maximum Instance Ports for BLUEPRINT_DNV
//
#define INSTANCE_PORTS_BLUEPRINT_DNV                       58
//
// Maximum string length of all register names and fieldnames.
//
#define MAX_REGISTER_NAME_LENGTH                           0x0036
//
// This project contains 64 bit variables.
//
#define USE_64_BIT_VARIABLES                               1
//
// Channels
//
#define MAX_CHANNELS                                       2
//
// DIMMS Per Channel
//
#define MAX_DIMMS                                          2
//
// Ranks Per Channel
//
#define MAX_RANKS                                          4
//
// Byte Lanes Per Module
//
#define MAX_BYTELANES_PER_DQ_MODULE                        1
//
// Width of the entire bus in bits (i.e. 64 for non-ECC and 72 for ECC)
//
#define MAX_BUS_WIDTH                                      72
//
// Max Strobes Per Channel
//
#define MAX_STROBES                                        18
//
// Number of Memory Controllers per CPU socket
//
#define MAX_DUNITS                                         2
//
// Max number of ranks for a single DIMM
//
#define MAX_RANKS_PER_DIMM                                 2
//
// Number of commands sent to the DRAMs during DDR3 JEDEC init. DDR4 uses 7 plus 2 more as register control words for RDIMM  DDR4 plus 1 for Vref disable plus another 7 for DDR4 Rdimm side-B with Address Inversion plus 1 for Vref disable on Side B. Plus 12 more RCWs for Rdimm + 3 about the WA for INPHI RC + 2 RCNx Registers
//
#define MR_COUNT                                           35
//
// Is DDR3 supported on this project?
//
#define DDR3_SUPPORT                                       1
//
// Is DDR4 supported on this project?
//
#define DDR4_SUPPORT                                       1
//
// Is DDRT supported on this project?
//
#define DDRT_SUPPORT                                       1
//
// Is LPDDR3 supported on this project?
//
#define LPDDR3_SUPPORT                                     0
//
// Which version of CPGC is used on this project? AVN = 99, ANN/CHV = 100, BXT = 200
//
#define CPGC_VERSION                                       100
//
// Max Number of values for the Axis Y
//
#define MAX_ELEMENTS_DIM_Y                                 96
//
// Max Number of values for the Axis X
//
#define MAX_ELEMENTS_DIM_X                                 128
//
// If disabled, the MRC codebase being used will supply its own GetSet functions and data structures.
//
#define USE_GET_SET_FROM_SPREADSHEET                       1
//
// Used for DMAP lookup table to cover all the dimm configurations for DDR3 and DDR4
//
#define MAX_DIMM_CONFIGS                                   994
//
// Number of DQ per strobe DNV supports(x8 and x4)
//
#define MAX_BITS                                           8
//
// Rapl Dimm Configs
//
#define MAX_RAPL_DIMM_CONFIGS                              176
//
// [31:24] = Major revision 
// [23:16] = Minor revision 
// [15:8]  = Release Candidate 
// [7:0]   = Internal revision 
//
#define MRC_VERSION                                        0x00950442
//
// # of IMR Regions
//
#define MAX_IMR                                            8
//
// Print MRC functions as they execute
//
#define CAPSULESTRINGS                                     1
//
// Use CPGC for training
//
#define CPGC_API                                           1
//
// Lowest address bit for rank selection during training
//
#define RANK_SHIFT_BIT                                     28
//
// Lowest address bit for bank selection during training for DDR4
//
#define BANK_SHIFT_BIT_DDR4                                6
//
// Lowest address bit for bank selection during training for DDR3
//
#define BANK_SHIFT_BIT_DDR3                                13
//
// Debug message output to serial or console
//
#define DEBUG_MSG                                          1
//
// Enable training algorithms
//
#define TRAINING_ALGOS                                     1
//
// Receive enable training
//
#define RECEIVE_ENABLE                                     1
//
// Receive enable CPGC num_burst
//
#define RECEIVE_ENABLE_NUMBURST                            1
//
// Fine write leveling training
//
#define FINE_WRITE_LEVELING                                1
//
// MPR based read training
//
#define EARLY_READ_TRAINING                                1
//
// Coarse write leveling training
//
#define COARSE_WRITE_LEVELING                              1
//
// New read/write training algos enable
//
#define NEW_RTWT_ALGO                                      1
//
// Victim/aggressor read training
//
#define READ_TRAINING                                      1
//
// 
//
#define RT_BIT_SHARING                                     KNOB_SHARED
//
// 
//
#define RT_STROBE_SHARING                                  BIT_SHARED
//
// 
//
#define RT_PERBIT_ENABLED                                  1
//
// 
//
#define RT_NUM_EYEMASKS                                    2
//
// 
//
#define RT_EYEMASK0_PI                                     12
//
// 
//
#define MAX_POWER_KNOBS                                    1
//
// 
//
#define RT_EYEMASK_VREF                                    3
//
// 
//
#define RT_EYEMASK1_PI                                     6
//
// 
//
#define RT_STEP1_VREFMIN                                   10
//
// 
//
#define RT_STEP1_VREFMAX                                   34
//
// 
//
#define RT_STEP1_VREFSTEP                                  2
//
// 
//
#define RT_STEP1_VREFSTART                                 10
//
// 
//
#define RT_STEP1_3_PISTEPLARGE                             5
//
// 
//
#define RT_STEP1_3_PISTEPMEDIUM                            5
//
// 
//
#define RT_STEP1_3_PISTEPSMALL                             1
//
// 
//
#define RT_CTLE_MIN                                        0
//
// 
//
#define RT_CTLE_MAX                                        39
//
// 
//
#define RT_CTLE_STEP                                       2
//
// 
//
#define RT_STEP2_VREFMIN                                   5
//
// 
//
#define RT_STEP2_VREFMAX                                   40
//
// 
//
#define RT_STEP2_VREFSTEP                                  1
//
// 
//
#define RT_STEP3_VREFSAMPLES                               7
//
// Pi/VREF center estimate weight
//
#define RT_STEP1_PICENTER_MINWEIGHT                        2
//
// 
//
#define RT_STEP1_PICENTER_MIDWEIGHT                        3
//
// 
//
#define RT_STEP1_PICENTER_MAXWEIGHT                        5
//
// 
//
#define RT_CTLE_SHARED                                     RANK_SHARED|KNOB_SHARED | BIT_SHARED
//
// Victim/aggressor write training
//
#define WRITE_TRAINING                                     1
//
// 
//
#define WT_BIT_SHARING                                     KNOB_SHARED
//
// 
//
#define WT_STROBE_SHARING                                  BIT_SHARED
//
// 
//
#define WT_NUM_EYEMASKS                                    2
//
// 
//
#define WT_EYEMASK0_PI                                     12
//
// 
//
#define WT_EYEMASK_VREF                                    3
//
// 
//
#define WT_EYEMASK1_PI                                     6
//
// 10th of percange of VDDQ
//
#define WT_STEP1_VREFMIN                                   0
//
// 10th of percange of VDDQ
//
#define WT_STEP1_VREFSTEP                                  1
//
// 10th of percange of VDDQ
//
#define WT_STEP1_VREFMAX                                   72
//
// 10th of percange of VDDQ
//
#define WT_STEP1_VREFSTART                                 41
//
// 
//
#define WT_STEP1_3_PISTEPLARGE                             15
//
// 
//
#define WT_STEP1_3_PISTEPMEDIUM                            10
//
// 
//
#define WT_STEP1_3_PISTEPSMALL                             5
//
// 
//
#define WT_STEP2_VREFMIN                                   0
//
// 
//
#define WT_STEP2_VREFMAX                                   71
//
// 
//
#define WT_STEP2_VREFSTEP                                  9
//
// 
//
#define WT_STEP3_VREFSAMPLES                               3
//
// 
//
#define WT_STEP1_PICENTER_MINWEIGHT                        2
//
// 
//
#define WT_STEP1_PICENTER_MIDWEIGHT                        3
//
// 
//
#define WT_STEP1_PICENTER_MAXWEIGHT                        3
//
// 
//
#define VDDQ                                               1100
//
// 
//
#define LDO_TARGET                                         850
//
// 
//
#define LDO_ENABLED                                        0
//
// 
//
#define RON                                                40
//
// 
//
#define ODT                                                240
//
// 
//
#define RTWT_SIM                                           0
//
// Late command training
//
#define COMMAND_TRAINING                                   1
//
// 
//
#define CMD_BYTE_SHARING                                   RANK_SHARED | BIT_SHARED |KNOB_SHARED
//
// 
//
#define CMD_VREF_SHARING                                   RANK_SHARED | BIT_SHARED |KNOB_SHARED
//
// 
//
#define CMD_NUM_EYEMASKS                                   2
//
// Test all memory at the end of MRC
//
#define MEMORY_TEST                                        1
//
// Initialize ECC at the end of MRC
//
#define ECC_SCRUB                                          1
//
// Display all DDRIO delays at the end of MRC
//
#define PHYVIEW_TABLE                                      0
//
// Display memory controller timings
//
#define TIMING_TABLE                                       0
//
// Display function calls
//
#define MRC_FLOW                                           1
//
// Enable BDAT table for publishing memory information in ACPI
//
#define BDAT                                               1
//
// Rank margin tool
//
#define RMT                                                1
//
// Enables RMT Summary for EV
//
#define EV_RMT_SUMMARY                                     1
//
// Detect DIMMs via SPD reads
//
#define DETECT_DIMMS                                       1
//
// Enable PUNIT communication via mailbox
//
#define PUNIT_MAILBOX                                      1
//
// Use ODT input table from KIT team
//
#define ODT_TABLE                                          1
//
// Does this project have Minus1 selects for receive enable?
//
#define RCVN_MINUS1_SUPPORT                                0
//
// If enabled, the receive enable delays will be averaged across all ranks.
//
#define RCVN_AVERAGE_RANK_DELAYS                           1
//
// Starting point for the half clock during receive enable. This number must put the receive enable sampling somewhere within the data burst, not before or after it.
//
#define RCVN_INITIAL2XVAL                                  6
//
// Step size during final phase of receive enable
//
#define RCVN_SMALL_STEP                                    1
//
// How many samples to take during receive enable
//
#define NUMSAMPLES                                         8
//
// Number of samples that need to show a 1 or a 0 before MRC determines it was a solid 1 or 0.
//
#define SAMPLETHRESH                                       4
//
// Starting point for the half clock during receive enable. This number must put the receive enable sampling somewhere within the data burst, not before or after it.
//
#define RCVN_INITIAL2XVAL_SIM                              5
//
// Step size during final phase of receive enable
//
#define RCVN_SMALL_STEP_SIM                                8
//
// How many samples to take during receive enable
//
#define NUMSAMPLES_SIM                                     1
//
// Number of samples that need to show a 1 or a 0 before MRC determines it was a solid 1 or 0.
//
#define SAMPLETHRESH_SIM                                   1
//
// When enabled, the pulsewidth of the receive enable signal will be characterized and the center point chosen. This helps for systems with irregular REC_EN signals.
//
#define RCVN_FINECHARACTERIZATION                          0
//
// Number of 1/16 clocks to subtract from the first rising edge out of the preamble to get to the center of the preamble.
//
#define RCVN_PREAM_CLK_SUBTRACT                            8
//
// Minimum allowable pulse width for RCVN and FWL in 1/16 clock increments. i.e. 4 = 1/4 clock.
//
#define MIN_PULSE_WIDTH                                    2
//
// Are minus 1 selects supported on this project?
//
#define TX_DQS_MINUS1_SUPPORT                              0
//
// Are minus 1 selects supported on this project?
//
#define TX_DQ_MINUS1_SUPPORT                               0
//
// Display register names with dumping
//
#define DUMP_REGISTER_NAMES                                0
//
// Display register fields when dumping registers
//
#define DUMP_REGISTER_FIELDS                               0
//
// Display all descriptions when dumping them
//
#define DUMP_REGISTER_DESCRIPTIONS                         0
//
// Error Code Support
//
#define MRC_ERROR_CODE                                     0
//
// Global enable for Minus1 selects. Enable this before enabling any of the specific MINUS1 select defines such as TX_DQ_MINUS1_SUPPORT.
//
#define MINUS1_SUPPORT                                     0
//
// Enable to use new receive enable and fine write leveling algos. These save code space.
//
#define SPACE_OPTIMIZED_ALGOS                              1
//
// It indicates if the Board ties the DM pins of the DDR memory directly to ground or leave them floating
//
#define DM_PINS_TIED_GROUND                                0
//
// Support for Pass Gate Characterization Test
//
#define PASS_GATE_TEST                                     1
//
// Support for SEC-DED ECC during training
//
#define FAULTY_PART_TRACKING                               0
//
// Support for EV Tools
//
#define EV_TOOLS                                           0
//
// Maximum number of knobs used in centering algo (i.e. low and high)
//
#define MAX_KNOBS                                          1
//
// Min receive VREF
//
#define RX_VREF_MIN                                        0
//
// Max receive VREF
//
#define RX_VREF_MAX                                        113
//
// Receive VREF step
//
#define RX_VREF_STEP                                       3
//
// Min transmit VREF 45%
//
#define TX_VREF_MIN                                        2
//
// Max transmit VREF
//
#define TX_VREF_MAX                                        70
//
// Transmit VREF step
//
#define TX_VREF_STEP                                       3
//
// Implements Diffamp, Odt and tRD Dynamic Formulas.
//
#define PERFORMANCE_SETTINGS                               0
//
// Number of DMAP registers used on the product
//
#define MAX_DMAP_REGISTERS                                 6
//
// Enable the override for CTL, CKE, CMD and CLK
//
#define ENABLE_CMD_OVERRIDE                                1
//
// CTL Offset
//
#define CTL_OFFSET                                         0
//
// CKE Offset
//
#define CKE_OFFSET                                         0
//
// CMD Offset
//
#define CMD_OFFSET                                         0
//
// CLK Offset
//
#define CLK_OFFSET                                         0
//
// Configures Interleaving  and Asymetric Memory Regions
//
#define INTERLEAVING_SUPPORT                               1
//
// Defines SLICE_CHANNEL_HASH MSR number
//
#define SLICE_CHANNEL_HASH_MSR                             0x122
//
// Cpgc based training
//
#define CPGC_BASED_READWRITES                              1
//
// Configure Corrected Memory Error Thresholding/Signaling (Leaky Bucket)
//
#define LEAKY_BUCKET                                       1
//
// Configures DRAM RAPL PL1
//
#define DRAM_RAPL                                          1
//
// Defines DRAM_RAPL_LIMIT MSR number
//
#define RAPL_LIMIT_MSR                                     0x618
//
// early MPR 2D parameter may vary  from project
//
#define EARLYMPR_RXDQS_SWEEP_END                           63
//
// RXVREF middle point
//
#define EARLYMPR_RXVREF                                    32
//
// Mitigation Feature 
//
#define MITIGATION_FEATURE                                 1
//
// Enables/Disables PHY INIT
//
#define DDRIO_PHY_INIT                                     1
//
// Initial startpoint for the high side of receive enable
//
#define HIGH_SIDE_START_RCV_EN                             9
//
// Pi/VREF center estimate weight
//
#define MIN_WEIGHT                                         2
//
// 
//
#define MID_WEIGHT                                         3
//
// 
//
#define MAX_WEIGHT                                         5
//
// AUNIT.MCI_CTL Register
//
#define A_CR_MCI_CTL_MSR                                   0x418
//
// BUNIT.MCI_CTL Register
//
#define B_CR_MCI_CTL_MSR                                   0x410
//
// PPR Support 
//
#define PPR_SUPPORT                                        1
//
// Emulation Support to get register accesses
//
#define EMU_MOV_SUPPORT                                    1
//
// ODT activation table
//
#define MAX_ACTIVATE_CONFIGS                               8
//
// Dunit  odt activation registers
//
#define MAX_ACTIVATE_REGISTERS                             8
//
// 
//
#define VOC_TRAINING                                       1
//
// 
//
#define VOC_VREF_MAX                                       113
//
// 
//
#define VOC_VREF_STEP_SIZE                                 1
//
// 
//
#define VOC_DDR3L_VREF_MIN                                 238
//
// 
//
#define VOC_DDR3L_VREF_MAX                                 742
//
// 
//
#define VOC_DDR4_VREF_MIN                                  238
//
// 
//
#define VOC_DDR4_VREF_MAX                                  742
//
// RdqsN & RdqsP
//
#define RDQS_ODDEVENSUPPORT                                1
//
// Train x4 always
//
#define NIBBLE_TRAINING_SUPPORT                            NEW_RTWT_ALGO
//
// Does this DDRIO have an analog DLL?
//
#define ANALOG_DLL_SUPPORT_BLUEPRINT_DNV                   1
//
// Does this project have a digital DLL?
//
#define DIGITAL_DLL_SUPPORT_BLUEPRINT_DNV                  0
//
// Number of delay types which use clock crossings. Sometimes this is 1 in the case of only having a PI delay. Other projects have a coarse and a fine delay, so this would be 2.
//
#define NUM_CC_DEPENDENT_ELEMENTS_BLUEPRINT_DNV            1
//
// Definitions for register initialization sequence that tell the common MSP libraries
// how to program a register, whether the offset is 8 or 16 bits, etc.
//
#define xxxxx1xx                                           0x00 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxxxx1xR                                           0x01 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxxxx1Sx                                           0x02 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxxxx1SR                                           0x03 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxxxx2xx                                           0x04 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxxxx2xR                                           0x05 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxxxx2Sx                                           0x06 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxxxx2SR                                           0x07 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxxxE1xx                                           0x08 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxxxE1xR                                           0x09 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxxxE1Sx                                           0x0A //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxxxE1SR                                           0x0B //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxxxE2xx                                           0x0C //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxxxE2xR                                           0x0D //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxxxE2Sx                                           0x0E //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxxxE2SR                                           0x0F //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxxMx1xx                                           0x10 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxxMx1xR                                           0x11 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxxMx1Sx                                           0x12 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxxMx1SR                                           0x13 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxxMx2xx                                           0x14 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxxMx2xR                                           0x15 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxxMx2Sx                                           0x16 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxxMx2SR                                           0x17 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxxME1xx                                           0x18 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxxME1xR                                           0x19 //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxxME1Sx                                           0x1A //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxxME1SR                                           0x1B //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxxME2xx                                           0x1C //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxxME2xR                                           0x1D //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxxME2Sx                                           0x1E //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxxME2SR                                           0x1F //  Done=FALSE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxNxx1xx                                           0x20 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxNxx1xR                                           0x21 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxNxx1Sx                                           0x22 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxNxx1SR                                           0x23 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxNxx2xx                                           0x24 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxNxx2xR                                           0x25 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxNxx2Sx                                           0x26 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxNxx2SR                                           0x27 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxNxE1xx                                           0x28 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxNxE1xR                                           0x29 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxNxE1Sx                                           0x2A //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxNxE1SR                                           0x2B //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxNxE2xx                                           0x2C //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxNxE2xR                                           0x2D //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxNxE2Sx                                           0x2E //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxNxE2SR                                           0x2F //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxNMx1xx                                           0x30 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxNMx1xR                                           0x31 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxNMx1Sx                                           0x32 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxNMx1SR                                           0x33 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxNMx2xx                                           0x34 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxNMx2xR                                           0x35 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxNMx2Sx                                           0x36 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxNMx2SR                                           0x37 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxNME1xx                                           0x38 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xxNME1xR                                           0x39 //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xxNME1Sx                                           0x3A //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xxNME1SR                                           0x3B //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xxNME2xx                                           0x3C //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xxNME2xR                                           0x3D //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xxNME2Sx                                           0x3E //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xxNME2SR                                           0x3F //  Done=FALSE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBxxx1xx                                           0x40 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBxxx1xR                                           0x41 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBxxx1Sx                                           0x42 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBxxx1SR                                           0x43 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBxxx2xx                                           0x44 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBxxx2xR                                           0x45 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBxxx2Sx                                           0x46 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBxxx2SR                                           0x47 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBxxE1xx                                           0x48 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBxxE1xR                                           0x49 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBxxE1Sx                                           0x4A //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBxxE1SR                                           0x4B //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBxxE2xx                                           0x4C //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBxxE2xR                                           0x4D //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBxxE2Sx                                           0x4E //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBxxE2SR                                           0x4F //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBxMx1xx                                           0x50 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBxMx1xR                                           0x51 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBxMx1Sx                                           0x52 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBxMx1SR                                           0x53 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBxMx2xx                                           0x54 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBxMx2xR                                           0x55 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBxMx2Sx                                           0x56 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBxMx2SR                                           0x57 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBxME1xx                                           0x58 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBxME1xR                                           0x59 //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBxME1Sx                                           0x5A //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBxME1SR                                           0x5B //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBxME2xx                                           0x5C //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBxME2xR                                           0x5D //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBxME2Sx                                           0x5E //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBxME2SR                                           0x5F //  Done=FALSE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBNxx1xx                                           0x60 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBNxx1xR                                           0x61 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBNxx1Sx                                           0x62 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBNxx1SR                                           0x63 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBNxx2xx                                           0x64 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBNxx2xR                                           0x65 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBNxx2Sx                                           0x66 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBNxx2SR                                           0x67 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBNxE1xx                                           0x68 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBNxE1xR                                           0x69 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBNxE1Sx                                           0x6A //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBNxE1SR                                           0x6B //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBNxE2xx                                           0x6C //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBNxE2xR                                           0x6D //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBNxE2Sx                                           0x6E //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBNxE2SR                                           0x6F //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBNMx1xx                                           0x70 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBNMx1xR                                           0x71 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBNMx1Sx                                           0x72 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBNMx1SR                                           0x73 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBNMx2xx                                           0x74 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBNMx2xR                                           0x75 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBNMx2Sx                                           0x76 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBNMx2SR                                           0x77 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xBNME1xx                                           0x78 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define xBNME1xR                                           0x79 //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define xBNME1Sx                                           0x7A //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define xBNME1SR                                           0x7B //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define xBNME2xx                                           0x7C //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define xBNME2xR                                           0x7D //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define xBNME2Sx                                           0x7E //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define xBNME2SR                                           0x7F //  Done=FALSE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define Dxxxx1xx                                           0x80 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define Dxxxx1xR                                           0x81 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define Dxxxx1Sx                                           0x82 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define Dxxxx1SR                                           0x83 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define Dxxxx2xx                                           0x84 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define Dxxxx2xR                                           0x85 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define Dxxxx2Sx                                           0x86 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define Dxxxx2SR                                           0x87 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxxxE1xx                                           0x88 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxxxE1xR                                           0x89 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxxxE1Sx                                           0x8A //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxxxE1SR                                           0x8B //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxxxE2xx                                           0x8C //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxxxE2xR                                           0x8D //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxxxE2Sx                                           0x8E //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxxxE2SR                                           0x8F //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxxMx1xx                                           0x90 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxxMx1xR                                           0x91 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxxMx1Sx                                           0x92 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxxMx1SR                                           0x93 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxxMx2xx                                           0x94 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxxMx2xR                                           0x95 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxxMx2Sx                                           0x96 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxxMx2SR                                           0x97 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxxME1xx                                           0x98 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxxME1xR                                           0x99 //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxxME1Sx                                           0x9A //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxxME1SR                                           0x9B //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxxME2xx                                           0x9C //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxxME2xR                                           0x9D //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxxME2Sx                                           0x9E //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxxME2SR                                           0x9F //  Done=TRUE UseBB2=FALSE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxNxx1xx                                           0xA0 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxNxx1xR                                           0xA1 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxNxx1Sx                                           0xA2 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxNxx1SR                                           0xA3 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxNxx2xx                                           0xA4 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxNxx2xR                                           0xA5 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxNxx2Sx                                           0xA6 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxNxx2SR                                           0xA7 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxNxE1xx                                           0xA8 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxNxE1xR                                           0xA9 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxNxE1Sx                                           0xAA //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxNxE1SR                                           0xAB //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxNxE2xx                                           0xAC //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxNxE2xR                                           0xAD //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxNxE2Sx                                           0xAE //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxNxE2SR                                           0xAF //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxNMx1xx                                           0xB0 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxNMx1xR                                           0xB1 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxNMx1Sx                                           0xB2 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxNMx1SR                                           0xB3 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxNMx2xx                                           0xB4 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxNMx2xR                                           0xB5 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxNMx2Sx                                           0xB6 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxNMx2SR                                           0xB7 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DxNME1xx                                           0xB8 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DxNME1xR                                           0xB9 //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DxNME1Sx                                           0xBA //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DxNME1SR                                           0xBB //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DxNME2xx                                           0xBC //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DxNME2xR                                           0xBD //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DxNME2Sx                                           0xBE //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DxNME2SR                                           0xBF //  Done=TRUE UseBB2=FALSE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBxxx1xx                                           0xC0 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBxxx1xR                                           0xC1 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBxxx1Sx                                           0xC2 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBxxx1SR                                           0xC3 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBxxx2xx                                           0xC4 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBxxx2xR                                           0xC5 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBxxx2Sx                                           0xC6 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBxxx2SR                                           0xC7 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBxxE1xx                                           0xC8 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBxxE1xR                                           0xC9 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBxxE1Sx                                           0xCA //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBxxE1SR                                           0xCB //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBxxE2xx                                           0xCC //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBxxE2xR                                           0xCD //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBxxE2Sx                                           0xCE //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBxxE2SR                                           0xCF //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBxMx1xx                                           0xD0 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBxMx1xR                                           0xD1 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBxMx1Sx                                           0xD2 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBxMx1SR                                           0xD3 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBxMx2xx                                           0xD4 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBxMx2xR                                           0xD5 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBxMx2Sx                                           0xD6 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBxMx2SR                                           0xD7 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBxME1xx                                           0xD8 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBxME1xR                                           0xD9 //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBxME1Sx                                           0xDA //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBxME1SR                                           0xDB //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBxME2xx                                           0xDC //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBxME2xR                                           0xDD //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBxME2Sx                                           0xDE //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBxME2SR                                           0xDF //  Done=TRUE UseBB2=TRUE NeedSecondByte=FALSE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBNxx1xx                                           0xE0 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBNxx1xR                                           0xE1 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBNxx1Sx                                           0xE2 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBNxx1SR                                           0xE3 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBNxx2xx                                           0xE4 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBNxx2xR                                           0xE5 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBNxx2Sx                                           0xE6 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBNxx2SR                                           0xE7 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBNxE1xx                                           0xE8 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBNxE1xR                                           0xE9 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBNxE1Sx                                           0xEA //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBNxE1SR                                           0xEB //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBNxE2xx                                           0xEC //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBNxE2xR                                           0xED //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBNxE2Sx                                           0xEE //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBNxE2SR                                           0xEF //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=FALSE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBNMx1xx                                           0xF0 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBNMx1xR                                           0xF1 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBNMx1Sx                                           0xF2 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBNMx1SR                                           0xF3 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBNMx2xx                                           0xF4 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBNMx2xR                                           0xF5 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBNMx2Sx                                           0xF6 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBNMx2SR                                           0xF7 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=FALSE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define DBNME1xx                                           0xF8 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=FALSE
#define DBNME1xR                                           0xF9 //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=FALSE RankLoop=TRUE
#define DBNME1Sx                                           0xFA //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=FALSE
#define DBNME1SR                                           0xFB //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=8b StrobeLoop=TRUE RankLoop=TRUE
#define DBNME2xx                                           0xFC //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=FALSE
#define DBNME2xR                                           0xFD //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=FALSE RankLoop=TRUE
#define DBNME2Sx                                           0xFE //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=FALSE
#define DBNME2SR                                           0xFF //  Done=TRUE UseBB2=TRUE NeedSecondByte=TRUE MaskPresent=TRUE ConditionalExecution=TRUE Offset=16b StrobeLoop=TRUE RankLoop=TRUE
#define xxxxxxxx                                           0x00 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=FALSE InstanceDependent=FALSE StringPresent=FALSE
#define xxxxxxxS                                           0x01 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=FALSE InstanceDependent=FALSE StringPresent=TRUE
#define xxxxxxIx                                           0x02 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=FALSE InstanceDependent=TRUE StringPresent=FALSE
#define xxxxxxIS                                           0x03 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=FALSE InstanceDependent=TRUE StringPresent=TRUE
#define xxxxxCxx                                           0x04 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=TRUE InstanceDependent=FALSE StringPresent=FALSE
#define xxxxxCxS                                           0x05 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=TRUE InstanceDependent=FALSE StringPresent=TRUE
#define xxxxxCIx                                           0x06 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=TRUE InstanceDependent=TRUE StringPresent=FALSE
#define xxxxxCIS                                           0x07 //  Reserved=xx Reserved=xx Reserved=xx Reserved=xx Reserved=xx ChannelDependent=TRUE InstanceDependent=TRUE StringPresent=TRUE
//
// Max number of DLLs supported (analog plus digital).
//
#define MAX_DLL_COUNT                                      1
//
// Number of DLLs supported (analog plus digital) for BLUEPRINT_DNV
//
#define DLL_COUNT_BLUEPRINT_DNV                            1
//
// Max number of registers needed to be cached for the GetSet functions.
//
#define MAX_NUM_CACHE_ELEMENTS                             17
#define MAX_NUM_CACHE_ELEMENTS_PB                          2
#define MAX_NUM_CACHE_ELEMENTS_NON_SR                      33
#define MAX_NUM_CACHE_ELEMENTS_NON_SR_PB                   1
//
// Number of registers needed to be cached for BLUEPRINT_DNV
//
#define NUM_CACHE_ELEMENTS_BLUEPRINT_DNV                   17
//
// Max number of delay types (i.e. receive enable, TX DQS, etc).
//
#define MAX_NUM_ALGOS                                      22
//
// Max number of delay types for BLUEPRINT_DNV
//
#define NUM_ALGOS_BLUEPRINT_DNV                            22
//
// Max number of delay elements per delay type.
//
#define MAX_NUM_DELAY_ELEMENTS                             3
//
// Number of delay elements per delay type for BLUEPRINT_DNV
//
#define NUM_DELAY_ELEMENTS_BLUEPRINT_DNV                   3
//
// Max number of clock crossing (deadband) elements per delay type.
//
#define MAX_NUM_CC_ELEMENTS                                3
//
// Max number of clock crossing (deadband) ranges.
//
#define MAX_NUM_CC_RANGES                                  12
//
// Number of clock crossing (deadband) elements per delay type for BLUEPRINT_DNV
//
#define NUM_CC_ELEMENTS_BLUEPRINT_DNV                      3
//
// Number of clock crossing (deadband) ranges for BLUEPRINT_DNV
//
#define NUM_CC_RANGES_BLUEPRINT_DNV                        12
//
// Max number of elements (delay and CC) per delay type.
//
#define MAX_NUM_ELEMENTS_PER_ALGO                          6
//
// Number of elements (delay and CC) per delay type for BLUEPRINT_DNV
//
#define NUM_ELEMENTS_PER_ALGO_BLUEPRINT_DNV                6
//
// Max number of elements in the Signal Info Array
//
#define MAX_SIGNAL_INFO_ELEMENTS                           66
//
// Number of elements in the Signal Info Array for BLUEPRINT_DNV
//
#define SIGNAL_INFO_ELEMENTS_BLUEPRINT_DNV                 66
//
// Max number of frequencies supported by DVFS (dynamic voltage and frequency scaling).
//
#define MAX_NUM_DVFS                                       1
//
// Number of frequencies supported by DVFS (dynamic voltage and frequency scaling) for BLUEPRINT_DNV
//
#define NUM_DVFS_BLUEPRINT_DNV                             1
//
// Indices of each delay type.
//
#define MmrcCkAll                                          0x3000
#define MmrcRecEnDelay                                     0x3001
#define MmrcRxDqBitDelay                                   0x3002
#define MmrcTxDqBitDelay                                   0x3003
#define MmrcCmdGrp0                                        0x3004
#define MmrcCmdGrp1                                        0x3005
#define MmrcCmdGrp2                                        0x3006
#define CmdGrp3                                            0x3007
#define CmdGrp4                                            0x3008
#define CmdGrp5                                            0x3009
#define CmdGrp6                                            0x300A
#define CmdGrp7                                            0x300B
#define MmrcCtlGrp0                                        0x300C
#define MmrcCtlGrp1                                        0x300D
#define MmrcCtlGrp2                                        0x300E
#define MmrcRxDqsNDelay                                    0x300F
#define MmrcRxDqsPDelay                                    0x3010
#define TxDqDelay2                                         0x3011
#define TxDqDrvDelay2                                      0x3012
#define MmrcTxDqDelay                                      0x3013
#define TxDqDrvDelay                                       0x3014
#define MmrcTxDqsDelay                                     0x3015
//
// Indices of each delay type for BLUEPRINT_DNV
//
#define CkAll_BLUEPRINT_DNV                                0x1000
#define RecEnDelay_BLUEPRINT_DNV                           0x1001
#define RxDqBitDelay_BLUEPRINT_DNV                         0x1002
#define TxDqBitDelay_BLUEPRINT_DNV                         0x1003
#define CmdGrp0_BLUEPRINT_DNV                              0x1004
#define CmdGrp1_BLUEPRINT_DNV                              0x1005
#define CmdGrp2_BLUEPRINT_DNV                              0x1006
#define CmdGrp3_BLUEPRINT_DNV                              0x1007
#define CmdGrp4_BLUEPRINT_DNV                              0x1008
#define CmdGrp5_BLUEPRINT_DNV                              0x1009
#define CmdGrp6_BLUEPRINT_DNV                              0x100A
#define CmdGrp7_BLUEPRINT_DNV                              0x100B
#define CtlGrp0_BLUEPRINT_DNV                              0x100C
#define CtlGrp1_BLUEPRINT_DNV                              0x100D
#define CtlGrp2_BLUEPRINT_DNV                              0x100E
#define RxDqsNDelay_BLUEPRINT_DNV                          0x100F
#define RxDqsPDelay_BLUEPRINT_DNV                          0x1010
#define TxDqDelay2_BLUEPRINT_DNV                           0x1011
#define TxDqDrvDelay2_BLUEPRINT_DNV                        0x1012
#define TxDqDelay_BLUEPRINT_DNV                            0x1013
#define TxDqDrvDelay_BLUEPRINT_DNV                         0x1014
#define TxDqsDelay_BLUEPRINT_DNV                           0x1015
//
// These are signal groups. Subtract 0x4000 from each to get the right index for each group.
//
#define MmrcCmdAll                                         0x4000
#define MmrcCtlAll                                         0x4001
#define MmrcRxDqsDelay                                     0x4002
#define TxDqDelayG                                         0x4003
#define MmrcWrLvlDelay                                     0x4004
//
// Max number of group signals
//
#define MAX_NUM_GROUP                                      5
//
// These are signal groups. Subtract 0x1000 from each to get the first delay type in each group for BLUEPRINT_DNV
//
#define CmdAll_BLUEPRINT_DNV                               0x2004
#define CtlAll_BLUEPRINT_DNV                               0x200C
#define RxDqsDelay_BLUEPRINT_DNV                           0x200F
#define TxDqDelayG_BLUEPRINT_DNV                           0x2011
#define WrLvlDelay_BLUEPRINT_DNV                           0x2013
//
// Index for unique get/set calls which aren't tied to a particular delay/cc type.
//
#define MmrcCmdVref                                        0x5000
#define Ctle_bias                                          0x5001
#define Ctle_cap                                           0x5002
#define Ctle_caps                                          0x5003
#define Ctle_en                                            0x5004
#define Ctle_Wrap                                          0x5005
#define DiffAmpLen                                         0x5006
#define DqsdrvEnbIdle                                      0x5007
#define IoDrvClkPushOut                                    0x5008
#define OdtEnOff                                           0x5009
#define OdtSegEnOff                                        0x500A
#define rdcmd2rdvldsig                                     0x500B
#define RdCmdLatency                                       0x500C
#define RdEnClkPushOut                                     0x500D
#define RecEnClkPushOut                                    0x500E
#define RecEnSmp                                           0x500F
#define RxDqClkPushOut                                     0x5010
#define RxDqsClkPushOut                                    0x5011
#define RxDqsTether                                        0x5012
#define RxVocEnDq                                          0x5013
#define RxVocSmp                                           0x5014
#define RxVocVal0                                          0x5015
#define RxVocVal1                                          0x5016
#define RxVocVal2                                          0x5017
#define RxVocVal3                                          0x5018
#define RxVocVal4                                          0x5019
#define RxVocVal5                                          0x501A
#define RxVocVal6                                          0x501B
#define RxVocVal7                                          0x501C
#define MmrcRxVref                                         0x501D
#define RxVrefCtrl                                         0x501E
#define RxVrefRangeSel                                     0x501F
#define TxDqClkPushout                                     0x5020
#define TxDqDelayGExt                                      0x5021
#define TxDqsClkPushout                                    0x5022
#define TxEqualization                                     0x5023
#define TxImodeDqEn                                        0x5024
#define TxImodeDqsEn                                       0x5025
#define TxSwingBoost                                       0x5026
#define MmrcTxVref                                         0x5027
#define WrCmdLatency                                       0x5028
#define WrLvlDelayExt                                      0x5029
#define WrLvlSmp                                           0x502A
#define WrLvlSmpReg                                        0x502B
//
// Max number of unique signals
//
#define MAX_NUM_UNIQUE                                     44
//
// Index for unique get/set calls which aren't tied to a particular delay/cc type for BLUEPRINT_DNV
//
#define CmdVref_BLUEPRINT_DNV                              132
#define Ctle_bias_BLUEPRINT_DNV                            133
#define Ctle_cap_BLUEPRINT_DNV                             134
#define Ctle_caps_BLUEPRINT_DNV                            135
#define Ctle_en_BLUEPRINT_DNV                              136
#define Ctle_Wrap_BLUEPRINT_DNV                            137
#define DiffAmpLen_BLUEPRINT_DNV                           138
#define DqsdrvEnbIdle_BLUEPRINT_DNV                        139
#define IoDrvClkPushOut_BLUEPRINT_DNV                      140
#define OdtEnOff_BLUEPRINT_DNV                             141
#define OdtSegEnOff_BLUEPRINT_DNV                          142
#define rdcmd2rdvldsig_BLUEPRINT_DNV                       143
#define RdCmdLatency_BLUEPRINT_DNV                         144
#define RdEnClkPushOut_BLUEPRINT_DNV                       145
#define RecEnClkPushOut_BLUEPRINT_DNV                      146
#define RecEnSmp_BLUEPRINT_DNV                             147
#define RxDqClkPushOut_BLUEPRINT_DNV                       148
#define RxDqsClkPushOut_BLUEPRINT_DNV                      149
#define RxDqsTether_BLUEPRINT_DNV                          150
#define RxVocEnDq_BLUEPRINT_DNV                            151
#define RxVocSmp_BLUEPRINT_DNV                             152
#define RxVocVal0_BLUEPRINT_DNV                            153
#define RxVocVal1_BLUEPRINT_DNV                            154
#define RxVocVal2_BLUEPRINT_DNV                            155
#define RxVocVal3_BLUEPRINT_DNV                            156
#define RxVocVal4_BLUEPRINT_DNV                            157
#define RxVocVal5_BLUEPRINT_DNV                            158
#define RxVocVal6_BLUEPRINT_DNV                            159
#define RxVocVal7_BLUEPRINT_DNV                            160
#define RxVref_BLUEPRINT_DNV                               161
#define RxVrefCtrl_BLUEPRINT_DNV                           162
#define RxVrefRangeSel_BLUEPRINT_DNV                       163
#define TxDqClkPushout_BLUEPRINT_DNV                       164
#define TxDqDelayGExt_BLUEPRINT_DNV                        165
#define TxDqsClkPushout_BLUEPRINT_DNV                      166
#define TxEqualization_BLUEPRINT_DNV                       167
#define TxImodeDqEn_BLUEPRINT_DNV                          168
#define TxImodeDqsEn_BLUEPRINT_DNV                         169
#define TxSwingBoost_BLUEPRINT_DNV                         170
#define TxVref_BLUEPRINT_DNV                               171
#define WrCmdLatency_BLUEPRINT_DNV                         172
#define WrLvlDelayExt_BLUEPRINT_DNV                        173
#define WrLvlSmp_BLUEPRINT_DNV                             174
#define WrLvlSmpReg_BLUEPRINT_DNV                          175
//
// External functions that need to be called for GetSet elements which require and external function to read/write the element.
//
#define CmdVref_FUNC                                       0
#define Ctle_Wrap_FUNC                                     1
#define RxDqsTether_FUNC                                   2
#define RxVref_FUNC                                        3
#define TxDqDelayGExt_FUNC                                 4
#define TxEqualization_FUNC                                5
#define TxSwingBoost_FUNC                                  6
#define TxVref_FUNC                                        7
#define WrLvlDelayExt_FUNC                                 8
#define WrLvlSmp_FUNC                                      9
//
// External functions for BLUEPRINT_DNV
//
#define CmdVref_FUNC_BLUEPRINT_DNV                         0
#define Ctle_Wrap_FUNC_BLUEPRINT_DNV                       1
#define RxDqsTether_FUNC_BLUEPRINT_DNV                     2
#define RxVref_FUNC_BLUEPRINT_DNV                          3
#define TxDqDelayGExt_FUNC_BLUEPRINT_DNV                   4
#define TxEqualization_FUNC_BLUEPRINT_DNV                  5
#define TxSwingBoost_FUNC_BLUEPRINT_DNV                    6
#define TxVref_FUNC_BLUEPRINT_DNV                          7
#define WrLvlDelayExt_FUNC_BLUEPRINT_DNV                   8
#define WrLvlSmp_FUNC_BLUEPRINT_DNV                        9
//
// Max number of elements (delay and CC) per delay type.
//
#define MAX_NUM_ELEMENTS                                   176
//
// Number of elements (delay and CC) per delay type for BLUEPRINT_DNV
//
#define NUM_ELEMENTS_BLUEPRINT_DNV                         176
//
// Total different PFCT variations supported by this project.
//
#define NUM_PLAT                                           8
#define NUM_FREQ                                           5
#define NUM_CONF                                           3
#define NUM_TYPE                                           2
//
// Macros for converting PFCT combinations from the generated tool output into correct bitmasks for the Init sequence.
//
#define P(p)                                               CONV1(p)
#define F(f)                                               CONV1(f)
#define C(c)                                               CONV1(c)
#define T(t)                                               CONV1(t)
#define PF(p,f)                                            CONV2((((p) << NUM_FREQ) + (f)))
#define PT(p,t)                                            CONV2((((p) << NUM_TYPE) + (t)))
#define PC(p,c)                                            CONV2((((p) << NUM_CONF) + (c)))
#define FT(f,t)                                            CONV1((((f) << NUM_TYPE) + (t)))
#define FC(f,c)                                            CONV1((((f) << NUM_CONF) + (c)))
#define CT(c,t)                                            CONV1((((c) << NUM_TYPE) + (t)))
#define PFT(p,f,t)                                         CONV2((((p) << (NUM_FREQ + NUM_TYPE)) + ((f) << NUM_TYPE) + (t)))
#define PFC(p,f,c)                                         CONV2((((p) << (NUM_FREQ + NUM_CONF)) + ((f) << NUM_CONF) + (c)))
#define PCT(p,c,t)                                         CONV2((((p) << (NUM_CONF + NUM_TYPE)) + ((c) << NUM_TYPE) + (t)))
#define FCT(f,c,t)                                         CONV2((((f) << (NUM_CONF + NUM_TYPE)) + ((c) << NUM_TYPE) + (t)))
#define PFCT(p,f,c,t)                                      CONV3((((p) << (NUM_FREQ + NUM_CONF + NUM_TYPE)) + ((f) << (NUM_CONF + NUM_TYPE)) + ((c) << NUM_TYPE) + (t)))
//
// Supported Platforms
//
#define P_NONE                                             0
#define P_SIM                                              BIT0
#define P_EMU                                              BIT1
#define P_EMU_DUNIT                                        BIT2
#define P_SIMICS                                           BIT3
#define P_JTAG                                             BIT4
#define P_INT                                              BIT5
#define P_CRB                                              BIT6
#define P_MEM_DOWN                                         BIT7
#define P_ALL                                              0xFFFF
//
// Supported Frequencies
//
#define F_NONE                                             0
#define F_1600                                             BIT0
#define F_1866                                             BIT1
#define F_2133                                             BIT2
#define F_2400                                             BIT3
#define F_2666                                             BIT4
#define F_ALL                                              0xFFFF
//
// Supported Configurations
//
#define C_NONE                                             0
#define C_DNV_A0                                           BIT0
#define C_DNV_A1                                           BIT1
#define C_DNV_B0                                           BIT2
#define C_ALL                                              0xFFFF
//
// Supported Types
//
#define T_NONE                                             0
#define T_DDR3L                                            BIT0
#define T_DDR4                                             BIT1
#define T_ALL                                              0xFFFF
//
// Supported Boot Paths
//
#define S0                                                 BIT0
#define S3                                                 BIT1
#define S5                                                 BIT2
#define FB                                                 BIT3
#define ADR                                                BIT4
#define ALL_PATHS                                          0xFF
//
// Max number of subtasks
//
#define MAX_SUBTASKS                                       38

//
// All possible actions for the init phase of MSP.
//
#define MMRC_SET                                           0
#define MMRC_DELAY                                         1
#define MMRC_SET_DELAY                                     2
#define MMRC_FORCE_SET                                     3
#define MMRC_POLL                                          4
#define MMRC_GET                                           5
#define MMRC_SUBTASK                                       6
#define MMRC_ACTION_ERROR                                  7
//
// Offsets into InitData[] for each init block. Total size = 18307 bytes.
//
#define PreventDdrioClearS0                                0
#define modmem_start                                       (PreventDdrioClearS0 + 10)
#define modmem_init_sfr_seq                                (modmem_start + 23)
#define modmem_adpll_prog_seq                              (modmem_init_sfr_seq + 15)
#define modmem_init_staticcfg_seq                          (modmem_adpll_prog_seq + 50)
#define modmem_init_ch1x8ch0x8_seq                         (modmem_init_staticcfg_seq + 3881)
#define modmem_init_ch1x8ch0x4_seq                         (modmem_init_ch1x8ch0x8_seq + 181)
#define modmem_init_ch1x4ch0x8_seq                         (modmem_init_ch1x8ch0x4_seq + 98)
#define modmem_init_ch1x4ch0x4_seq                         (modmem_init_ch1x4ch0x8_seq + 98)
#define modmem_init_ch0pmrst_seq                           (modmem_init_ch1x4ch0x4_seq + 23)
#define modmem_wait_adpll_lock_seq                         (modmem_init_ch0pmrst_seq + 41)
#define modmem_adpll_locktimer_seq                         (modmem_wait_adpll_lock_seq + 15)
#define modmem_init_dllcfg_seq                             (modmem_adpll_locktimer_seq + 13)
#define dll_wa                                             (modmem_init_dllcfg_seq + 391)
#define modmem_init_clkdividersync_seq                     (dll_wa + 186)
#define modmem_init_phyrst_ch0_seq                         (modmem_init_clkdividersync_seq + 51)
#define modmem_init_phyrst_ch1_seq                         (modmem_init_phyrst_ch0_seq + 38)
#define modmem_init_rxfiforst_ch0_seq                      (modmem_init_phyrst_ch1_seq + 38)
#define modmem_init_rxfiforst_ch1_seq                      (modmem_init_rxfiforst_ch0_seq + 31)
#define modmem_init_phyrst_common_seq                      (modmem_init_rxfiforst_ch1_seq + 31)
#define modmem_init_compinit_seq                           (modmem_init_phyrst_common_seq + 29)
#define modmem_init_pointerenable_seq                      (modmem_init_compinit_seq + 99)
#define modmem_init_dramreset_seq                          (modmem_init_pointerenable_seq + 23)
#define modmem_init_iobufact_ch0_seq                       (modmem_init_dramreset_seq + 19)
#define modmem_init_iobufact_ch1_seq                       (modmem_init_iobufact_ch0_seq + 42)
#define modmem_init_compovr_disable_seq                    (modmem_init_iobufact_ch1_seq + 42)
#define modmem_init_dqdynclkgate_seq                       (modmem_init_compovr_disable_seq + 53)
#define modmem_init_dqdynclkgate_dis                       (modmem_init_dqdynclkgate_seq + 45)
#define modmem_init_disable_ch0_seq                        (modmem_init_dqdynclkgate_dis + 19)
#define modmem_init_spidinitcomplete_ch0_seq               (modmem_init_disable_ch0_seq + 54)
#define modmem_init_disable_ch1_seq                        (modmem_init_spidinitcomplete_ch0_seq + 12)
#define modmem_init_spidinitcomplete_ch1_seq               (modmem_init_disable_ch1_seq + 54)
#define modmem_init_compclkgate_seq                        (modmem_init_spidinitcomplete_ch1_seq + 12)
#define modmem_init_compclkgate_dis                        (modmem_init_compclkgate_seq + 86)
#define modmem_init_criclkgate_seq                         (modmem_init_compclkgate_dis + 86)
#define modmem_init_criclkgate_dis                         (modmem_init_criclkgate_seq + 17)
#define modmem_init_ctle_po_en                             (modmem_init_criclkgate_dis + 15)
#define DisableScrub                                       (modmem_init_ctle_po_en + 331)
#define DisableEcc                                         (DisableScrub + 25)
#define DisableScrambler                                   (DisableEcc + 10)
#define DunitDefaults                                      (DisableScrambler + 14)
#define EnableChannels                                     (DunitDefaults + 78)
#define EnClkGating                                        (EnableChannels + 35)
#define ClrSelfRefresh                                     (EnClkGating + 13)
#define DdrTimingCtrl                                      (ClrSelfRefresh + 8)
#define DDR3Reset                                          (DdrTimingCtrl + 211)
#define DUnitForTrain                                      (DDR3Reset + 1)
#define MmapForTrain                                       (DUnitForTrain + 112)
#define DunitWake                                          (MmapForTrain + 226)
#define ChangeRefreshPeriod                                (DunitWake + 19)
#define ConnectPmiToCpgc                                   (ChangeRefreshPeriod + 58)
#define DunitInitComplete                                  (ConnectPmiToCpgc + 15)
#define DramWake                                           (DunitInitComplete + 7)
#define PreJedec                                           (DramWake + 17)
#define PostJedec                                          (PreJedec + 1)
#define HandleR2RSwitching                                 (PostJedec + 1)
#define DisableRank2RankSwitching                          (HandleR2RSwitching + 8)
#define DunitInitNotComplete                               (DisableRank2RankSwitching + 10)
#define MmapAftTrain                                       (DunitInitNotComplete + 7)
#define DUnitAftTrain                                      (MmapAftTrain + 116)
#define ProgDunitPerfPowerSettings                         (DUnitAftTrain + 61)
#define InitScrambler                                      (ProgDunitPerfPowerSettings + 161)
#define MitigationFeature                                  (InitScrambler + 18)
#define DunitToggleOffOn                                   (MitigationFeature + 116)
#define SetUceFilter                                       (DunitToggleOffOn + 33)
#define Enable32bitBus                                     (SetUceFilter + 8)
#define PostMemTestDunitFeatures                           (Enable32bitBus + 215)
#define ConnectPmiToBunit                                  (PostMemTestDunitFeatures + 7)
#define ShadowMrsToXbuf                                    (ConnectPmiToBunit + 42)
#define modmem_init_periodiccomp_seq                       (ShadowMrsToXbuf + 127)
#define LeakyBucket                                        (modmem_init_periodiccomp_seq + 33)
#define ShadowMrs2                                         (LeakyBucket + 109)
#define ProgramBunitAunit                                  (ShadowMrs2 + 17)
#define PrintDunitTable                                    (ProgramBunitAunit + 218)
#define MemoryThermalThrottlingSettings                    (PrintDunitTable + 452)
#define MemHotSettings                                     (MemoryThermalThrottlingSettings + 407)
#define MemTripSettings                                    (MemHotSettings + 65)
#define EnableChannels_x                                   (MemTripSettings + 53)
#define DoRegisterInit                                     (EnableChannels_x + 8)
#define DoRegisterInitCke                                  (DoRegisterInit + 579)
#define ClearSpdResetFlag                                  (DoRegisterInitCke + 69)
#define JedecInit                                          (ClearSpdResetFlag + 8)
#define DisBUnitCache                                      (JedecInit + 1413)
#define ConnectPmiToCpgcPostBoot                           (DisBUnitCache + 1)
#define ConnectPmiToBunitPostBoot                          (ConnectPmiToCpgcPostBoot + 55)
#define DUnitAftTrainx                                     (ConnectPmiToBunitPostBoot + 19)
#define CheckDunitFuse                                     (DUnitAftTrainx + 84)
#define PeriodicComp                                       (CheckDunitFuse + 110)
#define InitializeEcc                                      (PeriodicComp + 7)
#define EnableScrub                                        (InitializeEcc + 15)
#define DramRaplLocked                                     (EnableScrub + 21)
#define DramRapl                                           (DramRaplLocked + 9)
#define EccLaneSwap                                        (DramRapl + 17)
#define modmem_init_comp_vref_ctl_seq                      (EccLaneSwap + 1)
#define modmem_init_lrcomp_vref_ctrl_seq                   (modmem_init_comp_vref_ctl_seq + 27)
#define modmem_init_odt_wa_seq                             (modmem_init_lrcomp_vref_ctrl_seq + 15)
#define modmem_comp_bypass_seq                             (modmem_init_odt_wa_seq + 110)
#define PerfLatencyDefaultsCh0                             (modmem_comp_bypass_seq + 92)
#define PerfLatencyDefaultsCh1                             (PerfLatencyDefaultsCh0 + 96)
#define ReadSpareBits                                      (PerfLatencyDefaultsCh1 + 96)
#define CPGC_ENABLE                                        (ReadSpareBits + 9)
#define CPGC_LOOPS                                         (CPGC_ENABLE + 192)
#define CPGC_SETUP_VA                                      (CPGC_LOOPS + 31)
#define CPGC_FIXVAR                                        (CPGC_SETUP_VA + 383)
#define CPGC_CWL_PATTERN                                   (CPGC_FIXVAR + 25)
#define CPGC_SETUP_LVL                                     (CPGC_CWL_PATTERN + 15)
#define CPGC_CADB1                                         (CPGC_SETUP_LVL + 19)
#define CPGC_CADB1_BUFx                                    (CPGC_CADB1 + 453)
#define CPGC_RUNTEST                                       (CPGC_CADB1_BUFx + 129)
#define CPGC_RUNTEST_PARALLEL_DUMMY                        (CPGC_RUNTEST + 81)
#define CPGC_RUNTEST_PARALLEL_CLEAR                        (CPGC_RUNTEST_PARALLEL_DUMMY + 33)
#define CPGC_RUNTEST_PARALLEL                              (CPGC_RUNTEST_PARALLEL_CLEAR + 17)
#define CPGC_RUNTEST_PARALLEL_CHECK                        (CPGC_RUNTEST_PARALLEL + 13)
#define CPGC_DISABLE                                       (CPGC_RUNTEST_PARALLEL_CHECK + 62)
#define CPGC_MEMINIT                                       (CPGC_DISABLE + 7)
#define CPGC_MEMINIT_AND_TEST                              (CPGC_MEMINIT + 104)
#define CPGC_MEMTEST                                       (CPGC_MEMINIT_AND_TEST + 122)
#define PRECHARGEALL                                       (CPGC_MEMTEST + 152)
#define RECEIVE_ENABLE_ENTRY                               (PRECHARGEALL + 25)
#define RECEIVE_ENABLE_ENTRYx                              (RECEIVE_ENABLE_ENTRY + 28)
#define GET_RDCMD2RCVEN                                    (RECEIVE_ENABLE_ENTRYx + 15)
#define SET_RDCMD2RCVEN                                    (GET_RDCMD2RCVEN + 17)
#define SEND_DRAM_INIT                                     (SET_RDCMD2RCVEN + 15)
#define PDA_SEQ                                            (SEND_DRAM_INIT + 11)
#define RECEIVE_ENABLE_EXITx                               (PDA_SEQ + 53)
#define RECEIVE_ENABLE_EXIT                                (RECEIVE_ENABLE_EXITx + 7)
#define FINEWRITELEVEL_ENTRY_X                             (RECEIVE_ENABLE_EXIT + 28)
#define FINEWRITELEVEL_ENTRY                               (FINEWRITELEVEL_ENTRY_X + 19)
#define FINEWRITELEVEL_ENTRYx                              (FINEWRITELEVEL_ENTRY + 22)
#define FINEWRITELEVEL_EXIT_x                              (FINEWRITELEVEL_ENTRYx + 40)
#define FINEWRITELEVEL_EXIT                                (FINEWRITELEVEL_EXIT_x + 19)
#define WRLVLMODE                                          (FINEWRITELEVEL_EXIT + 36)
#define FORCEODT_ON                                        (WRLVLMODE + 22)
#define FORCEODT_OFF                                       (FORCEODT_ON + 19)
#define FORCEODT_REL                                       (FORCEODT_OFF + 19)
#define COARSEWRITELEVEL_ENTRYx                            (FORCEODT_REL + 19)
#define COARSEWRITELEVEL_ENTRY                             (COARSEWRITELEVEL_ENTRYx + 7)
#define COARSEWRITELEVEL_EXITx                             (COARSEWRITELEVEL_ENTRY + 1)
#define COARSEWRITELEVEL_EXIT                              (COARSEWRITELEVEL_EXITx + 7)
#define EARLY_READ_TRAINING_ENTRYx                         (COARSEWRITELEVEL_EXIT + 1)
#define EARLY_READ_TRAINING_ENTRY                          (EARLY_READ_TRAINING_ENTRYx + 8)
#define EARLY_READ_TRAINING_EXIT                           (EARLY_READ_TRAINING_ENTRY + 1)
#define ENABLE_MPR_MODEx                                   (EARLY_READ_TRAINING_EXIT + 1)
#define ENABLE_MPR_MODE                                    (ENABLE_MPR_MODEx + 7)
#define DISABLE_MPR_MODE                                   (ENABLE_MPR_MODE + 8)
#define DISABLE_MPR_MODEx                                  (DISABLE_MPR_MODE + 8)
#define READTRAINING_ENTRY                                 (DISABLE_MPR_MODEx + 7)
#define READTRAINING_EXIT                                  (READTRAINING_ENTRY + 1)
#define WRITETRAINING_ENTRY                                (READTRAINING_EXIT + 1)
#define WRITETRAINING_EXIT                                 (WRITETRAINING_ENTRY + 1)
#define COMMANDCLOCKTRAINING_ENTRY                         (WRITETRAINING_EXIT + 1)
#define COMMANDCLOCKTRAINING_EXIT                          (COMMANDCLOCKTRAINING_ENTRY + 37)
#define RELEASE_CKE                                        (COMMANDCLOCKTRAINING_EXIT + 1)
#define ENABLE_CKE                                         (RELEASE_CKE + 23)
#define DISABLE_CKE                                        (ENABLE_CKE + 23)
#define RESETDRAMS_COMMON_SET                              (DISABLE_CKE + 23)
#define RESETDRAMS_COMMON_CLEAR                            (RESETDRAMS_COMMON_SET + 21)
#define ENABLE_RELEASE_CKE                                 (RESETDRAMS_COMMON_CLEAR + 29)
#define RESETDRAMS_SIM                                     (ENABLE_RELEASE_CKE + 23)
#define SpdResetNeededEntry                                (RESETDRAMS_SIM + 70)
#define SetSpdResetPmc                                     (SpdResetNeededEntry + 42)
#define DetermineBootModeEntry                             (SetSpdResetPmc + 15)
#define IsDunitEmuModel                                    (DetermineBootModeEntry + 23)
#define CPGC_MPR_TRAINING                                  (IsDunitEmuModel + 17)
#define CPGC_CWL_SIM_SETUP                                 (CPGC_MPR_TRAINING + 52)
#define CPGC_CWL_SIM_RESTORE                               (CPGC_CWL_SIM_SETUP + 123)
#define CPGC_TURNAROUNDS_RECONFIG                          (CPGC_CWL_SIM_RESTORE + 39)
#define RMT_CLEAR_REGISTERS                                (CPGC_TURNAROUNDS_RECONFIG + 55)
#define RMT_GET_CMD_AND_VALUE                              (RMT_CLEAR_REGISTERS + 19)
#define CPGC_ONETIME_INIT                                  (RMT_GET_CMD_AND_VALUE + 15)
#define FIFO_RESET_ENABLE                                  (CPGC_ONETIME_INIT + 316)
#define FIFO_RESET_ENABLEx                                 (FIFO_RESET_ENABLE + 23)
#define FIFO_RESET_DISABLE                                 (FIFO_RESET_ENABLEx + 8)
#define FIFO_RESET_DISABLEx                                (FIFO_RESET_DISABLE + 23)
#define PERFORM_FIFO_RESET                                 (FIFO_RESET_DISABLEx + 8)
#define PASS_GATE_SAVE_ENTRY                               (PERFORM_FIFO_RESET + 13)
#define PASS_GATE_EXIT                                     (PASS_GATE_SAVE_ENTRY + 124)
#define PASS_GATE_SET_ENTRY                                (PASS_GATE_EXIT + 130)
#define PASS_GATE_CPGC_STATIC_SETUP                        (PASS_GATE_SET_ENTRY + 222)
#define PASS_GATE_CPGC_VICTIMS_SETUP                       (PASS_GATE_CPGC_STATIC_SETUP + 259)
#define PASS_GATE_CPGC_AGG_WRITES_SETUP                    (PASS_GATE_CPGC_VICTIMS_SETUP + 76)
#define PASS_GATE_CPGC_AGG_READS_SETUP                     (PASS_GATE_CPGC_AGG_WRITES_SETUP + 19)
#define PASS_GATE_CPGC_AGGRESSOR_SETUP                     (PASS_GATE_CPGC_AGG_READS_SETUP + 19)
#define PASS_GATE_READ_RAPL_COUNTERS                       (PASS_GATE_CPGC_AGGRESSOR_SETUP + 50)
#define PASS_GATE_START_TEST                               (PASS_GATE_READ_RAPL_COUNTERS + 19)
#define PASS_GATE_STOP_TEST                                (PASS_GATE_START_TEST + 14)
#define CPGC_CLEAR_ERRORS                                  (PASS_GATE_STOP_TEST + 26)
#define SmbusAddressToCltt                                 (CPGC_CLEAR_ERRORS + 7)
#define PPR_ENTRY                                          (SmbusAddressToCltt + 29)
#define PPR_EXIT                                           (PPR_ENTRY + 48)
#define PPR_STATIC_SETUP                                   (PPR_EXIT + 26)
#define PPR_DYN_SETUP                                      (PPR_STATIC_SETUP + 510)
#define PPR_MODE                                           (PPR_DYN_SETUP + 21)
#define PPR_BASIC_WRITE                                    (PPR_MODE + 30)
#define PPR_BASIC_READ                                     (PPR_BASIC_WRITE + 15)
#define PPR_BASIC_WR_COMMON                                (PPR_BASIC_READ + 15)
#define INIT_ENTRY                                         (PPR_BASIC_WR_COMMON + 40)
#define INIT_EXIT                                          (INIT_ENTRY + 83)
#define INIT_DMAP                                          (INIT_EXIT + 68)
#define INIT_STATIC                                        (INIT_DMAP + 84)
#define INIT_SETUP                                         (INIT_STATIC + 184)
#define FIFO_RESET_ENABLE2                                 (INIT_SETUP + 13)
#define VOC_TRAINING_ENTRY                                 (FIFO_RESET_ENABLE2 + 7)
#define VOC_TRAINING_ENTRY_COMMON                          (VOC_TRAINING_ENTRY + 33)
#define VOC_PHY_INIT                                       (VOC_TRAINING_ENTRY_COMMON + 65)
#define VOC_PHY_INIT_COMMON                                (VOC_PHY_INIT + 15)
#define VOC_RCOMP                                          (VOC_PHY_INIT_COMMON + 74)
#define VOC_ENABLE_WLMODE                                  (VOC_RCOMP + 19)
#define VOC_DISABLE_WLMODE                                 (VOC_ENABLE_WLMODE + 22)
#define VOC_TRAINING_EXIT                                  (VOC_DISABLE_WLMODE + 22)
#define VOC_TRAINING_EXIT_COMMON                           (VOC_TRAINING_EXIT + 15)
#define DUMMY_VOC_SUBTASKS                                 (VOC_TRAINING_EXIT_COMMON + 56)
#define TxEqSet                                            (DUMMY_VOC_SUBTASKS + 139)
#define TxSwingBoostSet                                    (TxEqSet + 17)
#define BREAKPOINTMRC                                      (TxSwingBoostSet + 8)
#define DummyFunctionToCreateDynVariables                  (BREAKPOINTMRC + 30)
//
// All dynamic register names. Each of these will be written to during the Init phase of MSP.
//
#define DYN_DDRCC2_PHY_CTLCMD_AFE_CH0                      0
#define DYN_DDRCC2_PHY_CTLCMD_AFE_CH0_1                    1
#define DYN_DDRCC2_PHY_CTLCMD_AFE_CH1                      2
#define DYN_DDRCC2_PHY_CTLCMD_AFE_CH1_1                    3
#define DYN_DDRCC1_PHY_CLK_AFE_CH0                         4
#define DYN_DDRCC1_PHY_CLK_AFE_CH1                         5
#define DYN_DDRDQ_PHY_DIGCTL_BL0                           6
#define DYN_DDRDQ_PHY_DQSFSM_B0N0                          7
#define DYN_DDRDQ_PHY_DQSFSM_B0N0_1                        8
#define DYN_DDRDQ_PHY_DQSFSM_B0N1                          9
#define DYN_DDRDQ_PHY_DQSFSM_B0N1_1                        10
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N0                       11
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N0_1                     12
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N0_2                     13
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N1                       14
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N1_1                     15
#define DYN_DDRDQ_PHY_DRVENBCTL_B0N1_2                     16
#define DYN_DDRDQ_PHY_RDVLDCTL_BL0                         17
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0                        18
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_1                      19
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_2                      20
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_3                      21
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_4                      22
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_5                      23
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_6                      24
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_7                      25
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_8                      26
#define DYN_DDRDQ_PHY_RCVENCTL_B0N0_9                      27
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1                        28
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_1                      29
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_2                      30
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_3                      31
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_4                      32
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_5                      33
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_6                      34
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_7                      35
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_8                      36
#define DYN_DDRDQ_PHY_RCVENCTL_B0N1_9                      37
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0                       38
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_1                     39
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_2                     40
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_3                     41
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_4                     42
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_5                     43
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL0_6                     44
#define DYN_DDRDQ_PHY_RXODTENCTL_BL0                       45
#define DYN_DDRDQ_PHY_RXODTENCTL_BL0_1                     46
#define DYN_DDRDQ_PHY_RXODTENCTL_BL0_2                     47
#define DYN_DDRDQ_PHY_RXODTENCTL_BL0_3                     48
#define DYN_DDRDQ_PHY_RXODTENCTL_BL0_4                     49
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL0                      50
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL0_1                    51
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL0_2                    52
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0                       53
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_1                     54
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_2                     55
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_3                     56
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_4                     57
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_5                     58
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_6                     59
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1                       60
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_1                     61
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_2                     62
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_3                     63
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_4                     64
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_5                     65
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_6                     66
#define DYN_DDRDQ_PHY_DATLVL_BL0                           67
#define DYN_DDRDQ_PHY_RXVREFCFG_BL0                        68
#define DYN_DDRDQ_PHY_RXVREFCFG_BL0_1                      69
#define DYN_DDRDQ_PHY_DIGCTL_BL1                           70
#define DYN_DDRDQ_PHY_DQSFSM_B1N0                          71
#define DYN_DDRDQ_PHY_DQSFSM_B1N0_1                        72
#define DYN_DDRDQ_PHY_DQSFSM_B1N1                          73
#define DYN_DDRDQ_PHY_DQSFSM_B1N1_1                        74
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N0                       75
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N0_1                     76
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N0_2                     77
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N1                       78
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N1_1                     79
#define DYN_DDRDQ_PHY_DRVENBCTL_B1N1_2                     80
#define DYN_DDRDQ_PHY_RDVLDCTL_BL1                         81
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0                        82
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_1                      83
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_2                      84
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_3                      85
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_4                      86
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_5                      87
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_6                      88
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_7                      89
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_8                      90
#define DYN_DDRDQ_PHY_RCVENCTL_B1N0_9                      91
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1                        92
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_1                      93
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_2                      94
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_3                      95
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_4                      96
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_5                      97
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_6                      98
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_7                      99
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_8                      100
#define DYN_DDRDQ_PHY_RCVENCTL_B1N1_9                      101
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1                       102
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_1                     103
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_2                     104
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_3                     105
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_4                     106
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_5                     107
#define DYN_DDRDQ_PHY_DIFFAMPCTL_BL1_6                     108
#define DYN_DDRDQ_PHY_RXODTENCTL_BL1                       109
#define DYN_DDRDQ_PHY_RXODTENCTL_BL1_1                     110
#define DYN_DDRDQ_PHY_RXODTENCTL_BL1_2                     111
#define DYN_DDRDQ_PHY_RXODTENCTL_BL1_3                     112
#define DYN_DDRDQ_PHY_RXODTENCTL_BL1_4                     113
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL1                      114
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL1_1                    115
#define DYN_DDRDQ_PHY_RXODTSEGCTL_BL1_2                    116
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0                       117
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_1                     118
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_2                     119
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_3                     120
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_4                     121
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_5                     122
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_6                     123
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1                       124
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_1                     125
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_2                     126
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_3                     127
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_4                     128
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_5                     129
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_6                     130
#define DYN_DDRDQ_PHY_DATLVL_BL1                           131
#define DYN_DDRCC2_PHY_TXDLLCFG0                           132
#define DYN_DDRCC2_PHY_TXDLLCFG0_1                         133
#define DYN_DDRCC2_PHY_TXDLLCFG0_2                         134
#define DYN_DDRCC1_PHY_TXDLLCFG0                           135
#define DYN_DDRCC1_PHY_TXDLLCFG0_1                         136
#define DYN_DDRCC1_PHY_TXDLLCFG0_2                         137
#define DYN_DDRDQ_PHY_TXDLLCFG0                            138
#define DYN_DDRDQ_PHY_TXDLLCFG0_1                          139
#define DYN_DDRDQ_PHY_TXDLLCFG0_2                          140
#define DYN_DUNIT_DPMC1                                    141
#define DYN_AUNIT_MCHBAR_A_CR_SLICE_CHANNEL_HASH_0_0_0_MCHBAR 142
#define DYN_BUNIT_B_CR_SLICE_CHANNEL_HASH                  143
#define DYN_DUNIT_COMMON_DSCH                              144
#define DYN_DUNIT_DTR0                                     145
#define DYN_DUNIT_DTR1                                     146
#define DYN_DUNIT_DTR2                                     147
#define DYN_DUNIT_DTR7                                     148
#define DYN_DUNIT_DTR7_1                                   149
#define DYN_DUNIT_DTR7_2                                   150
#define DYN_DUNIT_DTR7_3                                   151
#define DYN_DUNIT_DTR7_4                                   152
#define DYN_DUNIT_DTR7_5                                   153
#define DYN_DUNIT_DTR7_6                                   154
#define DYN_DUNIT_DTR7_7                                   155
#define DYN_DUNIT_DTR3                                     156
#define DYN_DUNIT_DTR3_1                                   157
#define DYN_DUNIT_DTR3_2                                   158
#define DYN_DUNIT_DTR4                                     159
#define DYN_DUNIT_DTR5                                     160
#define DYN_DUNIT_DTR6                                     161
#define DYN_DUNIT_DTR6_1                                   162
#define DYN_DUNIT_DRP                                      163
#define DYN_DUNIT_COMMON_DXS_PARAM                         164
#define DYN_DUNIT_COMMON_DRFC2                             165
#define DYN_AUNIT_MCHBAR_A_CR_SLICE_CHANNEL_HASH_0_0_0_MCHBAR_1 166
#define DYN_BUNIT_B_CR_SLICE_CHANNEL_HASH_1                167
#define DYN_AUNIT_MCHBAR_A_CR_ASYM_MEM_REGION0_0_0_0_MCHBAR 168
#define DYN_AUNIT_MCHBAR_A_CR_ASYM_MEM_REGION1_0_0_0_MCHBAR 169
#define DYN_BUNIT_MCHBAR_B_CR_ASYM_MEM_REGION0_0_0_0_MCHBAR 170
#define DYN_BUNIT_MCHBAR_B_CR_ASYM_MEM_REGION1_0_0_0_MCHBAR 171
#define DYN_BUNITMEM_TOUUD_LO                              172
#define DYN_BUNITMEM_TOUUD_HI                              173
#define DYN_BUNITMEM_TOLUD                                 174
#define DYN_BUNITMEM_BGSM                                  175
#define DYN_BUNITMEM_TSEGMB                                176
#define DYN_DUNIT_DRP_1                                    177
#define DYN_DUNIT_DMAP_MISC                                178
#define DYN_DUNIT_DMAP1_MISC                               179
#define DYN_DUNIT_DMAP1                                    180
#define DYN_DUNIT_DMAP2_MISC                               181
#define DYN_DUNIT_DMAP3_MISC                               182
#define DYN_DUNIT_DMAP4_MISC                               183
#define DYN_DUNIT_DMAP5_MISC                               184
#define DYN_DUNIT_DPMC0                                    185
#define DYN_DUNIT_COMMON_DPMC                              186
#define DYN_DUNIT_COMMON_DPMC_1                            187
#define DYN_DUNIT_DPMC0_1                                  188
#define DYN_DUNIT_COMMON_DZQPARAM                          189
#define DYN_DUNIT_DTR6_2                                   190
#define DYN_DUNIT_DCS                                      191
#define DYN_DUNIT_DSCRMBL                                  192
#define DYN_DUNIT_RHP_LFSR_THRESHOLD0                      193
#define DYN_DUNIT_RHP_LFSR_THRESHOLD0_1                    194
#define DYN_DUNIT_RHP_LFSR_THRESHOLD1                      195
#define DYN_DUNIT_RHP_LFSR_THRESHOLD1_1                    196
#define DYN_DUNIT_RHP_LFSR_SEEDS                           197
#define DYN_DUNIT_RHP_LFSR_SEEDS_1                         198
#define DYN_DUNIT_RHP_CONTROL                              199
#define DYN_DUNIT_RHP_CONTROL_1                            200
#define DYN_DUNIT_RHP_CONTROL_2                            201
#define DYN_DUNIT_RHP_CONTROL_3                            202
#define DYN_DUNIT_DECCCTRL                                 203
#define DYN_DUNIT_COMMON_DSCH_1                            204
#define DYN_DUNIT_COMMON_DSCH_2                            205
#define DYN_DUNIT_DQUEUE                                   206
#define DYN_CPGC_CPGC_DPAT_EXTBUF0_REG                     207
#define DYN_CPGC_CPGC_DPAT_EXTBUF1_REG                     208
#define DYN_CPGC_CPGC_DPAT_EXTBUF2_REG                     209
#define DYN_CPGC_CPGC_DPAT_EXTBUF3_REG                     210
#define DYN_CPGC_CPGC_DPAT_EXTBUF4_REG                     211
#define DYN_CPGC_CPGC_DPAT_EXTBUF5_REG                     212
#define DYN_CPGC_CPGC_DPAT_EXTBUF6_REG                     213
#define DYN_CPGC_CPGC_DPAT_EXTBUF7_REG                     214
#define DYN_CPGC_CPGC_DPAT_EXTBUF8_REG                     215
#define DYN_CPGC_CPGC_DPAT_EXTBUF9_REG                     216
#define DYN_CPGC_CPGC_DPAT_EXTBUF10_REG                    217
#define DYN_CPGC_CPGC_DPAT_EXTBUF11_REG                    218
#define DYN_CPGC_CPGC_DPAT_EXTBUF12_REG                    219
#define DYN_CPGC_CPGC_DPAT_EXTBUF13_REG                    220
#define DYN_CPGC_CPGC_DPAT_EXTBUF14_REG                    221
#define DYN_CPGC_CPGC_DPAT_EXTBUF15_REG                    222
#define DYN_CPGC_CPGC_DPAT_EXTBUF0B_REG                    223
#define DYN_CPGC_CPGC_DPAT_EXTBUF1B_REG                    224
#define DYN_DUNIT_CORRERRTHRSHLD0                          225
#define DYN_DUNIT_CORRERRTHRSHLD1                          226
#define DYN_DUNIT_CORRERRTHRSHLD2                          227
#define DYN_DUNIT_CORRERRTHRSHLD3                          228
#define DYN_DUNIT_LEAKY_BUCKET_CFG0                        229
#define DYN_DUNIT_LEAKY_BUCKET_CFG1                        230
#define DYN_DUNIT_LEAKY_BUCKET_CFG2                        231
#define DYN_DUNIT_LEAKY_BUCKET_CFG3                        232
#define DYN_DUNIT_LEAKY_BUCKET_CNTR_UPPER                  233
#define DYN_DUNIT_LEAKY_BUCKET_CNTR_UPPER_1                234
#define DYN_DUNIT_LEAKY_BUCKET_CNTR_UPPER_2                235
#define DYN_DUNIT_LEAKY_BUCKET_CNTR_UPPER_3                236
#define DYN_DUNIT_RHP_MR2_SHADOW_REGISTERS                 237
#define DYN_DUNIT_RHP_MR2_SHADOW_REGISTERS_1               238
#define DYN_BUNIT_MCHBAR_B_CR_BMISC_0_0_0_MCHBAR           239
#define DYN_AUNIT_MCHBAR_A_CR_UNCERRMSK_0_0_0_MCHBAR       240
#define DYN_BUNIT_MCHBAR_B_CR_UNCERRMSK_0_0_0_MCHBAR       241
#define DYN_CLTT_CCR_CSMBM                                 242
#define DYN_PUNITSA_P_CR_MEM_THERM_TEMP_CONFIG_0_0_0_MCHBAR 243
#define DYN_PUNITSA_P_CR_MEM_THERM_THROT_CONFIG_0_0_0_MCHBAR 244
#define DYN_PUNITSA_P_CR_MEM_THERM_THROT_CONFIG_0_0_0_MCHBAR_1 245
#define DYN_PUNITSA_P_CR_MEMHOT_THERM_CONFIG_0_0_0_MCHBAR  246
#define DYN_PUNITSA_P_CR_MEM_THERM_CTRL_0_0_0_MCHBAR       247
#define DYN_DUNIT_DRAM_CMD                                 248
#define DYN_DUNIT_DRAM_CMD_1                               249
#define DYN_DUNIT_DRAM_CMD_2                               250
#define DYN_DUNIT_DRAM_CMD_3                               251
#define DYN_DUNIT_DRAM_CMD_4                               252
#define DYN_DUNIT_DRAM_CMD_5                               253
#define DYN_DUNIT_DRAM_CMD_6                               254
#define DYN_DUNIT_DRAM_CMD_7                               255
#define DYN_DUNIT_DRAM_CMD_8                               256
#define DYN_DUNIT_DRAM_CMD_9                               257
#define DYN_DUNIT_DRAM_CMD_10                              258
#define DYN_DUNIT_DRAM_CMD_11                              259
#define DYN_DUNIT_DRAM_CMD_12                              260
#define DYN_DUNIT_DRAM_CMD_13                              261
#define DYN_DUNIT_DRAM_CMD_14                              262
#define DYN_DUNIT_DRAM_CMD_15                              263
#define DYN_DUNIT_DRAM_CMD_16                              264
#define DYN_DUNIT_DRAM_CMD_17                              265
#define DYN_DUNIT_DRAM_CMD_18                              266
#define DYN_DUNIT_DRAM_CMD_19                              267
#define DYN_DUNIT_DRAM_CMD_20                              268
#define DYN_DUNIT_DRAM_CMD_21                              269
#define DYN_DUNIT_DRAM_CMD_22                              270
#define DYN_DUNIT_DRAM_CMD_23                              271
#define DYN_DUNIT_DRAM_CMD_24                              272
#define DYN_DUNIT_DRAM_CMD_25                              273
#define DYN_DUNIT_DRAM_CMD_26                              274
#define DYN_DUNIT_DRAM_CMD_27                              275
#define DYN_DUNIT_DRAM_CMD_28                              276
#define DYN_DUNIT_DRAM_CMD_29                              277
#define DYN_DUNIT_DRAM_CMD_30                              278
#define DYN_DUNIT_DRAM_CMD_31                              279
#define DYN_DUNIT_DRAM_CMD_32                              280
#define DYN_DUNIT_DRAM_CMD_33                              281
#define DYN_DUNIT_DRAM_CMD_34                              282
#define DYN_DUNIT_DRAM_CMD_35                              283
#define DYN_DUNIT_DRAM_CMD_36                              284
#define DYN_DUNIT_DRAM_CMD_37                              285
#define DYN_DUNIT_DRAM_CMD_38                              286
#define DYN_DUNIT_DRAM_CMD_39                              287
#define DYN_DUNIT_DRAM_CMD_40                              288
#define DYN_DUNIT_DRAM_CMD_41                              289
#define DYN_DUNIT_DRAM_CMD_42                              290
#define DYN_DUNIT_DRAM_CMD_43                              291
#define DYN_DUNIT_DRAM_CMD_44                              292
#define DYN_DUNIT_DRAM_CMD_45                              293
#define DYN_DUNIT_DRAM_CMD_46                              294
#define DYN_DUNIT_DRAM_CMD_47                              295
#define DYN_DUNIT_DRAM_CMD_48                              296
#define DYN_DUNIT_DRAM_CMD_49                              297
#define DYN_DUNIT_DRAM_CMD_50                              298
#define DYN_DUNIT_DRAM_CMD_51                              299
#define DYN_DUNIT_DRAM_CMD_52                              300
#define DYN_DUNIT_DRAM_CMD_53                              301
#define DYN_DUNIT_DRAM_CMD_54                              302
#define DYN_DUNIT_DRAM_CMD_55                              303
#define DYN_DUNIT_DRAM_CMD_56                              304
#define DYN_DUNIT_DRAM_CMD_57                              305
#define DYN_DUNIT_DRAM_CMD_58                              306
#define DYN_DUNIT_DRAM_CMD_59                              307
#define DYN_DUNIT_DRAM_CMD_60                              308
#define DYN_DUNIT_DRAM_CMD_61                              309
#define DYN_DUNIT_DRAM_CMD_62                              310
#define DYN_DUNIT_DRAM_CMD_63                              311
#define DYN_DUNIT_DRAM_CMD_64                              312
#define DYN_DUNIT_DRAM_CMD_65                              313
#define DYN_DUNIT_DRAM_CMD_66                              314
#define DYN_DUNIT_DRAM_CMD_67                              315
#define DYN_DUNIT_DRAM_CMD_68                              316
#define DYN_DUNIT_DRAM_CMD_69                              317
#define DYN_DUNIT_DRAM_CMD_70                              318
#define DYN_DUNIT_DRAM_CMD_71                              319
#define DYN_DUNIT_DRAM_CMD_72                              320
#define DYN_DUNIT_DRAM_CMD_73                              321
#define DYN_DUNIT_DRAM_CMD_74                              322
#define DYN_DUNIT_DRAM_CMD_75                              323
#define DYN_DUNIT_DRAM_CMD_76                              324
#define DYN_DUNIT_DRAM_CMD_77                              325
#define DYN_DUNIT_DRAM_CMD_78                              326
#define DYN_DUNIT_DRAM_CMD_79                              327
#define DYN_DUNIT_DRAM_CMD_80                              328
#define DYN_DUNIT_DRAM_CMD_81                              329
#define DYN_DUNIT_DRAM_CMD_82                              330
#define DYN_DUNIT_DRAM_CMD_83                              331
#define DYN_DUNIT_DRAM_CMD_84                              332
#define DYN_DUNIT_DRAM_CMD_85                              333
#define DYN_DUNIT_DRAM_CMD_86                              334
#define DYN_DUNIT_DRAM_CMD_87                              335
#define DYN_DUNIT_DRAM_CMD_88                              336
#define DYN_DUNIT_DRAM_CMD_89                              337
#define DYN_DUNIT_DRAM_CMD_90                              338
#define DYN_DUNIT_DRAM_CMD_91                              339
#define DYN_DUNIT_DRAM_CMD_92                              340
#define DYN_DUNIT_DRAM_CMD_93                              341
#define DYN_DUNIT_DRAM_CMD_94                              342
#define DYN_DUNIT_DRAM_CMD_95                              343
#define DYN_DUNIT_DRAM_CMD_96                              344
#define DYN_DUNIT_DRAM_CMD_97                              345
#define DYN_DUNIT_DRAM_CMD_98                              346
#define DYN_DUNIT_DRAM_CMD_99                              347
#define DYN_DUNIT_DRAM_CMD_100                             348
#define DYN_DUNIT_DRAM_CMD_101                             349
#define DYN_DUNIT_DRAM_CMD_102                             350
#define DYN_DUNIT_DRAM_CMD_103                             351
#define DYN_DUNIT_DRAM_CMD_104                             352
#define DYN_DUNIT_DRAM_CMD_105                             353
#define DYN_DUNIT_DRAM_CMD_106                             354
#define DYN_DUNIT_DRAM_CMD_107                             355
#define DYN_DUNIT_DRAM_CMD_108                             356
#define DYN_DUNIT_DRAM_CMD_109                             357
#define DYN_DUNIT_DRAM_CMD_110                             358
#define DYN_DUNIT_DRAM_CMD_111                             359
#define DYN_DUNIT_DRAM_CMD_112                             360
#define DYN_DUNIT_DRAM_CMD_113                             361
#define DYN_DUNIT_DRAM_CMD_114                             362
#define DYN_DUNIT_DRAM_CMD_115                             363
#define DYN_DUNIT_DRAM_CMD_116                             364
#define DYN_DUNIT_DRAM_CMD_117                             365
#define DYN_DUNIT_DRAM_CMD_118                             366
#define DYN_DUNIT_DRAM_CMD_119                             367
#define DYN_DUNIT_DRAM_CMD_120                             368
#define DYN_DUNIT_DRAM_CMD_121                             369
#define DYN_DUNIT_DRAM_CMD_122                             370
#define DYN_DUNIT_DRAM_CMD_123                             371
#define DYN_DUNIT_DRAM_CMD_124                             372
#define DYN_DUNIT_DRAM_CMD_125                             373
#define DYN_DUNIT_DECCCTRL_1                               374
#define DYN_BUNIT_MCHBAR_B_CR_BCTRL2                       375
#define DYN_DUNIT_DPATROL_SCRUB_TMR                        376
#define DYN_DUNIT_DPATROL_SCRUB_CFG                        377
#define DYN_PUNITSA_P_CR_DDR_RAPL_LIMIT_0_0_0_MCHBAR       378
#define DYN_PUNITSA_P_CR_DDR_RAPL_LIMIT_0_0_0_MCHBAR_1     379
#define DYN_DUNIT_DCS_1                                    380
#define DYN_DDRCC1_PHY_DPIC_GRCOMP_VREF_0                  381
#define DYN_DDRCC1_PHY_DPIC_GRCOMP_VREF_0_1                382
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_7                     383
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_8                     384
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_7                     385
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_8                     386
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_9                     387
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_10                    388
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_11                    389
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_12                    390
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N0_13                    391
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_9                     392
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_10                    393
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_11                    394
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_12                    395
#define DYN_DDRDQ_PHY_RK2RKCTL2_B0N1_13                    396
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_7                     397
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_8                     398
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_7                     399
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_8                     400
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_9                     401
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_10                    402
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_11                    403
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_12                    404
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N0_13                    405
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_9                     406
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_10                    407
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_11                    408
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_12                    409
#define DYN_DDRDQ_PHY_RK2RKCTL2_B1N1_13                    410
#define DYN_CPGC_CPGC_ERR_ECC_MASK                         411
#define DYN_CPGC_CPGC_SEQ_CFG_A                            412
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_A                        413
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_A                        414
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_A                        415
#define DYN_CPGC_CPGC_SUBSEQ3_CTL_A                        416
#define DYN_CPGC_CPGC_DPAT_CFG                             417
#define DYN_CPGC_CPGC_DPAT_XTRA_LFSR_CFG                   418
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_B                        419
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_B                        420
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_B                        421
#define DYN_CPGC_CPGC_SUBSEQ3_CTL_B                        422
#define DYN_CPGC_CPGC_DPAT_CFG_1                           423
#define DYN_CPGC_CPGC_SUBSEQ0_FIX                          424
#define DYN_CPGC_CPGC_SUBSEQ1_FIX                          425
#define DYN_CPGC_CPGC_SUBSEQ2_FIX                          426
#define DYN_CPGC_CPGC_SUBSEQ3_FIX                          427
#define DYN_CPGC_CPGC_DPAT_UNISEQ0                         428
#define DYN_CPGC_CPGC_DPAT_UNISEQ1                         429
#define DYN_CPGC_CPGC_SEQ_CFG_A_1                          430
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_A_1                      431
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_A_1                      432
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_1                        433
#define DYN_CPGC_CPGC_SUBSEQ1_FIX_1                        434
#define DYN_CPGC_CPGC_SUBSEQ2_FIX_1                        435
#define DYN_CPGC_CPGC_SUBSEQ2_VAR                          436
#define DYN_CPGC_CPGC_SUBSEQ3_FIX_1                        437
#define DYN_CPGC_CPGC_SUBSEQ3_VAR                          438
#define DYN_CPGC_CPGC_CADB_BUFA0                           439
#define DYN_CPGC_CPGC_CADB_BUFA1                           440
#define DYN_CPGC_CPGC_CADB_BUFA2                           441
#define DYN_CPGC_CPGC_CADB_BUFA3                           442
#define DYN_CPGC_CPGC_CADB_BUFA0_1                         443
#define DYN_CPGC_CPGC_CADB_BUFA1_1                         444
#define DYN_CPGC_CPGC_CADB_BUFA2_1                         445
#define DYN_CPGC_CPGC_CADB_BUFA3_1                         446
#define DYN_CPGC_CPGC_CADB_BUFB0                           447
#define DYN_CPGC_CPGC_CADB_BUFB1                           448
#define DYN_CPGC_CPGC_CADB_BUFB2                           449
#define DYN_CPGC_CPGC_CADB_BUFB3                           450
#define DYN_CPGC_CPGC_SUBSEQ0_VAR_REG                      451
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_REG                      452
#define DYN_CPGC_CPGC_SUBSEQ1_VAR_REG                      453
#define DYN_CPGC_CPGC_SUBSEQ1_FIX_REG                      454
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_B_1                      455
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_B_1                      456
#define DYN_CPGC_CPGC_SEQ_CFG_A_2                          457
#define DYN_CPGC_CPGC_DPAT_BUF_CTL                         458
#define DYN_DUNIT_DRAM_CMD_DDR4                            459
#define DYN_DUNIT_DRAM_CMD_DDR3                            460
#define DYN_DDRDQ_RCVENCTL_B0N0                            461
#define DYN_DDRDQ_RCVENCTL_B0N1                            462
#define DYN_DDRDQ_RCVENCTL_B0N0_1                          463
#define DYN_DDRDQ_RCVENCTL_B0N1_1                          464
#define DYN_DUNIT_DRAM_CMD_126                             465
#define DYN_DUNIT_DPDA_ENTRY_DRAM_CMD_MISC                 466
#define DYN_DUNIT_DPDA_DRAM_CMD_MISC                       467
#define DYN_DUNIT_DPDA_EXIT_DRAM_CMD_MISC                  468
#define DYN_DUNIT_DPDA_MODE_CONTROL                        469
#define DYN_DDRDQ_DQSFSM_B0N0                              470
#define DYN_DDRDQ_DQSFSM_B0N1                              471
#define DYN_DDRDQ_DQSFSM_B0N0_1                            472
#define DYN_DDRDQ_DQSFSM_B0N1_1                            473
#define DYN_DDRCC0_DIGCTL_CH0                              474
#define DYN_DDRCC2_DIGCTL_CH0                              475
#define DYN_DDRDQ_DIGCTL_BL0                               476
#define DYN_DUNIT_DCS_2                                    477
#define DYN_DDRDQ_RDVLDCTL_BL0                             478
#define DYN_DUNIT_DTR3_3                                   479
#define DYN_DUNIT_DTR6_3                                   480
#define DYN_DUNIT_COMMON_SSKPD4                            481
#define DYN_PMC_PCI_MMR_PCH_PM_STS                         482
#define DYN_DUNIT_COMMON_MRC_FLOW_SSKPD0                   483
#define DYN_CPGC_CPGC_DPAT_CFG_2                           484
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_2                        485
#define DYN_CPGC_CPGC_SUBSEQ1_FIX_2                        486
#define DYN_CPGC_CPGC_SUBSEQ2_FIX_2                        487
#define DYN_CPGC_CPGC_SUBSEQ3_FIX_2                        488
#define DYN_CPGC_CPGC_SEQ_CFG_A_3                          489
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_A_2                      490
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_A_2                      491
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_A_1                      492
#define DYN_CPGC_CPGC_SUBSEQ3_CTL_A_1                      493
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_3                        494
#define DYN_CPGC_CPGC_SUBSEQ1_FIX_3                        495
#define DYN_CPGC_CPGC_SUBSEQ2_FIX_3                        496
#define DYN_CPGC_CPGC_SUBSEQ3_FIX_3                        497
#define DYN_CPGC_CPGC_ERR_ECC_MASK_1                       498
#define DYN_CPGC_CPGC_DPAT_CFG_3                           499
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_B_2                      500
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_B_2                      501
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_B_1                      502
#define DYN_CPGC_CPGC_SUBSEQ3_CTL_B_1                      503
#define DYN_DUNIT_DRP_DATA                                 504
#define DYN_DUNIT_DMAP_MISC_1                              505
#define DYN_DUNIT_DMAP1_MISC_1                             506
#define DYN_DUNIT_DMAP2_MISC_1                             507
#define DYN_DUNIT_DMAP3_MISC_1                             508
#define DYN_DUNIT_DMAP4_MISC_1                             509
#define DYN_DUNIT_DMAP5_MISC_1                             510
#define DYN_DUNIT_COMMON_DZQPARAM_DATA                     511
#define DYN_DUNIT_DPMC0_DATA                               512
#define DYN_DUNIT_COMMON_DPMC_DATA                         513
#define DYN_DUNIT_DECCCTRL_DATA                            514
#define DYN_DUNIT_DPATROL_SCRUB_CFG_DATA                   515
#define DYN_DUNIT_DCS_DATA                                 516
#define DYN_DUNIT_COMMON_DRFC2_DATA                        517
#define DYN_DUNIT_COMMON_DRFC0_DATA                        518
#define DYN_DUNIT_DRAPLCTL_DATA                            519
#define DYN_DUNIT_DRAPLPWR0_DATA                           520
#define DYN_DUNIT_DRAPLPWR1_DATA                           521
#define DYN_DUNIT_COMMON_DSCH_DATA                         522
#define DYN_DUNIT_DMAP                                     523
#define DYN_DUNIT_DMAP1_1                                  524
#define DYN_DUNIT_DMAP2                                    525
#define DYN_DUNIT_DMAP3                                    526
#define DYN_DUNIT_DMAP4                                    527
#define DYN_CPGC_CPGC_DPAT_CFG_4                           528
#define DYN_CPGC_CPGC_ERR_ECC_MASK_2                       529
#define DYN_CPGC_CPGC_DPAT_UNISEQ0_1                       530
#define DYN_CPGC_CPGC_DPAT_UNISEQ1_1                       531
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_A_3                      532
#define DYN_CPGC_CPGC_SUBSEQ0_VAR                          533
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_4                        534
#define DYN_CPGC_CPGC_SUBSEQ1_CTL_A_3                      535
#define DYN_CPGC_CPGC_SUBSEQ1_VAR                          536
#define DYN_CPGC_CPGC_SUBSEQ1_FIX_4                        537
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_A_2                      538
#define DYN_CPGC_CPGC_SUBSEQ2_VAR_1                        539
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_A_3                      540
#define DYN_CPGC_CPGC_SUBSEQ2_VAR_2                        541
#define DYN_CPGC_CPGC_SUBSEQ2_CTL_A_4                      542
#define DYN_CPGC_CPGC_SUBSEQ2_FIX_4                        543
#define DYN_CLTT_CCR_C0D0CFGSTS                            544
#define DYN_CLTT_CCR_C0D1CFGSTS                            545
#define DYN_CLTT_CCR_C1D0CFGSTS                            546
#define DYN_CLTT_CCR_C1D1CFGSTS                            547
#define DYN_DUNIT_COMMON_DRFC2_DATA_1                      548
#define DYN_DUNIT_COMMON_DPMC_DATA_1                       549
#define DYN_DUNIT_DCS_3                                    550
#define DYN_CPGC_CPGC_ERR_ECC_MASK_3                       551
#define DYN_CPGC_CPGC_DPAT_CFG_5                           552
#define DYN_CPGC_CPGC_ERR_ECC_MASK_4                       553
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_5                        554
#define DYN_CPGC_CPGC_DPAT_INVDC_MASK_LO                   555
#define DYN_CPGC_CPGC_DPAT_INVDC_MASK_HI                   556
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_6                        557
#define DYN_DUNIT_COMMON_DPMC_DATA_2                       558
#define DYN_DUNIT_DCS_4                                    559
#define DYN_DUNIT_DRP_DATA_1                               560
#define DYN_DUNIT_DMAP_MISC_2                              561
#define DYN_DUNIT_DMAP1_MISC_2                             562
#define DYN_DUNIT_DMAP2_MISC_2                             563
#define DYN_DUNIT_DMAP3_MISC_2                             564
#define DYN_DUNIT_DMAP4_MISC_2                             565
#define DYN_DUNIT_DMAP5_MISC_2                             566
#define DYN_DUNIT_DRP_2                                    567
#define DYN_DUNIT_DMAP_1                                   568
#define DYN_DUNIT_DMAP4_1                                  569
#define DYN_CPGC_CPGC_SUBSEQ0_CTL_B_3                      570
#define DYN_CPGC_CPGC_DPAT_CFG_6                           571
#define DYN_CPGC_CPGC_ERR_ECC_MASK_5                       572
#define DYN_CPGC_CPGC_SUBSEQ0_VAR_REG_1                    573
#define DYN_CPGC_CPGC_SUBSEQ0_FIX_REG_1                    574
#define DYN_DDRDQ_DQ_LRCOMP_OVR2                           575
#define DYN_DDRDQ_DQ_LRCOMP_OVR2_1                         576
#define DYN_DDRDQ_RXODTENCTL_BL0                           577
#define DYN_DDRDQ_DIFFAMPCTL_BL0                           578
#define DYN_DDRDQ_DQ_LRCOMP_OVR0                           579
#define DYN_DDRCC1_DPIC_GRCOMP_VREF_0                      580
#define DYN_DDRDQ_DQ_LRCOMP_OVR2_2                         581
#define DYN_DDRDQ_DQ_LRCOMP_OVR0_1                         582
#define DYN_DDRDQ_DQ_LRCOMP_CTL3                           583
#define DYN_DDRDQ_DQ_LRCOMP_OVR2_3                         584
#define DYN_DDRDQ_DQ_LRCOMP_OVR0_2                         585
#define DYN_DDRDQ_DATLVL_BL0                               586
#define DYN_DDRDQ_DIGCTL_BL0_1                             587
#define DYN_DDRDQ_DXTX_BL0                                 588
//
// All dynamic field names. These must be populated with real values prior to executing
//
#define PHY_INIT_RUN                                       0
#define CH0_EN                                             1
#define CAPERR                                             2
#define CH1_EN                                             3
#define RDIMM_EN_0                                         4
#define RDIMM_EN_1                                         5
#define CH0_DIS                                            6
#define CH1_DIS                                            7
#define EARLY_DQ_EN_0                                      8
#define WL0                                                9
#define wr_pream0                                          10
#define RL0                                                11
#define IDLE_PULLUP_ENABLE_0                               12
#define RXVREF                                             13
#define EARLY_DQ_EN_1                                      14
#define WL1                                                15
#define wr_pream1                                          16
#define RL1                                                17
#define IDLE_PULLUP_ENABLE_1                               18
#define X8X8                                               19
#define X8X4                                               20
#define X4X8                                               21
#define X4X4                                               22
#define PIDRVSEL                                           23
#define DRVSEL                                             24
#define CPTRIM                                             25
#define DLL_WA_ENABLE                                      26
#define PMOP_LONG_VAR                                      27
#define TRTP                                               28
#define STRETCH                                            29
#define TWCL                                               30
#define TCL                                                31
#define TRCD_RD                                            32
#define TRCD_WR                                            33
#define TRP                                                34
#define BIBLIM                                             35
#define TRFC1MINUS3                                        36
#define TRFC0MINUS3                                        37
#define TWR                                                38
#define TRAS                                               39
#define TRWSR                                              40
#define TRWDD                                              41
#define TRWDR                                              42
#define TRRDD                                              43
#define TRRDR                                              44
#define TWO_CLK_WR_PREAMBLE                                45
#define TWO_CLK_RD_PREAMBLE                                46
#define TWTR_L                                             47
#define TWRDD                                              48
#define TWRDR                                              49
#define TWWDD                                              50
#define TWWDR                                              51
#define WRDATA_EARLY                                       52
#define TRRD_S                                             53
#define TRRD_L                                             54
#define DIMMTYPE                                           55
#define TCMD                                               56
#define TCCD_L_WR                                          57
#define TCCD_L_RD                                          58
#define TCCD_WR                                            59
#define TCCD_RD                                            60
#define WRODT_RANK3                                        61
#define WRODT_RANK2                                        62
#define WRODT_RANK1                                        63
#define WRODT_RANK0                                        64
#define RDODT_RANK3                                        65
#define RDODT_RANK2                                        66
#define RDODT_RANK1                                        67
#define RDODT_RANK0                                        68
#define ADDLAT                                             69
#define CRL                                                70
#define TFAW                                               71
#define TIMING_DLY                                         72
#define PARITY_DLY                                         73
#define TXPDLL_PD                                          74
#define TXP                                                75
#define SLOWEXIT                                           76
#define TCKE                                               77
#define DIMM1MIRR                                          78
#define DIMM0MIRR                                          79
#define DIMMDWID                                           80
#define TRFC                                               81
#define DMAP_X16                                           82
#define TREFI                                              83
#define TREFI_SHIFT                                        84
#define DISABLE_RK2RK                                      85
#define SLICE_HASH_MASK                                    86
#define INTERLEAVE_MODE                                    87
#define HVM_MODE                                           88
#define A_SLICE_CHANNEL_HASH                               89
#define SLICE0_ASYM_ENABLE                                 90
#define SLICE0_ASYM_LIMIT                                  91
#define SLICE0_ASYM_BASE                                   92
#define SLICE1_ASYM_ENABLE                                 93
#define SLICE1_ASYM_LIMIT                                  94
#define SLICE1_ASYM_BASE                                   95
#define TOUUD_LO                                           96
#define TOUUD_HI                                           97
#define TOLUD                                              98
#define TSEGMB                                             99
#define DIMMFLIP                                           100
#define DIMMDDEN1                                          101
#define DIMMDDEN0                                          102
#define RANK3_ENABLED                                      103
#define RANK2_ENABLED                                      104
#define RANK1_ENABLED                                      105
#define RANK0_ENABLED                                      106
#define MAP0                                               107
#define MAP1                                               108
#define BXOR                                               109
#define MAP2                                               110
#define MAP3                                               111
#define MAP4                                               112
#define MAP5                                               113
#define DYN_PMOP                                           114
#define SR_DELAY                                           115
#define CKE_POWER_DOWN_DIS                                 116
#define PAGE_CLOSE_TIMEOUT                                 117
#define DYN_SR                                             118
#define ZQCINT                                             119
#define SCRAMBLER_SUPPORTED                                120
#define SCRAMBLER_EN                                       121
#define SCRAMBLER_KEY                                      122
#define LFSR_MASK0                                         123
#define THRESHOLD0                                         124
#define LFSR_MASK1                                         125
#define THRESHOLD1                                         126
#define SEED2                                              127
#define SEED1                                              128
#define RH_EXIT                                            129
#define HALF_TRAS                                          130
#define SWIZZLED_DIMM                                      131
#define RHP_ENABLE                                         132
#define UCE_FILTER                                         133
#define CHANNEL_WIDTH_32                                   134
#define NEW_REQ_BYPASS_DISABLE                             135
#define OOODIS                                             136
#define RDCREDIT                                           137
#define MR0_1                                              138
#define MR0_0                                              139
#define MR0_3                                              140
#define MR0_2                                              141
#define MR1_1                                              142
#define MR1_0                                              143
#define MR1_3                                              144
#define MR1_2                                              145
#define MR2_1                                              146
#define MR2_0                                              147
#define MR2_3                                              148
#define MR2_2                                              149
#define MR3_1                                              150
#define MR3_0                                              151
#define MR3_3                                              152
#define MR3_2                                              153
#define MR4_1                                              154
#define MR4_0                                              155
#define MR4_3                                              156
#define MR4_2                                              157
#define MR5_1                                              158
#define MR5_0                                              159
#define MR5_3                                              160
#define MR5_2                                              161
#define MR6_1                                              162
#define MR6_0                                              163
#define MR6_3                                              164
#define MR6_2                                              165
#define MR7_1                                              166
#define MR7_0                                              167
#define MR7_3                                              168
#define MR7_2                                              169
#define MR8_1                                              170
#define MR8_0                                              171
#define MR8_3                                              172
#define MR8_2                                              173
#define CORR_ERR_THR_R0                                    174
#define CORR_ERR_THR_R1                                    175
#define CORR_ERR_THR_R2                                    176
#define CORR_ERR_THR_R3                                    177
#define LEAK_RATE_R0                                       178
#define LEAK_RATE_R1                                       179
#define LEAK_RATE_R2                                       180
#define LEAK_RATE_R3                                       181
#define BITS7_3_DIMM0                                      182
#define BITS12_9_DIMM0                                     183
#define BITS7_3_DIMM1                                      184
#define BITS12_9_DIMM1                                     185
#define SET_ABSEGINDRAM                                    186
#define SET_READ_FSEG_FROM_DRAM                            187
#define SET_READ_ESEG_FROM_DRAM                            188
#define PARITY_CHECK                                       189
#define MCI_IEH_N                                          190
#define RD_DATA_1                                          191
#define RD_DATA_2                                          192
#define TEMPVAR2                                           193
#define MEM_THERM_EN                                       194
#define CLTT_MODE                                          195
#define TEMP_HI                                            196
#define TEMP_MID                                           197
#define TEMP_LO                                            198
#define THRT_CRIT                                          199
#define THRT_HI                                            200
#define THRT_MID                                           201
#define MEM_THERM_TYPE                                     202
#define OLTT_THRT_BW                                       203
#define MTT_TEMP_VAR1                                      204
#define MEMHOT_THROT_LVL                                   205
#define MEMHOT_SET_DEFAULTS                                206
#define MEMHOT_TEMP_VAR1                                   207
#define MEM_THERM_MGMT_MODE                                208
#define EN_MEMTRIP                                         209
#define TEMP_MEMTRIP                                       210
#define MEMTRIP_TEMP_VAR1                                  211
#define RANK0_RDIMM                                        212
#define MR18_0                                             213
#define MR19_0                                             214
#define MR20_0                                             215
#define MR21_0                                             216
#define MR22_0                                             217
#define INPHI_REGISTER_0                                   218
#define MR30_0                                             219
#define MR31_0                                             220
#define MR32_0                                             221
#define MR23_0                                             222
#define MR34_0                                             223
#define MR24_0                                             224
#define MR26_0                                             225
#define MR27_0                                             226
#define MR28_0                                             227
#define RC3X_0                                             228
#define MR33_0                                             229
#define RANK2_RDIMM                                        230
#define MR18_2                                             231
#define MR19_2                                             232
#define MR20_2                                             233
#define MR21_2                                             234
#define MR22_2                                             235
#define INPHI_REGISTER_1                                   236
#define MR30_2                                             237
#define MR31_2                                             238
#define MR32_2                                             239
#define MR23_2                                             240
#define MR34_2                                             241
#define MR24_2                                             242
#define MR26_2                                             243
#define MR27_2                                             244
#define MR28_2                                             245
#define RC3X_1                                             246
#define MR33_2                                             247
#define MR25_0                                             248
#define MR29_0                                             249
#define MR25_2                                             250
#define MR29_2                                             251
#define MR13_0                                             252
#define MR9_0                                              253
#define MR17_0                                             254
#define MR16_0                                             255
#define MR15_0                                             256
#define MR14_0                                             257
#define MR12_0                                             258
#define MR11_0                                             259
#define MR10_0                                             260
#define RANK1_RDIMM                                        261
#define MR13_1                                             262
#define MR9_1                                              263
#define MR17_1                                             264
#define MR16_1                                             265
#define MR15_1                                             266
#define MR14_1                                             267
#define MR12_1                                             268
#define MR11_1                                             269
#define MR10_1                                             270
#define MR13_2                                             271
#define MR9_2                                              272
#define MR17_2                                             273
#define MR16_2                                             274
#define MR15_2                                             275
#define MR14_2                                             276
#define MR12_2                                             277
#define MR11_2                                             278
#define MR10_2                                             279
#define RANK3_RDIMM                                        280
#define MR13_3                                             281
#define MR9_3                                              282
#define MR17_3                                             283
#define MR16_3                                             284
#define MR15_3                                             285
#define MR14_3                                             286
#define MR12_3                                             287
#define MR11_3                                             288
#define MR10_3                                             289
#define WA_CAR_LAKE                                        290
#define IPROCTRIM                                          291
#define SINGLE_CHANNEL                                     292
#define TIMING_1N_SUPPORTED                                293
#define X4_SUPPORTED                                       294
#define X8_SUPPORTED                                       295
#define DDR4_SUPPORTED                                     296
#define DDR3_SUPPORTED                                     297
#define DOUBLE_RANK_SUPPORTED                              298
#define POPULATE_2DPC_SUPPORTED                            299
#define MAX_DEN_SUPPORTED                                  300
#define MAX_MEM_SUPPORTED                                  301
#define ECC_SUPPORTED                                      302
#define DDR_MAX_FREQ_LIMIT                                 303
#define DDR_CURRENT_FREQ                                   304
#define ECC_ENABLED                                        305
#define SERR_EN                                            306
#define DEMAND_SCRUB                                       307
#define SCRUB_TIMER                                        308
#define PATROL_SCRUB                                       309
#define DIMM1_COL_ADDR_BITS                                310
#define DIMM0_COL_ADDR_BITS                                311
#define DIMM1_MAX_ROW_ADDR                                 312
#define DIMM0_MAX_ROW_ADDR                                 313
#define MAX_PATSCRUB_DEBIT_CNT                             314
#define POWER_LIMIT_LOCK                                   315
#define TWX                                                316
#define TWY                                                317
#define POWER_LIMIT_EN                                     318
#define POWER_LIMIT                                        319
#define RAPL_LIMIT_MISC                                    320
#define COMP_VREF_DPC                                      321
#define COMP_VREF2_DPC                                     322
#define COMP_VREF3_DPC                                     323
#define VOC_COEF                                           324
#define ECC_MASK                                           325
#define ADVANCED_RD_WR                                     326
#define LOOP_COUNT                                         327
#define NUM_BURSTS                                         328
#define RELOAD_LFSR_SEED_RATE                              329
#define SAVE_LFSR_SEED_RATE                                330
#define LANE_ROTATE_RATE                                   331
#define BUS_WIDTH                                          332
#define ECC_DISABLED                                       333
#define FIX_SEGMENT_RANK_SELECT_0                          334
#define FIX_SEGMENT_RANK_SELECT_1                          335
#define VIC_PATTERN                                        336
#define AGG_PATTERN                                        337
#define SEQ_END                                            338
#define SEQ_START                                          339
#define FIX_SEGMENT_RANK_SELECT                            340
#define VAR_SEG_HIGHADDR_HI                                341
#define VAR_SEG_HIGHADDR_LO                                342
#define CADB_ROW_COL_0                                     343
#define CADB_ROW_COL_1                                     344
#define CADB_ROW_COL_2                                     345
#define CADB_ROW_COL_3                                     346
#define CADB_BANK_0                                        347
#define CADB_BANK_1                                        348
#define CADB_BANK_2                                        349
#define CADB_BANK_3                                        350
#define CADB_CMD_0                                         351
#define CADB_CMD_1                                         352
#define CADB_CMD_2                                         353
#define CADB_CMD_3                                         354
#define ECC_ERR_STAT                                       355
#define BYTEGRP_ERR_STAT                                   356
#define LANE_ERR_STAT03                                    357
#define LANE_ERR_STAT47                                    358
#define CHUNK_STAT                                         359
#define ENABLE_RUN_TEST                                    360
#define LANE_ERR_STAT_ECC                                  361
#define MEM_LOW_ADDRESS                                    362
#define TOTAL_CACHE_LINES                                  363
#define BUF_END_PTR                                        364
#define BUF_START_PTR                                      365
#define RANK_INDEX                                         366
#define RDCMD2RCVEN_LATENCY                                367
#define N0_RDCMD2RCVEN                                     368
#define N1_RDCMD2RCVEN                                     369
#define REG_DATA                                           370
#define PDA_ENTRY                                          371
#define PDA_CMD                                            372
#define PDA_EXIT                                           373
#define PDA_MASK                                           374
#define WRCMD2DQSSTART_LATENCY                             375
#define WRLVLMODEVAR                                       376
#define ODTVAL_FORCE_ON                                    377
#define TCMD_CMD                                           378
#define TXP_CMD                                            379
#define PATH_ENABLE                                        380
#define SPD_RESET_STATUS                                   381
#define SPD_RESET_PCODE                                    382
#define SPD_BIOS_RESET                                     383
#define CURRENT_SPD_SPEED                                  384
#define MRC_FLOW_STATUS                                    385
#define SPD_DDR_SPEED                                      386
#define MRC_SPD_FREQUENCY                                  387
#define MEM_SR                                             388
#define HOST_RST_STS                                       389
#define SKPD5                                              390
#define FIX_SEGMENT_RANK_BOGUS                             391
#define SEQ0_TYPE                                          392
#define SEQ1_TYPE                                          393
#define SEQ2_TYPE                                          394
#define SEQ3_TYPE                                          395
#define FIX_SEGMENT_RANK_SELECT_2                          396
#define FIX_SEGMENT_RANK_SELECT_3                          397
#define RMT_COMMAND                                        398
#define RMT_VALUE                                          399
#define PG_DRP                                             400
#define PG_DMAP                                            401
#define PG_DMAP_1                                          402
#define PG_DMAP_2                                          403
#define PG_DMAP_3                                          404
#define PG_DMAP_4                                          405
#define PG_DMAP_5                                          406
#define PG_DSCH                                            407
#define PG_DZQPARAM                                        408
#define PG_DPMC0                                           409
#define PG_DPMC                                            410
#define PG_DECCCTRL                                        411
#define PG_DPATROL_SCRUB                                   412
#define PG_DCS                                             413
#define PG_DRFC2                                           414
#define PG_DRFC0                                           415
#define PG_DRAPLCTL                                        416
#define PG_DRAPLWR0                                        417
#define PG_DRAPLWR1                                        418
#define PG_DIMMSEL                                         419
#define PG_RNKSEL                                          420
#define PG_BG1_SEL                                         421
#define PG_BNK_SEL                                         422
#define PG_COL11SEL                                        423
#define PG_ROW_SEL                                         424
#define PG_ROW_17SEL                                       425
#define PG_ROW_16SEL                                       426
#define PG_ROW_15SEL                                       427
#define PG_ROW_14SEL                                       428
#define PG_SELF_REFRESH                                    429
#define PG_ACTIVATE_CNT                                    430
#define PG_READ_CNT                                        431
#define PG_WRITE_CNT                                       432
#define PG_AGGRESSOR_PATTERN                               433
#define PG_VICTIM_PATTERN                                  434
#define PG_SUBSEQ_TYPE                                     435
#define PG_BURST                                           436
#define PG_VAR_HI_SHIFT                                    437
#define PG_VAR_LO_SHIFT                                    438
#define PG_VICTIM_ADDRESS_0                                439
#define PG_VICTIM_ADDRESS_1                                440
#define PG_BURST_CHARACTERIZE                              441
#define PG_VAR_HI_SHIFT_AGG_READS                          442
#define PG_VAR_LO_SHIFT_AGG_READS                          443
#define PG_SUBSEQ_WAIT                                     444
#define PG_AGGRESSOR_ADDRESS                               445
#define VALID_C0_D0                                        446
#define SLAVE_ID_C0_D0                                     447
#define VALID_C0_D1                                        448
#define SLAVE_ID_C0_D1                                     449
#define VALID_C1_D0                                        450
#define SLAVE_ID_C1_D0                                     451
#define VALID_C1_D1                                        452
#define SLAVE_ID_C1_D1                                     453
#define PPR_ROW17                                          454
#define PPR_ROW16                                          455
#define PPR_ROW15                                          456
#define PPR_ROW14                                          457
#define PPR_ROW13                                          458
#define PPR_ROW12                                          459
#define PPR_ROW11                                          460
#define PPR_ROW10                                          461
#define PPR_ROW9                                           462
#define PPR_ROW8                                           463
#define PPR_ROW7                                           464
#define PPR_ROW6                                           465
#define PPR_ROW5                                           466
#define PPR_ROW4                                           467
#define PPR_ROW3                                           468
#define PPR_ROW2                                           469
#define PPR_ROW1                                           470
#define PPR_ROW0                                           471
#define PPR_RS1                                            472
#define PPR_RS0                                            473
#define PPR_BG1                                            474
#define PPR_BG0                                            475
#define PPR_BA1                                            476
#define PPR_BA0                                            477
#define PPR_FAIL_ADDRESS                                   478
#define PPR_INV_DC_MASK_LOW                                479
#define PPR_INV_DC_MASK_HIGH                               480
#define INIT_DIMMDDEN                                      481
#define INIT_DIMMDWID                                      482
#define START_ADDRESS                                      483
#define WRAP_ADDRESS                                       484
#define RESTORE_VAL_0                                      485
#define RESTORE_VAL_1                                      486
#define RESTORE_VAL_2                                      487
#define RESTORE_VAL_3                                      488
#define RESTORE_VAL_4                                      489
#define RESTORE_VAL_5                                      490
#define RESTORE_VAL_6                                      491
#define RESTORE_VAL_7                                      492
#define RESTORE_VAL_8                                      493
#define RESTORE_VAL_9                                      494
#define RESTORE_VAL_10                                     495
#define RESTORE_VAL_11                                     496
#define PU_CODE_GRP2                                       497
#define PD_CODE_GRP2                                       498
#define TX_EQ_EN                                           499
#define TX_EQ_COEF                                         500
#define TX_SWING_BIAS_CTL                                  501
#define TX_IMODE_COEFF                                     502
#define EXE_BREAKPOINT                                     503
#define DESTROY_CONTENT_S0                                 504
#define MR18_1                                             505
#define MR19_1                                             506
#define MR20_1                                             507
#define MR21_1                                             508
#define MR22_1                                             509
#define MR23_1                                             510
#define MR24_1                                             511
#define MR25_1                                             512
#define MR26_1                                             513
#define MR27_1                                             514
#define MR28_1                                             515
#define MR29_1                                             516
#define MR30_1                                             517
#define MR31_1                                             518
#define MR32_1                                             519
#define MR33_1                                             520
#define MR34_1                                             521
#define MR18_3                                             522
#define MR19_3                                             523
#define MR20_3                                             524
#define MR21_3                                             525
#define MR22_3                                             526
#define MR23_3                                             527
#define MR24_3                                             528
#define MR25_3                                             529
#define MR26_3                                             530
#define MR27_3                                             531
#define MR28_3                                             532
#define MR29_3                                             533
#define MR30_3                                             534
#define MR31_3                                             535
#define MR32_3                                             536
#define MR33_3                                             537
#define MR34_3                                             538
#define MCHBAR                                             539
#define P2SBBAR                                            540
#define PMCBAR                                             541
#define DYNVAR_MAX                                         542

#include "CPGC.h"
#include "BUNITMEM.h"
#include "DUNIT.h"
#include "DUNIT_COMMON.h"
#include "AUNIT_MCHBAR.h"
#include "PUNITSA.h"
#include "BUNIT_MCHBAR.h"
#include "DDRDQ.h"
#include "DDRDQ_PHY.h"
#include "AUNIT_MSG_MAP_1.h"
#include "BUNIT.h"
#include "BUNIT_MSG_MAP_0.h"
#include "CLTT_CCR.h"
#include "DDRCC0.h"
#include "DDRCC1.h"
#include "DDRCC1_PHY.h"
#include "DDRCC2.h"
#include "DDRCC2_PHY.h"
#include "DDRPLL.h"
#include "DDRSAI.h"
#include "PMC_PCI_CFG.h"
#include "PMC_PCI_MMR.h"
#include "SUNIT.h"


#endif // _MMRCPROJECTDEFINITIONSGENERATED_H_
